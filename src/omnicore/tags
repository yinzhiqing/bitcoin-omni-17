!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.9~svn20110310	//
ACCEPT_RESERVE	tally.h	/^    ACCEPT_RESERVE = 2,$/;"	e	line:11	enum:TallyType
ADD	tx.h	/^        ADD                 = 1,$/;"	e	line:175	enum:CMPTransaction::ActionTypes
ADDED	mdex.cpp	/^    ADDED,$/;"	e	line:72	enum:MatchReturnType	file:
ADD_SERIALIZE_METHODS	dbspinfo.h	/^        ADD_SERIALIZE_METHODS;$/;"	m	line:89	struct:CMPSPInfo::Entry	access:public
ALERT_BLOCKTIME_EXPIRY	notifications.h	11;"	d	line:11
ALERT_BLOCK_EXPIRY	notifications.h	10;"	d	line:10
ALERT_CLIENT_VERSION_EXPIRY	notifications.h	12;"	d	line:12
ALERT_FEATURE_UNSUPPORTED	notifications.h	9;"	d	line:9
AcceptMap	dex.h	/^typedef std::map<std::string, CMPAccept> AcceptMap;$/;"	t	line:223	namespace:mastercore
ActionTypes	tx.h	/^    enum ActionTypes$/;"	g	line:165	class:CMPTransaction	access:public
ActivateFeature	rules.cpp	/^bool ActivateFeature(uint16_t featureId, int activationBlock, uint32_t minClientVersion, int transactionBlock)$/;"	f	line:392	namespace:mastercore	signature:(uint16_t featureId, int activationBlock, uint32_t minClientVersion, int transactionBlock)
AddAlert	notifications.cpp	/^void AddAlert(const std::string& sender, uint16_t alertType, uint32_t alertExpiry, const std::string& alertMessage)$/;"	f	line:60	namespace:mastercore	signature:(const std::string& sender, uint16_t alertType, uint32_t alertExpiry, const std::string& alertMessage)
AddFee	dbfees.cpp	/^void COmniFeeCache::AddFee(const uint32_t &propertyId, int block, const int64_t &amount)$/;"	f	line:111	class:COmniFeeCache	signature:(const uint32_t &propertyId, int block, const int64_t &amount)
AddPendingActivation	activation.cpp	/^void AddPendingActivation(uint16_t featureId, int activationBlock, uint32_t minClientVersion, const std::string& featureName)$/;"	f	line:64	namespace:mastercore	signature:(uint16_t featureId, int activationBlock, uint32_t minClientVersion, const std::string& featureName)
AddressToBytes	createpayload.cpp	/^static std::vector<unsigned char> AddressToBytes(const std::string& address)$/;"	f	line:31	file:	signature:(const std::string& address)
AddressToPubKey	walletutils.cpp	/^bool AddressToPubKey(const std::string& key, CPubKey& pubKey)$/;"	f	line:35	namespace:mastercore	signature:(const std::string& key, CPubKey& pubKey)
AlertData	notifications.h	/^struct AlertData$/;"	s	line:18	namespace:mastercore
BALANCE	tally.h	/^    BALANCE = 0,$/;"	e	line:9	enum:TallyType
BOOST_AUTO_TEST_CASE	test/alert_tests.cpp	/^BOOST_AUTO_TEST_CASE(alert_authorize_any_source)$/;"	f	line:61	signature:(alert_authorize_any_source)
BOOST_AUTO_TEST_CASE	test/alert_tests.cpp	/^BOOST_AUTO_TEST_CASE(alert_manual_sources)$/;"	f	line:38	signature:(alert_manual_sources)
BOOST_AUTO_TEST_CASE	test/alert_tests.cpp	/^BOOST_AUTO_TEST_CASE(alert_positive_authorization)$/;"	f	line:23	signature:(alert_positive_authorization)
BOOST_AUTO_TEST_CASE	test/alert_tests.cpp	/^BOOST_AUTO_TEST_CASE(alert_unauthorized_source)$/;"	f	line:32	signature:(alert_unauthorized_source)
BOOST_AUTO_TEST_CASE	test/checkpoint_tests.cpp	/^BOOST_AUTO_TEST_CASE(consensus_string_accept)$/;"	f	line:65	signature:(consensus_string_accept)
BOOST_AUTO_TEST_CASE	test/checkpoint_tests.cpp	/^BOOST_AUTO_TEST_CASE(consensus_string_crowdsale)$/;"	f	line:84	signature:(consensus_string_crowdsale)
BOOST_AUTO_TEST_CASE	test/checkpoint_tests.cpp	/^BOOST_AUTO_TEST_CASE(consensus_string_mdex)$/;"	f	line:72	signature:(consensus_string_mdex)
BOOST_AUTO_TEST_CASE	test/checkpoint_tests.cpp	/^BOOST_AUTO_TEST_CASE(consensus_string_offer)$/;"	f	line:54	signature:(consensus_string_offer)
BOOST_AUTO_TEST_CASE	test/checkpoint_tests.cpp	/^BOOST_AUTO_TEST_CASE(consensus_string_property_issuer)$/;"	f	line:95	signature:(consensus_string_property_issuer)
BOOST_AUTO_TEST_CASE	test/checkpoint_tests.cpp	/^BOOST_AUTO_TEST_CASE(consensus_string_tally)$/;"	f	line:35	signature:(consensus_string_tally)
BOOST_AUTO_TEST_CASE	test/checkpoint_tests.cpp	/^BOOST_AUTO_TEST_CASE(get_checkpoints)$/;"	f	line:101	signature:(get_checkpoints)
BOOST_AUTO_TEST_CASE	test/create_payload_tests.cpp	/^BOOST_AUTO_TEST_CASE(payload_accept_dex_offer)$/;"	f	line:117	signature:(payload_accept_dex_offer)
BOOST_AUTO_TEST_CASE	test/create_payload_tests.cpp	/^BOOST_AUTO_TEST_CASE(payload_change_property_manager)$/;"	f	line:377	signature:(payload_change_property_manager)
BOOST_AUTO_TEST_CASE	test/create_payload_tests.cpp	/^BOOST_AUTO_TEST_CASE(payload_close_crowdsale)$/;"	f	line:247	signature:(payload_close_crowdsale)
BOOST_AUTO_TEST_CASE	test/create_payload_tests.cpp	/^BOOST_AUTO_TEST_CASE(payload_create_crowdsale)$/;"	f	line:181	signature:(payload_create_crowdsale)
BOOST_AUTO_TEST_CASE	test/create_payload_tests.cpp	/^BOOST_AUTO_TEST_CASE(payload_create_crowdsale_empty)$/;"	f	line:205	signature:(payload_create_crowdsale_empty)
BOOST_AUTO_TEST_CASE	test/create_payload_tests.cpp	/^BOOST_AUTO_TEST_CASE(payload_create_crowdsale_full)$/;"	f	line:226	signature:(payload_create_crowdsale_full)
BOOST_AUTO_TEST_CASE	test/create_payload_tests.cpp	/^BOOST_AUTO_TEST_CASE(payload_create_managed_property)$/;"	f	line:256	signature:(payload_create_managed_property)
BOOST_AUTO_TEST_CASE	test/create_payload_tests.cpp	/^BOOST_AUTO_TEST_CASE(payload_create_managed_property_empty)$/;"	f	line:275	signature:(payload_create_managed_property_empty)
BOOST_AUTO_TEST_CASE	test/create_payload_tests.cpp	/^BOOST_AUTO_TEST_CASE(payload_create_managed_property_full)$/;"	f	line:291	signature:(payload_create_managed_property_full)
BOOST_AUTO_TEST_CASE	test/create_payload_tests.cpp	/^BOOST_AUTO_TEST_CASE(payload_create_property)$/;"	f	line:127	signature:(payload_create_property)
BOOST_AUTO_TEST_CASE	test/create_payload_tests.cpp	/^BOOST_AUTO_TEST_CASE(payload_create_property_empty)$/;"	f	line:147	signature:(payload_create_property_empty)
BOOST_AUTO_TEST_CASE	test/create_payload_tests.cpp	/^BOOST_AUTO_TEST_CASE(payload_create_property_full)$/;"	f	line:164	signature:(payload_create_property_full)
BOOST_AUTO_TEST_CASE	test/create_payload_tests.cpp	/^BOOST_AUTO_TEST_CASE(payload_dex_offer)$/;"	f	line:55	signature:(payload_dex_offer)
BOOST_AUTO_TEST_CASE	test/create_payload_tests.cpp	/^BOOST_AUTO_TEST_CASE(payload_disable_freezing)$/;"	f	line:395	signature:(payload_disable_freezing)
BOOST_AUTO_TEST_CASE	test/create_payload_tests.cpp	/^BOOST_AUTO_TEST_CASE(payload_enable_freezing)$/;"	f	line:386	signature:(payload_enable_freezing)
BOOST_AUTO_TEST_CASE	test/create_payload_tests.cpp	/^BOOST_AUTO_TEST_CASE(payload_feature_activation)$/;"	f	line:437	signature:(payload_feature_activation)
BOOST_AUTO_TEST_CASE	test/create_payload_tests.cpp	/^BOOST_AUTO_TEST_CASE(payload_feature_deactivation)$/;"	f	line:428	signature:(payload_feature_deactivation)
BOOST_AUTO_TEST_CASE	test/create_payload_tests.cpp	/^BOOST_AUTO_TEST_CASE(payload_freeze_tokens)$/;"	f	line:404	signature:(payload_freeze_tokens)
BOOST_AUTO_TEST_CASE	test/create_payload_tests.cpp	/^BOOST_AUTO_TEST_CASE(payload_grant_tokens)$/;"	f	line:307	signature:(payload_grant_tokens)
BOOST_AUTO_TEST_CASE	test/create_payload_tests.cpp	/^BOOST_AUTO_TEST_CASE(payload_grant_tokens_empty)$/;"	f	line:320	signature:(payload_grant_tokens_empty)
BOOST_AUTO_TEST_CASE	test/create_payload_tests.cpp	/^BOOST_AUTO_TEST_CASE(payload_grant_tokens_full)$/;"	f	line:331	signature:(payload_grant_tokens_full)
BOOST_AUTO_TEST_CASE	test/create_payload_tests.cpp	/^BOOST_AUTO_TEST_CASE(payload_meta_dex_cancel_at_price)$/;"	f	line:83	signature:(payload_meta_dex_cancel_at_price)
BOOST_AUTO_TEST_CASE	test/create_payload_tests.cpp	/^BOOST_AUTO_TEST_CASE(payload_meta_dex_cancel_ecosystem)$/;"	f	line:107	signature:(payload_meta_dex_cancel_ecosystem)
BOOST_AUTO_TEST_CASE	test/create_payload_tests.cpp	/^BOOST_AUTO_TEST_CASE(payload_meta_dex_cancel_pair)$/;"	f	line:96	signature:(payload_meta_dex_cancel_pair)
BOOST_AUTO_TEST_CASE	test/create_payload_tests.cpp	/^BOOST_AUTO_TEST_CASE(payload_meta_dex_new_trade)$/;"	f	line:70	signature:(payload_meta_dex_new_trade)
BOOST_AUTO_TEST_CASE	test/create_payload_tests.cpp	/^BOOST_AUTO_TEST_CASE(payload_omnicore_alert_block)$/;"	f	line:448	signature:(payload_omnicore_alert_block)
BOOST_AUTO_TEST_CASE	test/create_payload_tests.cpp	/^BOOST_AUTO_TEST_CASE(payload_omnicore_alert_blockexpiry)$/;"	f	line:459	signature:(payload_omnicore_alert_blockexpiry)
BOOST_AUTO_TEST_CASE	test/create_payload_tests.cpp	/^BOOST_AUTO_TEST_CASE(payload_omnicore_alert_minclient)$/;"	f	line:470	signature:(payload_omnicore_alert_minclient)
BOOST_AUTO_TEST_CASE	test/create_payload_tests.cpp	/^BOOST_AUTO_TEST_CASE(payload_revoke_tokens)$/;"	f	line:342	signature:(payload_revoke_tokens)
BOOST_AUTO_TEST_CASE	test/create_payload_tests.cpp	/^BOOST_AUTO_TEST_CASE(payload_revoke_tokens_empty)$/;"	f	line:355	signature:(payload_revoke_tokens_empty)
BOOST_AUTO_TEST_CASE	test/create_payload_tests.cpp	/^BOOST_AUTO_TEST_CASE(payload_revoke_tokens_full)$/;"	f	line:366	signature:(payload_revoke_tokens_full)
BOOST_AUTO_TEST_CASE	test/create_payload_tests.cpp	/^BOOST_AUTO_TEST_CASE(payload_send_all)$/;"	f	line:46	signature:(payload_send_all)
BOOST_AUTO_TEST_CASE	test/create_payload_tests.cpp	/^BOOST_AUTO_TEST_CASE(payload_send_to_owners)$/;"	f	line:24	signature:(payload_send_to_owners)
BOOST_AUTO_TEST_CASE	test/create_payload_tests.cpp	/^BOOST_AUTO_TEST_CASE(payload_send_to_owners_v1)$/;"	f	line:35	signature:(payload_send_to_owners_v1)
BOOST_AUTO_TEST_CASE	test/create_payload_tests.cpp	/^BOOST_AUTO_TEST_CASE(payload_simple_send)$/;"	f	line:14	signature:(payload_simple_send)
BOOST_AUTO_TEST_CASE	test/create_payload_tests.cpp	/^BOOST_AUTO_TEST_CASE(payload_unfreeze_tokens)$/;"	f	line:416	signature:(payload_unfreeze_tokens)
BOOST_AUTO_TEST_CASE	test/create_tx_tests.cpp	/^BOOST_AUTO_TEST_CASE(omnitxbuilder_empty)$/;"	f	line:197	signature:(omnitxbuilder_empty)
BOOST_AUTO_TEST_CASE	test/create_tx_tests.cpp	/^BOOST_AUTO_TEST_CASE(omnitxbuilder_from_existing)$/;"	f	line:205	signature:(omnitxbuilder_from_existing)
BOOST_AUTO_TEST_CASE	test/create_tx_tests.cpp	/^BOOST_AUTO_TEST_CASE(omnitxbuilder_op_return)$/;"	f	line:220	signature:(omnitxbuilder_op_return)
BOOST_AUTO_TEST_CASE	test/create_tx_tests.cpp	/^BOOST_AUTO_TEST_CASE(txbuilder_add_change)$/;"	f	line:118	signature:(txbuilder_add_change)
BOOST_AUTO_TEST_CASE	test/create_tx_tests.cpp	/^BOOST_AUTO_TEST_CASE(txbuilder_add_change_position)$/;"	f	line:162	signature:(txbuilder_add_change_position)
BOOST_AUTO_TEST_CASE	test/create_tx_tests.cpp	/^BOOST_AUTO_TEST_CASE(txbuilder_add_input)$/;"	f	line:60	signature:(txbuilder_add_input)
BOOST_AUTO_TEST_CASE	test/create_tx_tests.cpp	/^BOOST_AUTO_TEST_CASE(txbuilder_add_outpoint)$/;"	f	line:46	signature:(txbuilder_add_outpoint)
BOOST_AUTO_TEST_CASE	test/create_tx_tests.cpp	/^BOOST_AUTO_TEST_CASE(txbuilder_add_output)$/;"	f	line:74	signature:(txbuilder_add_output)
BOOST_AUTO_TEST_CASE	test/create_tx_tests.cpp	/^BOOST_AUTO_TEST_CASE(txbuilder_add_outputs)$/;"	f	line:93	signature:(txbuilder_add_outputs)
BOOST_AUTO_TEST_CASE	test/create_tx_tests.cpp	/^BOOST_AUTO_TEST_CASE(txbuilder_empty)$/;"	f	line:26	signature:(txbuilder_empty)
BOOST_AUTO_TEST_CASE	test/create_tx_tests.cpp	/^BOOST_AUTO_TEST_CASE(txbuilder_from_existing)$/;"	f	line:34	signature:(txbuilder_from_existing)
BOOST_AUTO_TEST_CASE	test/crowdsale_participation_tests.cpp	/^BOOST_AUTO_TEST_CASE(max_limits)$/;"	f	line:48	signature:(max_limits)
BOOST_AUTO_TEST_CASE	test/crowdsale_participation_tests.cpp	/^BOOST_AUTO_TEST_CASE(negative_time)$/;"	f	line:71	signature:(negative_time)
BOOST_AUTO_TEST_CASE	test/crowdsale_participation_tests.cpp	/^BOOST_AUTO_TEST_CASE(overpayment_close)$/;"	f	line:13	signature:(overpayment_close)
BOOST_AUTO_TEST_CASE	test/dex_purchase_tests.cpp	/^BOOST_AUTO_TEST_CASE(overflow_protection)$/;"	f	line:72	signature:(overflow_protection)
BOOST_AUTO_TEST_CASE	test/dex_purchase_tests.cpp	/^BOOST_AUTO_TEST_CASE(purchase_amount_exact)$/;"	f	line:18	signature:(purchase_amount_exact)
BOOST_AUTO_TEST_CASE	test/dex_purchase_tests.cpp	/^BOOST_AUTO_TEST_CASE(purchase_amount_fraction)$/;"	f	line:64	signature:(purchase_amount_fraction)
BOOST_AUTO_TEST_CASE	test/dex_purchase_tests.cpp	/^BOOST_AUTO_TEST_CASE(purchase_amount_ladder)$/;"	f	line:31	signature:(purchase_amount_ladder)
BOOST_AUTO_TEST_CASE	test/encoding_b_tests.cpp	/^BOOST_AUTO_TEST_CASE(class_b_empty)$/;"	f	line:20	signature:(class_b_empty)
BOOST_AUTO_TEST_CASE	test/encoding_b_tests.cpp	/^BOOST_AUTO_TEST_CASE(class_b_maidsafe)$/;"	f	line:36	signature:(class_b_maidsafe)
BOOST_AUTO_TEST_CASE	test/encoding_b_tests.cpp	/^BOOST_AUTO_TEST_CASE(class_b_tetherus)$/;"	f	line:118	signature:(class_b_tetherus)
BOOST_AUTO_TEST_CASE	test/encoding_c_tests.cpp	/^BOOST_AUTO_TEST_CASE(class_c_marker)$/;"	f	line:21	signature:(class_c_marker)
BOOST_AUTO_TEST_CASE	test/encoding_c_tests.cpp	/^BOOST_AUTO_TEST_CASE(class_c_with_empty_payload)$/;"	f	line:75	signature:(class_c_with_empty_payload)
BOOST_AUTO_TEST_CASE	test/exodus_tests.cpp	/^BOOST_AUTO_TEST_CASE(exodus_address_mainnet)$/;"	f	line:16	signature:(exodus_address_mainnet)
BOOST_AUTO_TEST_CASE	test/exodus_tests.cpp	/^BOOST_AUTO_TEST_CASE(exodus_address_regtest)$/;"	f	line:48	signature:(exodus_address_regtest)
BOOST_AUTO_TEST_CASE	test/exodus_tests.cpp	/^BOOST_AUTO_TEST_CASE(exodus_address_testnet)$/;"	f	line:36	signature:(exodus_address_testnet)
BOOST_AUTO_TEST_CASE	test/exodus_tests.cpp	/^BOOST_AUTO_TEST_CASE(exodus_crowdsale_address_mainnet)$/;"	f	line:24	signature:(exodus_crowdsale_address_mainnet)
BOOST_AUTO_TEST_CASE	test/exodus_tests.cpp	/^BOOST_AUTO_TEST_CASE(exodus_crowdsale_address_regtest)$/;"	f	line:84	signature:(exodus_crowdsale_address_regtest)
BOOST_AUTO_TEST_CASE	test/exodus_tests.cpp	/^BOOST_AUTO_TEST_CASE(exodus_crowdsale_address_testnet)$/;"	f	line:60	signature:(exodus_crowdsale_address_testnet)
BOOST_AUTO_TEST_CASE	test/lock_tests.cpp	/^BOOST_AUTO_TEST_CASE(multithread_locking)$/;"	f	line:33	signature:(multithread_locking)
BOOST_AUTO_TEST_CASE	test/marker_tests.cpp	/^BOOST_AUTO_TEST_CASE(class_class_a)$/;"	f	line:96	signature:(class_class_a)
BOOST_AUTO_TEST_CASE	test/marker_tests.cpp	/^BOOST_AUTO_TEST_CASE(class_class_b)$/;"	f	line:156	signature:(class_class_b)
BOOST_AUTO_TEST_CASE	test/marker_tests.cpp	/^BOOST_AUTO_TEST_CASE(class_class_c)$/;"	f	line:221	signature:(class_class_c)
BOOST_AUTO_TEST_CASE	test/marker_tests.cpp	/^BOOST_AUTO_TEST_CASE(class_no_marker)$/;"	f	line:19	signature:(class_no_marker)
BOOST_AUTO_TEST_CASE	test/mbstring_tests.cpp	/^BOOST_AUTO_TEST_CASE(continuations_2_byte)$/;"	f	line:183	signature:(continuations_2_byte)
BOOST_AUTO_TEST_CASE	test/mbstring_tests.cpp	/^BOOST_AUTO_TEST_CASE(continuations_3_byte)$/;"	f	line:203	signature:(continuations_3_byte)
BOOST_AUTO_TEST_CASE	test/mbstring_tests.cpp	/^BOOST_AUTO_TEST_CASE(continuations_4_byte)$/;"	f	line:221	signature:(continuations_4_byte)
BOOST_AUTO_TEST_CASE	test/mbstring_tests.cpp	/^BOOST_AUTO_TEST_CASE(continuations_other)$/;"	f	line:241	signature:(continuations_other)
BOOST_AUTO_TEST_CASE	test/mbstring_tests.cpp	/^BOOST_AUTO_TEST_CASE(impossible)$/;"	f	line:252	signature:(impossible)
BOOST_AUTO_TEST_CASE	test/mbstring_tests.cpp	/^BOOST_AUTO_TEST_CASE(len_unchecked)$/;"	f	line:38	signature:(len_unchecked)
BOOST_AUTO_TEST_CASE	test/mbstring_tests.cpp	/^BOOST_AUTO_TEST_CASE(length_max)$/;"	f	line:61	signature:(length_max)
BOOST_AUTO_TEST_CASE	test/mbstring_tests.cpp	/^BOOST_AUTO_TEST_CASE(length_min)$/;"	f	line:49	signature:(length_min)
BOOST_AUTO_TEST_CASE	test/mbstring_tests.cpp	/^BOOST_AUTO_TEST_CASE(length_other_bounds)$/;"	f	line:71	signature:(length_other_bounds)
BOOST_AUTO_TEST_CASE	test/mbstring_tests.cpp	/^BOOST_AUTO_TEST_CASE(lonely_start_characters_2_byte)$/;"	f	line:101	signature:(lonely_start_characters_2_byte)
BOOST_AUTO_TEST_CASE	test/mbstring_tests.cpp	/^BOOST_AUTO_TEST_CASE(lonely_start_characters_3_byte)$/;"	f	line:137	signature:(lonely_start_characters_3_byte)
BOOST_AUTO_TEST_CASE	test/mbstring_tests.cpp	/^BOOST_AUTO_TEST_CASE(lonely_start_characters_4_byte)$/;"	f	line:157	signature:(lonely_start_characters_4_byte)
BOOST_AUTO_TEST_CASE	test/mbstring_tests.cpp	/^BOOST_AUTO_TEST_CASE(lonely_start_characters_5_byte)$/;"	f	line:169	signature:(lonely_start_characters_5_byte)
BOOST_AUTO_TEST_CASE	test/mbstring_tests.cpp	/^BOOST_AUTO_TEST_CASE(lonely_start_characters_6_byte)$/;"	f	line:177	signature:(lonely_start_characters_6_byte)
BOOST_AUTO_TEST_CASE	test/mbstring_tests.cpp	/^BOOST_AUTO_TEST_CASE(mix_with_illegal_paired_utf_16_surrogates)$/;"	f	line:452	signature:(mix_with_illegal_paired_utf_16_surrogates)
BOOST_AUTO_TEST_CASE	test/mbstring_tests.cpp	/^BOOST_AUTO_TEST_CASE(mix_with_illegal_single_utf_16_surrogates)$/;"	f	line:433	signature:(mix_with_illegal_single_utf_16_surrogates)
BOOST_AUTO_TEST_CASE	test/mbstring_tests.cpp	/^BOOST_AUTO_TEST_CASE(omni_getproperty_2147483662)$/;"	f	line:485	signature:(omni_getproperty_2147483662)
BOOST_AUTO_TEST_CASE	test/mbstring_tests.cpp	/^BOOST_AUTO_TEST_CASE(overlong_ascii)$/;"	f	line:411	signature:(overlong_ascii)
BOOST_AUTO_TEST_CASE	test/mbstring_tests.cpp	/^BOOST_AUTO_TEST_CASE(range_1_byte)$/;"	f	line:260	signature:(range_1_byte)
BOOST_AUTO_TEST_CASE	test/mbstring_tests.cpp	/^BOOST_AUTO_TEST_CASE(range_2_byte)$/;"	f	line:277	signature:(range_2_byte)
BOOST_AUTO_TEST_CASE	test/mbstring_tests.cpp	/^BOOST_AUTO_TEST_CASE(range_3_byte)$/;"	f	line:312	signature:(range_3_byte)
BOOST_AUTO_TEST_CASE	test/mbstring_tests.cpp	/^BOOST_AUTO_TEST_CASE(range_4_byte)$/;"	f	line:355	signature:(range_4_byte)
BOOST_AUTO_TEST_CASE	test/mbstring_tests.cpp	/^BOOST_AUTO_TEST_CASE(range_5_byte)$/;"	f	line:385	signature:(range_5_byte)
BOOST_AUTO_TEST_CASE	test/mbstring_tests.cpp	/^BOOST_AUTO_TEST_CASE(range_6_byte)$/;"	f	line:392	signature:(range_6_byte)
BOOST_AUTO_TEST_CASE	test/mbstring_tests.cpp	/^BOOST_AUTO_TEST_CASE(range_7_byte)$/;"	f	line:399	signature:(range_7_byte)
BOOST_AUTO_TEST_CASE	test/mbstring_tests.cpp	/^BOOST_AUTO_TEST_CASE(range_8_byte)$/;"	f	line:405	signature:(range_8_byte)
BOOST_AUTO_TEST_CASE	test/mbstring_tests.cpp	/^BOOST_AUTO_TEST_CASE(unexpected_continuation)$/;"	f	line:89	signature:(unexpected_continuation)
BOOST_AUTO_TEST_CASE	test/mbstring_tests.cpp	/^BOOST_AUTO_TEST_CASE(valid_ascii)$/;"	f	line:473	signature:(valid_ascii)
BOOST_AUTO_TEST_CASE	test/mbstring_tests.cpp	/^BOOST_AUTO_TEST_CASE(valid_ff)$/;"	f	line:80	signature:(valid_ff)
BOOST_AUTO_TEST_CASE	test/mbstring_tests.cpp	/^BOOST_AUTO_TEST_CASE(various_valid_strings)$/;"	f	line:518	signature:(various_valid_strings)
BOOST_AUTO_TEST_CASE	test/obfuscation_tests.cpp	/^BOOST_AUTO_TEST_CASE(prepare_obfuscated_hashes)$/;"	f	line:12	signature:(prepare_obfuscated_hashes)
BOOST_AUTO_TEST_CASE	test/output_restriction_tests.cpp	/^BOOST_AUTO_TEST_CASE(input_multisig)$/;"	f	line:53	signature:(input_multisig)
BOOST_AUTO_TEST_CASE	test/output_restriction_tests.cpp	/^BOOST_AUTO_TEST_CASE(input_nonstandard)$/;"	f	line:17	signature:(input_nonstandard)
BOOST_AUTO_TEST_CASE	test/output_restriction_tests.cpp	/^BOOST_AUTO_TEST_CASE(input_nulldata)$/;"	f	line:59	signature:(input_nulldata)
BOOST_AUTO_TEST_CASE	test/output_restriction_tests.cpp	/^BOOST_AUTO_TEST_CASE(input_pubkey)$/;"	f	line:23	signature:(input_pubkey)
BOOST_AUTO_TEST_CASE	test/output_restriction_tests.cpp	/^BOOST_AUTO_TEST_CASE(input_pubkeyhash)$/;"	f	line:29	signature:(input_pubkeyhash)
BOOST_AUTO_TEST_CASE	test/output_restriction_tests.cpp	/^BOOST_AUTO_TEST_CASE(input_scripthash)$/;"	f	line:35	signature:(input_scripthash)
BOOST_AUTO_TEST_CASE	test/output_restriction_tests.cpp	/^BOOST_AUTO_TEST_CASE(input_scripthash_testnet)$/;"	f	line:45	signature:(input_scripthash_testnet)
BOOST_AUTO_TEST_CASE	test/output_restriction_tests.cpp	/^BOOST_AUTO_TEST_CASE(output_multisig)$/;"	f	line:101	signature:(output_multisig)
BOOST_AUTO_TEST_CASE	test/output_restriction_tests.cpp	/^BOOST_AUTO_TEST_CASE(output_nonstandard)$/;"	f	line:65	signature:(output_nonstandard)
BOOST_AUTO_TEST_CASE	test/output_restriction_tests.cpp	/^BOOST_AUTO_TEST_CASE(output_nulldata)$/;"	f	line:107	signature:(output_nulldata)
BOOST_AUTO_TEST_CASE	test/output_restriction_tests.cpp	/^BOOST_AUTO_TEST_CASE(output_nulldata_testnet)$/;"	f	line:117	signature:(output_nulldata_testnet)
BOOST_AUTO_TEST_CASE	test/output_restriction_tests.cpp	/^BOOST_AUTO_TEST_CASE(output_pubkey)$/;"	f	line:71	signature:(output_pubkey)
BOOST_AUTO_TEST_CASE	test/output_restriction_tests.cpp	/^BOOST_AUTO_TEST_CASE(output_pubkeyhash)$/;"	f	line:77	signature:(output_pubkeyhash)
BOOST_AUTO_TEST_CASE	test/output_restriction_tests.cpp	/^BOOST_AUTO_TEST_CASE(output_scripthash)$/;"	f	line:83	signature:(output_scripthash)
BOOST_AUTO_TEST_CASE	test/output_restriction_tests.cpp	/^BOOST_AUTO_TEST_CASE(output_scripthash_testnet)$/;"	f	line:93	signature:(output_scripthash_testnet)
BOOST_AUTO_TEST_CASE	test/params_tests.cpp	/^BOOST_AUTO_TEST_CASE(ecosystem_restrictions_main)$/;"	f	line:35	signature:(ecosystem_restrictions_main)
BOOST_AUTO_TEST_CASE	test/params_tests.cpp	/^BOOST_AUTO_TEST_CASE(ecosystem_restrictions_test)$/;"	f	line:42	signature:(ecosystem_restrictions_test)
BOOST_AUTO_TEST_CASE	test/params_tests.cpp	/^BOOST_AUTO_TEST_CASE(get_params)$/;"	f	line:16	signature:(get_params)
BOOST_AUTO_TEST_CASE	test/params_tests.cpp	/^BOOST_AUTO_TEST_CASE(network_restrictions_main)$/;"	f	line:22	signature:(network_restrictions_main)
BOOST_AUTO_TEST_CASE	test/params_tests.cpp	/^BOOST_AUTO_TEST_CASE(network_restrictions_test)$/;"	f	line:28	signature:(network_restrictions_test)
BOOST_AUTO_TEST_CASE	test/params_tests.cpp	/^BOOST_AUTO_TEST_CASE(update_feature)$/;"	f	line:73	signature:(update_feature)
BOOST_AUTO_TEST_CASE	test/params_tests.cpp	/^BOOST_AUTO_TEST_CASE(update_feature_network)$/;"	f	line:51	signature:(update_feature_network)
BOOST_AUTO_TEST_CASE	test/parsing_a_tests.cpp	/^BOOST_AUTO_TEST_CASE(invalid_class_a)$/;"	f	line:240	signature:(invalid_class_a)
BOOST_AUTO_TEST_CASE	test/parsing_a_tests.cpp	/^BOOST_AUTO_TEST_CASE(valid_class_a)$/;"	f	line:73	signature:(valid_class_a)
BOOST_AUTO_TEST_CASE	test/parsing_b_tests.cpp	/^BOOST_AUTO_TEST_CASE(valid_arbitrary_output_number_class_b)$/;"	f	line:105	signature:(valid_arbitrary_output_number_class_b)
BOOST_AUTO_TEST_CASE	test/parsing_b_tests.cpp	/^BOOST_AUTO_TEST_CASE(valid_common_class_b)$/;"	f	line:81	signature:(valid_common_class_b)
BOOST_AUTO_TEST_CASE	test/parsing_c_tests.cpp	/^BOOST_AUTO_TEST_CASE(empty_op_return)$/;"	f	line:179	signature:(empty_op_return)
BOOST_AUTO_TEST_CASE	test/parsing_c_tests.cpp	/^BOOST_AUTO_TEST_CASE(multiple_op_return)$/;"	f	line:280	signature:(multiple_op_return)
BOOST_AUTO_TEST_CASE	test/parsing_c_tests.cpp	/^BOOST_AUTO_TEST_CASE(multiple_op_return_pushes)$/;"	f	line:336	signature:(multiple_op_return_pushes)
BOOST_AUTO_TEST_CASE	test/parsing_c_tests.cpp	/^BOOST_AUTO_TEST_CASE(multiple_op_return_short)$/;"	f	line:238	signature:(multiple_op_return_short)
BOOST_AUTO_TEST_CASE	test/parsing_c_tests.cpp	/^BOOST_AUTO_TEST_CASE(reference_identification)$/;"	f	line:74	signature:(reference_identification)
BOOST_AUTO_TEST_CASE	test/parsing_c_tests.cpp	/^BOOST_AUTO_TEST_CASE(trimmed_op_return)$/;"	f	line:203	signature:(trimmed_op_return)
BOOST_AUTO_TEST_CASE	test/rounduint64_tests.cpp	/^BOOST_AUTO_TEST_CASE(rounduint64_absolute)$/;"	f	line:117	signature:(rounduint64_absolute)
BOOST_AUTO_TEST_CASE	test/rounduint64_tests.cpp	/^BOOST_AUTO_TEST_CASE(rounduint64_limits)$/;"	f	line:52	signature:(rounduint64_limits)
BOOST_AUTO_TEST_CASE	test/rounduint64_tests.cpp	/^BOOST_AUTO_TEST_CASE(rounduint64_promotion)$/;"	f	line:102	signature:(rounduint64_promotion)
BOOST_AUTO_TEST_CASE	test/rounduint64_tests.cpp	/^BOOST_AUTO_TEST_CASE(rounduint64_round_below_point_5)$/;"	f	line:28	signature:(rounduint64_round_below_point_5)
BOOST_AUTO_TEST_CASE	test/rounduint64_tests.cpp	/^BOOST_AUTO_TEST_CASE(rounduint64_round_over_point_5)$/;"	f	line:44	signature:(rounduint64_round_over_point_5)
BOOST_AUTO_TEST_CASE	test/rounduint64_tests.cpp	/^BOOST_AUTO_TEST_CASE(rounduint64_round_point_5)$/;"	f	line:36	signature:(rounduint64_round_point_5)
BOOST_AUTO_TEST_CASE	test/rounduint64_tests.cpp	/^BOOST_AUTO_TEST_CASE(rounduint64_simple)$/;"	f	line:13	signature:(rounduint64_simple)
BOOST_AUTO_TEST_CASE	test/rounduint64_tests.cpp	/^BOOST_AUTO_TEST_CASE(rounduint64_special_cases)$/;"	f	line:139	signature:(rounduint64_special_cases)
BOOST_AUTO_TEST_CASE	test/rounduint64_tests.cpp	/^BOOST_AUTO_TEST_CASE(rounduint64_types)$/;"	f	line:80	signature:(rounduint64_types)
BOOST_AUTO_TEST_CASE	test/rounduint64_tests.cpp	/^BOOST_AUTO_TEST_CASE(rounduint64_whole_units)$/;"	f	line:20	signature:(rounduint64_whole_units)
BOOST_AUTO_TEST_CASE	test/rules_txs_tests.cpp	/^BOOST_AUTO_TEST_CASE(simple_send_restrictions)$/;"	f	line:18	signature:(simple_send_restrictions)
BOOST_AUTO_TEST_CASE	test/script_dust_tests.cpp	/^BOOST_AUTO_TEST_CASE(dust_threshold_multisig_compressed_compressed)$/;"	f	line:63	signature:(dust_threshold_multisig_compressed_compressed)
BOOST_AUTO_TEST_CASE	test/script_dust_tests.cpp	/^BOOST_AUTO_TEST_CASE(dust_threshold_multisig_compressed_compressed_compressed)$/;"	f	line:105	signature:(dust_threshold_multisig_compressed_compressed_compressed)
BOOST_AUTO_TEST_CASE	test/script_dust_tests.cpp	/^BOOST_AUTO_TEST_CASE(dust_threshold_multisig_uncompressed_compressed)$/;"	f	line:84	signature:(dust_threshold_multisig_uncompressed_compressed)
BOOST_AUTO_TEST_CASE	test/script_dust_tests.cpp	/^BOOST_AUTO_TEST_CASE(dust_threshold_multisig_uncompressed_compressed_compressed)$/;"	f	line:126	signature:(dust_threshold_multisig_uncompressed_compressed_compressed)
BOOST_AUTO_TEST_CASE	test/script_dust_tests.cpp	/^BOOST_AUTO_TEST_CASE(dust_threshold_pubkey_hash)$/;"	f	line:22	signature:(dust_threshold_pubkey_hash)
BOOST_AUTO_TEST_CASE	test/script_dust_tests.cpp	/^BOOST_AUTO_TEST_CASE(dust_threshold_script_hash)$/;"	f	line:44	signature:(dust_threshold_script_hash)
BOOST_AUTO_TEST_CASE	test/script_extraction_tests.cpp	/^BOOST_AUTO_TEST_CASE(extract_anypush_test)$/;"	f	line:258	signature:(extract_anypush_test)
BOOST_AUTO_TEST_CASE	test/script_extraction_tests.cpp	/^BOOST_AUTO_TEST_CASE(extract_empty_nulldata_test)$/;"	f	line:184	signature:(extract_empty_nulldata_test)
BOOST_AUTO_TEST_CASE	test/script_extraction_tests.cpp	/^BOOST_AUTO_TEST_CASE(extract_multisig_test)$/;"	f	line:62	signature:(extract_multisig_test)
BOOST_AUTO_TEST_CASE	test/script_extraction_tests.cpp	/^BOOST_AUTO_TEST_CASE(extract_multisig_with_skip_test)$/;"	f	line:96	signature:(extract_multisig_with_skip_test)
BOOST_AUTO_TEST_CASE	test/script_extraction_tests.cpp	/^BOOST_AUTO_TEST_CASE(extract_no_nulldata_test)$/;"	f	line:167	signature:(extract_no_nulldata_test)
BOOST_AUTO_TEST_CASE	test/script_extraction_tests.cpp	/^BOOST_AUTO_TEST_CASE(extract_nulldata_multipush_test)$/;"	f	line:223	signature:(extract_nulldata_multipush_test)
BOOST_AUTO_TEST_CASE	test/script_extraction_tests.cpp	/^BOOST_AUTO_TEST_CASE(extract_nulldata_test)$/;"	f	line:202	signature:(extract_nulldata_test)
BOOST_AUTO_TEST_CASE	test/script_extraction_tests.cpp	/^BOOST_AUTO_TEST_CASE(extract_pubkey_test)$/;"	f	line:16	signature:(extract_pubkey_test)
BOOST_AUTO_TEST_CASE	test/script_extraction_tests.cpp	/^BOOST_AUTO_TEST_CASE(extract_pubkeyhash_test)$/;"	f	line:38	signature:(extract_pubkeyhash_test)
BOOST_AUTO_TEST_CASE	test/script_extraction_tests.cpp	/^BOOST_AUTO_TEST_CASE(extract_scripthash_test)$/;"	f	line:139	signature:(extract_scripthash_test)
BOOST_AUTO_TEST_CASE	test/script_solver_tests.cpp	/^BOOST_AUTO_TEST_CASE(solve_op_return_test)$/;"	f	line:31	signature:(solve_op_return_test)
BOOST_AUTO_TEST_CASE	test/sender_bycontribution_tests.cpp	/^BOOST_AUTO_TEST_CASE(invalid_inputs)$/;"	f	line:44	signature:(invalid_inputs)
BOOST_AUTO_TEST_CASE	test/sender_bycontribution_tests.cpp	/^BOOST_AUTO_TEST_CASE(p2pkh_contribution_by_sum_order_test)$/;"	f	line:131	signature:(p2pkh_contribution_by_sum_order_test)
BOOST_AUTO_TEST_CASE	test/sender_bycontribution_tests.cpp	/^BOOST_AUTO_TEST_CASE(p2pkh_contribution_by_sum_test)$/;"	f	line:74	signature:(p2pkh_contribution_by_sum_test)
BOOST_AUTO_TEST_CASE	test/sender_bycontribution_tests.cpp	/^BOOST_AUTO_TEST_CASE(p2pkh_contribution_by_total_sum_test)$/;"	f	line:102	signature:(p2pkh_contribution_by_total_sum_test)
BOOST_AUTO_TEST_CASE	test/sender_bycontribution_tests.cpp	/^BOOST_AUTO_TEST_CASE(p2sh_contribution_by_sum_order_test)$/;"	f	line:217	signature:(p2sh_contribution_by_sum_order_test)
BOOST_AUTO_TEST_CASE	test/sender_bycontribution_tests.cpp	/^BOOST_AUTO_TEST_CASE(p2sh_contribution_by_sum_test)$/;"	f	line:159	signature:(p2sh_contribution_by_sum_test)
BOOST_AUTO_TEST_CASE	test/sender_bycontribution_tests.cpp	/^BOOST_AUTO_TEST_CASE(p2sh_contribution_by_total_sum_test)$/;"	f	line:187	signature:(p2sh_contribution_by_total_sum_test)
BOOST_AUTO_TEST_CASE	test/sender_bycontribution_tests.cpp	/^BOOST_AUTO_TEST_CASE(sender_selection_increasing_amount_test)$/;"	f	line:294	signature:(sender_selection_increasing_amount_test)
BOOST_AUTO_TEST_CASE	test/sender_bycontribution_tests.cpp	/^BOOST_AUTO_TEST_CASE(sender_selection_mixed_test)$/;"	f	line:312	signature:(sender_selection_mixed_test)
BOOST_AUTO_TEST_CASE	test/sender_bycontribution_tests.cpp	/^BOOST_AUTO_TEST_CASE(sender_selection_same_amount_test)$/;"	f	line:277	signature:(sender_selection_same_amount_test)
BOOST_AUTO_TEST_CASE	test/sender_bycontribution_tests.cpp	/^BOOST_AUTO_TEST_CASE(sender_selection_string_based_test)$/;"	f	line:250	signature:(sender_selection_string_based_test)
BOOST_AUTO_TEST_CASE	test/sender_firstin_tests.cpp	/^BOOST_AUTO_TEST_CASE(first_vin_is_sender)$/;"	f	line:93	signature:(first_vin_is_sender)
BOOST_AUTO_TEST_CASE	test/sender_firstin_tests.cpp	/^BOOST_AUTO_TEST_CASE(invalid_inputs)$/;"	f	line:122	signature:(invalid_inputs)
BOOST_AUTO_TEST_CASE	test/sender_firstin_tests.cpp	/^BOOST_AUTO_TEST_CASE(less_input_restrictions)$/;"	f	line:107	signature:(less_input_restrictions)
BOOST_AUTO_TEST_CASE	test/strtoint64_tests.cpp	/^BOOST_AUTO_TEST_CASE(strtoint64_divisible)$/;"	f	line:42	signature:(strtoint64_divisible)
BOOST_AUTO_TEST_CASE	test/strtoint64_tests.cpp	/^BOOST_AUTO_TEST_CASE(strtoint64_divisible_invalid)$/;"	f	line:66	signature:(strtoint64_divisible_invalid)
BOOST_AUTO_TEST_CASE	test/strtoint64_tests.cpp	/^BOOST_AUTO_TEST_CASE(strtoint64_divisible_truncate)$/;"	f	line:58	signature:(strtoint64_divisible_truncate)
BOOST_AUTO_TEST_CASE	test/strtoint64_tests.cpp	/^BOOST_AUTO_TEST_CASE(strtoint64_invidisible)$/;"	f	line:14	signature:(strtoint64_invidisible)
BOOST_AUTO_TEST_CASE	test/strtoint64_tests.cpp	/^BOOST_AUTO_TEST_CASE(strtoint64_invidisible_invalid)$/;"	f	line:32	signature:(strtoint64_invidisible_invalid)
BOOST_AUTO_TEST_CASE	test/strtoint64_tests.cpp	/^BOOST_AUTO_TEST_CASE(strtoint64_invidisible_truncate)$/;"	f	line:24	signature:(strtoint64_invidisible_truncate)
BOOST_AUTO_TEST_CASE	test/swapbyteorder_tests.cpp	/^BOOST_AUTO_TEST_CASE(swapbyteorder_cycle)$/;"	f	line:11	signature:(swapbyteorder_cycle)
BOOST_AUTO_TEST_CASE	test/tally_tests.cpp	/^BOOST_AUTO_TEST_CASE(empty_tally)$/;"	f	line:11	signature:(empty_tally)
BOOST_AUTO_TEST_CASE	test/tally_tests.cpp	/^BOOST_AUTO_TEST_CASE(filled_tally)$/;"	f	line:35	signature:(filled_tally)
BOOST_AUTO_TEST_CASE	test/tally_tests.cpp	/^BOOST_AUTO_TEST_CASE(tally_entry_order)$/;"	f	line:110	signature:(tally_entry_order)
BOOST_AUTO_TEST_CASE	test/tally_tests.cpp	/^BOOST_AUTO_TEST_CASE(tally_equality)$/;"	f	line:177	signature:(tally_equality)
BOOST_AUTO_TEST_CASE	test/tally_tests.cpp	/^BOOST_AUTO_TEST_CASE(tally_overflow)$/;"	f	line:266	signature:(tally_overflow)
BOOST_AUTO_TEST_CASE	test/uint256_extensions_tests.cpp	/^BOOST_AUTO_TEST_CASE(uint256_add)$/;"	f	line:24	signature:(uint256_add)
BOOST_AUTO_TEST_CASE	test/uint256_extensions_tests.cpp	/^BOOST_AUTO_TEST_CASE(uint256_const)$/;"	f	line:99	signature:(uint256_const)
BOOST_AUTO_TEST_CASE	test/uint256_extensions_tests.cpp	/^BOOST_AUTO_TEST_CASE(uint256_conversion)$/;"	f	line:76	signature:(uint256_conversion)
BOOST_AUTO_TEST_CASE	test/uint256_extensions_tests.cpp	/^BOOST_AUTO_TEST_CASE(uint256_div)$/;"	f	line:63	signature:(uint256_div)
BOOST_AUTO_TEST_CASE	test/uint256_extensions_tests.cpp	/^BOOST_AUTO_TEST_CASE(uint256_divide_and_round_up)$/;"	f	line:94	signature:(uint256_divide_and_round_up)
BOOST_AUTO_TEST_CASE	test/uint256_extensions_tests.cpp	/^BOOST_AUTO_TEST_CASE(uint256_from_uint64_t)$/;"	f	line:15	signature:(uint256_from_uint64_t)
BOOST_AUTO_TEST_CASE	test/uint256_extensions_tests.cpp	/^BOOST_AUTO_TEST_CASE(uint256_modulo)$/;"	f	line:84	signature:(uint256_modulo)
BOOST_AUTO_TEST_CASE	test/uint256_extensions_tests.cpp	/^BOOST_AUTO_TEST_CASE(uint256_modulo_auto_conversion)$/;"	f	line:89	signature:(uint256_modulo_auto_conversion)
BOOST_AUTO_TEST_CASE	test/uint256_extensions_tests.cpp	/^BOOST_AUTO_TEST_CASE(uint256_mul)$/;"	f	line:50	signature:(uint256_mul)
BOOST_AUTO_TEST_CASE	test/uint256_extensions_tests.cpp	/^BOOST_AUTO_TEST_CASE(uint256_sub)$/;"	f	line:37	signature:(uint256_sub)
BOOST_AUTO_TEST_CASE	test/version_tests.cpp	/^BOOST_AUTO_TEST_CASE(config_package_version)$/;"	f	line:34	signature:(config_package_version)
BOOST_AUTO_TEST_CASE	test/version_tests.cpp	/^BOOST_AUTO_TEST_CASE(version_comparison)$/;"	f	line:12	signature:(version_comparison)
BOOST_AUTO_TEST_CASE	test/version_tests.cpp	/^BOOST_AUTO_TEST_CASE(version_number)$/;"	f	line:29	signature:(version_number)
BOOST_AUTO_TEST_CASE	test/version_tests.cpp	/^BOOST_AUTO_TEST_CASE(version_string)$/;"	f	line:24	signature:(version_string)
BTC_desired_original	dex.h	/^    int64_t BTC_desired_original;      \/\/ copied from the Offer during Accept's creation$/;"	m	line:126	class:CMPAccept	access:private
BTC_desired_original	dex.h	/^    int64_t BTC_desired_original;$/;"	m	line:52	class:CMPOffer	access:private
BalanceRecord	tally.h	/^    } BalanceRecord;$/;"	t	line:24	class:CMPTally	typeref:struct:CMPTally::__anon1	access:private
BalanceToJSON	rpc.cpp	/^bool BalanceToJSON(const std::string& address, uint32_t property, UniValue& balance_obj, bool divisible)$/;"	f	line:134	signature:(const std::string& address, uint32_t property, UniValue& balance_obj, bool divisible)
BitcoinCoreVersion	version.cpp	/^const std::string BitcoinCoreVersion()$/;"	f	line:36	signature:()
CANCEL	tx.h	/^        CANCEL = 3,$/;"	e	line:172	enum:CMPTransaction::ActionTypes
CANCELLED	mdex.cpp	/^    CANCELLED,$/;"	e	line:73	enum:MatchReturnType	file:
CANCEL_ALL_FOR_PAIR	tx.h	/^        CANCEL_ALL_FOR_PAIR = 3,$/;"	e	line:177	enum:CMPTransaction::ActionTypes
CANCEL_AT_PRICE	tx.h	/^        CANCEL_AT_PRICE     = 2,$/;"	e	line:176	enum:CMPTransaction::ActionTypes
CANCEL_EVERYTHING	tx.h	/^        CANCEL_EVERYTHING   = 4,$/;"	e	line:178	enum:CMPTransaction::ActionTypes
CConsensusParams	rules.h	/^    CConsensusParams() {}$/;"	f	line:148	class:mastercore::CConsensusParams	access:protected	signature:()
CConsensusParams	rules.h	/^class CConsensusParams$/;"	c	line:72	namespace:mastercore
CDBBase	dbbase.h	/^    CDBBase() : pdb(NULL), nRead(0), nWritten(0)$/;"	f	line:41	class:CDBBase	access:protected	signature:()
CDBBase	dbbase.h	/^class CDBBase$/;"	c	line:13
CDBBase::CDBBase	dbbase.h	/^    CDBBase() : pdb(NULL), nRead(0), nWritten(0)$/;"	f	line:41	class:CDBBase	access:protected	signature:()
CDBBase::Clear	dbbase.cpp	/^void CDBBase::Clear()$/;"	f	line:32	class:CDBBase	signature:()
CDBBase::Close	dbbase.cpp	/^void CDBBase::Close()$/;"	f	line:59	class:CDBBase	signature:()
CDBBase::NewIterator	dbbase.h	/^    leveldb::Iterator* NewIterator() const$/;"	f	line:66	class:CDBBase	access:protected	signature:() const
CDBBase::Open	dbbase.cpp	/^leveldb::Status CDBBase::Open(const boost::filesystem::path& path, bool fWipe)$/;"	f	line:17	class:CDBBase	signature:(const boost::filesystem::path& path, bool fWipe)
CDBBase::iteroptions	dbbase.h	/^    leveldb::ReadOptions iteroptions;$/;"	m	line:17	class:CDBBase	access:private
CDBBase::nRead	dbbase.h	/^    unsigned int nRead;$/;"	m	line:36	class:CDBBase	access:protected
CDBBase::nWritten	dbbase.h	/^    unsigned int nWritten;$/;"	m	line:39	class:CDBBase	access:protected
CDBBase::options	dbbase.h	/^    leveldb::Options options;$/;"	m	line:21	class:CDBBase	access:protected
CDBBase::pdb	dbbase.h	/^    leveldb::DB* pdb;$/;"	m	line:33	class:CDBBase	access:protected
CDBBase::readoptions	dbbase.h	/^    leveldb::ReadOptions readoptions;$/;"	m	line:24	class:CDBBase	access:protected
CDBBase::syncoptions	dbbase.h	/^    leveldb::WriteOptions syncoptions;$/;"	m	line:30	class:CDBBase	access:protected
CDBBase::writeoptions	dbbase.h	/^    leveldb::WriteOptions writeoptions;$/;"	m	line:27	class:CDBBase	access:protected
CDBBase::~CDBBase	dbbase.h	/^    virtual ~CDBBase()$/;"	f	line:53	class:CDBBase	access:protected	signature:()
CMPAccept	dex.h	/^    CMPAccept(int64_t acceptAmountOriginal, int64_t acceptAmountRemaining, int blockIn,$/;"	f	line:156	class:CMPAccept	access:public	signature:(int64_t acceptAmountOriginal, int64_t acceptAmountRemaining, int blockIn, uint8_t paymentWindow, uint32_t propertyId, int64_t offerAmountOriginal, int64_t amountDesired, const uint256& txid)
CMPAccept	dex.h	/^    CMPAccept(int64_t amountAccepted, int blockIn, uint8_t paymentWindow, uint32_t propertyId,$/;"	f	line:146	class:CMPAccept	access:public	signature:(int64_t amountAccepted, int blockIn, uint8_t paymentWindow, uint32_t propertyId, int64_t offerAmountOriginal, int64_t amountDesired, const uint256& txid)
CMPAccept	dex.h	/^class CMPAccept$/;"	c	line:117
CMPAccept::BTC_desired_original	dex.h	/^    int64_t BTC_desired_original;      \/\/ copied from the Offer during Accept's creation$/;"	m	line:126	class:CMPAccept	access:private
CMPAccept::CMPAccept	dex.h	/^    CMPAccept(int64_t acceptAmountOriginal, int64_t acceptAmountRemaining, int blockIn,$/;"	f	line:156	class:CMPAccept	access:public	signature:(int64_t acceptAmountOriginal, int64_t acceptAmountRemaining, int blockIn, uint8_t paymentWindow, uint32_t propertyId, int64_t offerAmountOriginal, int64_t amountDesired, const uint256& txid)
CMPAccept::CMPAccept	dex.h	/^    CMPAccept(int64_t amountAccepted, int blockIn, uint8_t paymentWindow, uint32_t propertyId,$/;"	f	line:146	class:CMPAccept	access:public	signature:(int64_t amountAccepted, int blockIn, uint8_t paymentWindow, uint32_t propertyId, int64_t offerAmountOriginal, int64_t amountDesired, const uint256& txid)
CMPAccept::accept_amount_original	dex.h	/^    int64_t accept_amount_original;    \/\/ amount of MSC\/TMSC desired to purchased$/;"	m	line:120	class:CMPAccept	access:private
CMPAccept::accept_amount_remaining	dex.h	/^    int64_t accept_amount_remaining;   \/\/ amount of MSC\/TMSC remaining to purchased$/;"	m	line:121	class:CMPAccept	access:private
CMPAccept::block	dex.h	/^    int block;$/;"	m	line:130	class:CMPAccept	access:private
CMPAccept::blocktimelimit	dex.h	/^    uint8_t blocktimelimit;            \/\/ copied from the offer during creation$/;"	m	line:122	class:CMPAccept	access:private
CMPAccept::getAcceptAmount	dex.h	/^    int64_t getAcceptAmount() const { return accept_amount_original; }$/;"	f	line:139	class:CMPAccept	access:public	signature:() const
CMPAccept::getAcceptAmountRemaining	dex.h	/^    int64_t getAcceptAmountRemaining() const$/;"	f	line:174	class:CMPAccept	access:public	signature:() const
CMPAccept::getAcceptBlock	dex.h	/^    int getAcceptBlock() const { return block; }$/;"	f	line:144	class:CMPAccept	access:public	signature:() const
CMPAccept::getBTCDesiredOriginal	dex.h	/^    int64_t getBTCDesiredOriginal() const { return BTC_desired_original; }$/;"	f	line:137	class:CMPAccept	access:public	signature:() const
CMPAccept::getBlockTimeLimit	dex.h	/^    uint8_t getBlockTimeLimit() const { return blocktimelimit; }$/;"	f	line:141	class:CMPAccept	access:public	signature:() const
CMPAccept::getHash	dex.h	/^    uint256 getHash() const { return offer_txid; }$/;"	f	line:134	class:CMPAccept	access:public	signature:() const
CMPAccept::getOfferAmountOriginal	dex.h	/^    int64_t getOfferAmountOriginal() const { return offer_amount_original; }$/;"	f	line:136	class:CMPAccept	access:public	signature:() const
CMPAccept::getProperty	dex.h	/^    uint32_t getProperty() const { return property; }$/;"	f	line:142	class:CMPAccept	access:public	signature:() const
CMPAccept::offer_amount_original	dex.h	/^    int64_t offer_amount_original;     \/\/ copied from the Offer during Accept's creation$/;"	m	line:125	class:CMPAccept	access:private
CMPAccept::offer_txid	dex.h	/^    uint256 offer_txid;$/;"	m	line:129	class:CMPAccept	access:private
CMPAccept::print	dex.h	/^    void print()$/;"	f	line:167	class:CMPAccept	access:public	signature:()
CMPAccept::property	dex.h	/^    uint32_t property;                 \/\/ copied from the offer during creation$/;"	m	line:123	class:CMPAccept	access:private
CMPAccept::reduceAcceptAmountRemaining_andIsZero	dex.h	/^    bool reduceAcceptAmountRemaining_andIsZero(const int64_t really_purchased)$/;"	f	line:187	class:CMPAccept	access:public	signature:(const int64_t really_purchased)
CMPAccept::saveAccept	dex.h	/^    void saveAccept(std::ofstream& file, SHA256_CTX* shaCtx, const std::string& address, const std::string& buyer) const$/;"	f	line:198	class:CMPAccept	access:public	signature:(std::ofstream& file, SHA256_CTX* shaCtx, const std::string& address, const std::string& buyer) const
CMPCrowd	sp.cpp	/^CMPCrowd::CMPCrowd()$/;"	f	line:29	class:CMPCrowd	signature:()
CMPCrowd	sp.cpp	/^CMPCrowd::CMPCrowd(uint32_t pid, int64_t nv, uint32_t cd, int64_t dl, uint8_t eb, uint8_t per, int64_t uct, int64_t ict)$/;"	f	line:35	class:CMPCrowd	signature:(uint32_t pid, int64_t nv, uint32_t cd, int64_t dl, uint8_t eb, uint8_t per, int64_t uct, int64_t ict)
CMPCrowd	sp.h	/^class CMPCrowd$/;"	c	line:26
CMPCrowd::CMPCrowd	sp.cpp	/^CMPCrowd::CMPCrowd()$/;"	f	line:29	class:CMPCrowd	signature:()
CMPCrowd::CMPCrowd	sp.cpp	/^CMPCrowd::CMPCrowd(uint32_t pid, int64_t nv, uint32_t cd, int64_t dl, uint8_t eb, uint8_t per, int64_t uct, int64_t ict)$/;"	f	line:35	class:CMPCrowd	signature:(uint32_t pid, int64_t nv, uint32_t cd, int64_t dl, uint8_t eb, uint8_t per, int64_t uct, int64_t ict)
CMPCrowd::deadline	sp.h	/^    int64_t deadline;$/;"	m	line:33	class:CMPCrowd	access:private
CMPCrowd::early_bird	sp.h	/^    uint8_t early_bird;$/;"	m	line:34	class:CMPCrowd	access:private
CMPCrowd::getCurrDes	sp.h	/^    uint32_t getCurrDes() const { return property_desired; }$/;"	f	line:53	class:CMPCrowd	access:public	signature:() const
CMPCrowd::getDatabase	sp.h	/^    std::map<uint256, std::vector<int64_t> > getDatabase() const { return txFundraiserData; }$/;"	f	line:62	class:CMPCrowd	access:public	signature:() const
CMPCrowd::getDeadline	sp.h	/^    int64_t getDeadline() const { return deadline; }$/;"	f	line:52	class:CMPCrowd	access:public	signature:() const
CMPCrowd::getIssuerCreated	sp.h	/^    int64_t getIssuerCreated() const { return i_created; }$/;"	f	line:59	class:CMPCrowd	access:public	signature:() const
CMPCrowd::getPropertyId	sp.h	/^    uint32_t getPropertyId() const { return propertyId; }$/;"	f	line:50	class:CMPCrowd	access:public	signature:() const
CMPCrowd::getUserCreated	sp.h	/^    int64_t getUserCreated() const { return u_created; }$/;"	f	line:58	class:CMPCrowd	access:public	signature:() const
CMPCrowd::i_created	sp.h	/^    int64_t i_created;$/;"	m	line:38	class:CMPCrowd	access:private
CMPCrowd::incTokensIssuerCreated	sp.h	/^    void incTokensIssuerCreated(int64_t amount) { i_created += amount; }$/;"	f	line:56	class:CMPCrowd	access:public	signature:(int64_t amount)
CMPCrowd::incTokensUserCreated	sp.h	/^    void incTokensUserCreated(int64_t amount) { u_created += amount; }$/;"	f	line:55	class:CMPCrowd	access:public	signature:(int64_t amount)
CMPCrowd::insertDatabase	sp.cpp	/^void CMPCrowd::insertDatabase(const uint256& txHash, const std::vector<int64_t>& txData)$/;"	f	line:41	class:CMPCrowd	signature:(const uint256& txHash, const std::vector<int64_t>& txData)
CMPCrowd::nValue	sp.h	/^    int64_t nValue;$/;"	m	line:30	class:CMPCrowd	access:private
CMPCrowd::percentage	sp.h	/^    uint8_t percentage;$/;"	m	line:35	class:CMPCrowd	access:private
CMPCrowd::print	sp.cpp	/^void CMPCrowd::print(const std::string& address, FILE* fp) const$/;"	f	line:52	class:CMPCrowd	signature:(const std::string& address, FILE* fp) const
CMPCrowd::propertyId	sp.h	/^    uint32_t propertyId;$/;"	m	line:29	class:CMPCrowd	access:private
CMPCrowd::property_desired	sp.h	/^    uint32_t property_desired;$/;"	m	line:32	class:CMPCrowd	access:private
CMPCrowd::saveCrowdSale	sp.cpp	/^void CMPCrowd::saveCrowdSale(std::ofstream& file, SHA256_CTX* shaCtx, const std::string& addr) const$/;"	f	line:57	class:CMPCrowd	signature:(std::ofstream& file, SHA256_CTX* shaCtx, const std::string& addr) const
CMPCrowd::toString	sp.cpp	/^std::string CMPCrowd::toString(const std::string& address) const$/;"	f	line:46	class:CMPCrowd	signature:(const std::string& address) const
CMPCrowd::txFundraiserData	sp.h	/^    std::map<uint256, std::vector<int64_t> > txFundraiserData;$/;"	m	line:44	class:CMPCrowd	access:private
CMPCrowd::txid	sp.h	/^    uint256 txid; \/\/ NOTE: not persisted as it doesnt seem used$/;"	m	line:40	class:CMPCrowd	access:private
CMPCrowd::u_created	sp.h	/^    int64_t u_created;$/;"	m	line:37	class:CMPCrowd	access:private
CMPMetaDEx	mdex.h	/^    CMPMetaDEx()$/;"	f	line:73	class:CMPMetaDEx	access:public	signature:()
CMPMetaDEx	mdex.h	/^    CMPMetaDEx(const CMPTransaction& tx)$/;"	f	line:87	class:CMPMetaDEx	access:public	signature:(const CMPTransaction& tx)
CMPMetaDEx	mdex.h	/^    CMPMetaDEx(const std::string& addr, int b, uint32_t c, int64_t nValue, uint32_t cd, int64_t ad,$/;"	f	line:77	class:CMPMetaDEx	access:public	signature:(const std::string& addr, int b, uint32_t c, int64_t nValue, uint32_t cd, int64_t ad, const uint256& tx, uint32_t i, uint8_t suba)
CMPMetaDEx	mdex.h	/^    CMPMetaDEx(const std::string& addr, int b, uint32_t c, int64_t nValue, uint32_t cd, int64_t ad,$/;"	f	line:82	class:CMPMetaDEx	access:public	signature:(const std::string& addr, int b, uint32_t c, int64_t nValue, uint32_t cd, int64_t ad, const uint256& tx, uint32_t i, uint8_t suba, int64_t ar)
CMPMetaDEx	mdex.h	/^class CMPMetaDEx$/;"	c	line:37
CMPMetaDEx::CMPMetaDEx	mdex.h	/^    CMPMetaDEx()$/;"	f	line:73	class:CMPMetaDEx	access:public	signature:()
CMPMetaDEx::CMPMetaDEx	mdex.h	/^    CMPMetaDEx(const CMPTransaction& tx)$/;"	f	line:87	class:CMPMetaDEx	access:public	signature:(const CMPTransaction& tx)
CMPMetaDEx::CMPMetaDEx	mdex.h	/^    CMPMetaDEx(const std::string& addr, int b, uint32_t c, int64_t nValue, uint32_t cd, int64_t ad,$/;"	f	line:77	class:CMPMetaDEx	access:public	signature:(const std::string& addr, int b, uint32_t c, int64_t nValue, uint32_t cd, int64_t ad, const uint256& tx, uint32_t i, uint8_t suba)
CMPMetaDEx::CMPMetaDEx	mdex.h	/^    CMPMetaDEx(const std::string& addr, int b, uint32_t c, int64_t nValue, uint32_t cd, int64_t ad,$/;"	f	line:82	class:CMPMetaDEx	access:public	signature:(const std::string& addr, int b, uint32_t c, int64_t nValue, uint32_t cd, int64_t ad, const uint256& tx, uint32_t i, uint8_t suba, int64_t ar)
CMPMetaDEx::ToString	mdex.cpp	/^std::string CMPMetaDEx::ToString() const$/;"	f	line:425	class:CMPMetaDEx	signature:() const
CMPMetaDEx::addr	mdex.h	/^    std::string addr;$/;"	m	line:49	class:CMPMetaDEx	access:private
CMPMetaDEx::amount_desired	mdex.h	/^    int64_t amount_desired;$/;"	m	line:46	class:CMPMetaDEx	access:private
CMPMetaDEx::amount_forsale	mdex.h	/^    int64_t amount_forsale;$/;"	m	line:44	class:CMPMetaDEx	access:private
CMPMetaDEx::amount_remaining	mdex.h	/^    int64_t amount_remaining;$/;"	m	line:47	class:CMPMetaDEx	access:private
CMPMetaDEx::block	mdex.h	/^    int block;$/;"	m	line:40	class:CMPMetaDEx	access:private
CMPMetaDEx::desired_property	mdex.h	/^    uint32_t desired_property;$/;"	m	line:45	class:CMPMetaDEx	access:private
CMPMetaDEx::displayFullUnitPrice	mdex.cpp	/^std::string CMPMetaDEx::displayFullUnitPrice() const$/;"	f	line:375	class:CMPMetaDEx	signature:() const
CMPMetaDEx::displayUnitPrice	mdex.cpp	/^std::string CMPMetaDEx::displayUnitPrice() const$/;"	f	line:348	class:CMPMetaDEx	signature:() const
CMPMetaDEx::getAction	mdex.h	/^    uint8_t getAction() const { return subaction; }$/;"	f	line:64	class:CMPMetaDEx	access:public	signature:() const
CMPMetaDEx::getAddr	mdex.h	/^    const std::string& getAddr() const { return addr; }$/;"	f	line:66	class:CMPMetaDEx	access:public	signature:() const
CMPMetaDEx::getAmountDesired	mdex.h	/^    int64_t getAmountDesired() const { return amount_desired; }$/;"	f	line:58	class:CMPMetaDEx	access:public	signature:() const
CMPMetaDEx::getAmountForSale	mdex.h	/^    int64_t getAmountForSale() const { return amount_forsale; }$/;"	f	line:57	class:CMPMetaDEx	access:public	signature:() const
CMPMetaDEx::getAmountRemaining	mdex.h	/^    int64_t getAmountRemaining() const { return amount_remaining; }$/;"	f	line:59	class:CMPMetaDEx	access:public	signature:() const
CMPMetaDEx::getAmountToFill	mdex.cpp	/^int64_t CMPMetaDEx::getAmountToFill() const$/;"	f	line:405	class:CMPMetaDEx	signature:() const
CMPMetaDEx::getBlock	mdex.h	/^    int getBlock() const { return block; }$/;"	f	line:68	class:CMPMetaDEx	access:public	signature:() const
CMPMetaDEx::getBlockTime	mdex.cpp	/^int64_t CMPMetaDEx::getBlockTime() const$/;"	f	line:413	class:CMPMetaDEx	signature:() const
CMPMetaDEx::getDesProperty	mdex.h	/^    uint32_t getDesProperty() const { return desired_property; }$/;"	f	line:55	class:CMPMetaDEx	access:public	signature:() const
CMPMetaDEx::getHash	mdex.h	/^    uint256 getHash() const { return txid; }$/;"	f	line:52	class:CMPMetaDEx	access:public	signature:() const
CMPMetaDEx::getIdx	mdex.h	/^    unsigned int getIdx() const { return idx; }$/;"	f	line:69	class:CMPMetaDEx	access:public	signature:() const
CMPMetaDEx::getProperty	mdex.h	/^    uint32_t getProperty() const { return property; }$/;"	f	line:54	class:CMPMetaDEx	access:public	signature:() const
CMPMetaDEx::idx	mdex.h	/^    unsigned int idx; \/\/ index within block$/;"	m	line:42	class:CMPMetaDEx	access:private
CMPMetaDEx::inversePrice	mdex.cpp	/^rational_t CMPMetaDEx::inversePrice() const$/;"	f	line:398	class:CMPMetaDEx	signature:() const
CMPMetaDEx::property	mdex.h	/^    uint32_t property;$/;"	m	line:43	class:CMPMetaDEx	access:private
CMPMetaDEx::saveOffer	mdex.cpp	/^void CMPMetaDEx::saveOffer(std::ofstream& file, SHA256_CTX* shaCtx) const$/;"	f	line:432	class:CMPMetaDEx	signature:(std::ofstream& file, SHA256_CTX* shaCtx) const
CMPMetaDEx::setAmountRemaining	mdex.cpp	/^void CMPMetaDEx::setAmountRemaining(int64_t amount, const std::string& label)$/;"	f	line:419	class:CMPMetaDEx	signature:(int64_t amount, const std::string& label)
CMPMetaDEx::subaction	mdex.h	/^    uint8_t subaction;$/;"	m	line:48	class:CMPMetaDEx	access:private
CMPMetaDEx::txid	mdex.h	/^    uint256 txid;$/;"	m	line:41	class:CMPMetaDEx	access:private
CMPMetaDEx::unitPrice	mdex.cpp	/^rational_t CMPMetaDEx::unitPrice() const$/;"	f	line:391	class:CMPMetaDEx	signature:() const
CMPOffer	dex.h	/^    CMPOffer()$/;"	f	line:68	class:CMPOffer	access:public	signature:()
CMPOffer	dex.h	/^    CMPOffer(const CMPTransaction& tx)$/;"	f	line:83	class:CMPOffer	access:public	signature:(const CMPTransaction& tx)
CMPOffer	dex.h	/^    CMPOffer(int block, int64_t amountOffered, uint32_t propertyId, int64_t amountDesired,$/;"	f	line:74	class:CMPOffer	access:public	signature:(int block, int64_t amountOffered, uint32_t propertyId, int64_t amountDesired, int64_t minAcceptFee, uint8_t paymentWindow, const uint256& tx)
CMPOffer	dex.h	/^class CMPOffer$/;"	c	line:44
CMPOffer::BTC_desired_original	dex.h	/^    int64_t BTC_desired_original;$/;"	m	line:52	class:CMPOffer	access:private
CMPOffer::CMPOffer	dex.h	/^    CMPOffer()$/;"	f	line:68	class:CMPOffer	access:public	signature:()
CMPOffer::CMPOffer	dex.h	/^    CMPOffer(const CMPTransaction& tx)$/;"	f	line:83	class:CMPOffer	access:public	signature:(const CMPTransaction& tx)
CMPOffer::CMPOffer	dex.h	/^    CMPOffer(int block, int64_t amountOffered, uint32_t propertyId, int64_t amountDesired,$/;"	f	line:74	class:CMPOffer	access:public	signature:(int block, int64_t amountOffered, uint32_t propertyId, int64_t amountDesired, int64_t minAcceptFee, uint8_t paymentWindow, const uint256& tx)
CMPOffer::blocktimelimit	dex.h	/^    uint8_t blocktimelimit;$/;"	m	line:54	class:CMPOffer	access:private
CMPOffer::getBTCDesiredOriginal	dex.h	/^    int64_t getBTCDesiredOriginal() const { return BTC_desired_original; }$/;"	f	line:66	class:CMPOffer	access:public	signature:() const
CMPOffer::getBlockTimeLimit	dex.h	/^    uint8_t getBlockTimeLimit() const { return blocktimelimit; }$/;"	f	line:62	class:CMPOffer	access:public	signature:() const
CMPOffer::getHash	dex.h	/^    uint256 getHash() const { return txid; }$/;"	f	line:59	class:CMPOffer	access:public	signature:() const
CMPOffer::getMinFee	dex.h	/^    int64_t getMinFee() const { return min_fee ; }$/;"	f	line:61	class:CMPOffer	access:public	signature:() const
CMPOffer::getOfferAmountOriginal	dex.h	/^    int64_t getOfferAmountOriginal() const { return offer_amount_original; }$/;"	f	line:65	class:CMPOffer	access:public	signature:() const
CMPOffer::getProperty	dex.h	/^    uint32_t getProperty() const { return property; }$/;"	f	line:60	class:CMPOffer	access:public	signature:() const
CMPOffer::getSubaction	dex.h	/^    uint8_t getSubaction() const { return subaction; }$/;"	f	line:63	class:CMPOffer	access:public	signature:() const
CMPOffer::min_fee	dex.h	/^    int64_t min_fee;$/;"	m	line:53	class:CMPOffer	access:private
CMPOffer::offerBlock	dex.h	/^    int offerBlock;$/;"	m	line:47	class:CMPOffer	access:private
CMPOffer::offer_amount_original	dex.h	/^    int64_t offer_amount_original;$/;"	m	line:49	class:CMPOffer	access:private
CMPOffer::property	dex.h	/^    uint32_t property;$/;"	m	line:50	class:CMPOffer	access:private
CMPOffer::saveOffer	dex.h	/^    void saveOffer(std::ofstream& file, SHA256_CTX* shaCtx, const std::string& address) const$/;"	f	line:90	class:CMPOffer	access:public	signature:(std::ofstream& file, SHA256_CTX* shaCtx, const std::string& address) const
CMPOffer::subaction	dex.h	/^    uint8_t subaction;$/;"	m	line:56	class:CMPOffer	access:private
CMPOffer::txid	dex.h	/^    uint256 txid;$/;"	m	line:55	class:CMPOffer	access:private
CMPPending	pending.h	/^    CMPPending() : prop(0), amount(0), type(0) {};$/;"	f	line:43	struct:CMPPending	access:public	signature:()
CMPPending	pending.h	/^struct CMPPending$/;"	s	line:35
CMPPending::CMPPending	pending.h	/^    CMPPending() : prop(0), amount(0), type(0) {};$/;"	f	line:43	struct:CMPPending	access:public	signature:()
CMPPending::amount	pending.h	/^    int64_t amount;$/;"	m	line:39	struct:CMPPending	access:public
CMPPending::print	pending.cpp	/^void CMPPending::print(const uint256& txid) const$/;"	f	line:105	class:CMPPending	signature:(const uint256& txid) const
CMPPending::prop	pending.h	/^    uint32_t prop;$/;"	m	line:38	struct:CMPPending	access:public
CMPPending::src	pending.h	/^    std::string src;  \/\/ the source address$/;"	m	line:37	struct:CMPPending	access:public
CMPPending::type	pending.h	/^    uint32_t type;$/;"	m	line:40	struct:CMPPending	access:public
CMPSPInfo	dbspinfo.cpp	/^CMPSPInfo::CMPSPInfo(const boost::filesystem::path& path, bool fWipe)$/;"	f	line:53	class:CMPSPInfo	signature:(const boost::filesystem::path& path, bool fWipe)
CMPSPInfo	dbspinfo.h	/^class CMPSPInfo : public CDBBase$/;"	c	line:46	inherits:CDBBase
CMPSPInfo::CMPSPInfo	dbspinfo.cpp	/^CMPSPInfo::CMPSPInfo(const boost::filesystem::path& path, bool fWipe)$/;"	f	line:53	class:CMPSPInfo	signature:(const boost::filesystem::path& path, bool fWipe)
CMPSPInfo::Clear	dbspinfo.cpp	/^void CMPSPInfo::Clear()$/;"	f	line:84	class:CMPSPInfo	signature:()
CMPSPInfo::Entry	dbspinfo.h	/^    struct Entry {$/;"	s	line:49	class:CMPSPInfo	access:public
CMPSPInfo::Entry::ADD_SERIALIZE_METHODS	dbspinfo.h	/^        ADD_SERIALIZE_METHODS;$/;"	m	line:89	struct:CMPSPInfo::Entry	access:public
CMPSPInfo::Entry::Entry	dbspinfo.cpp	/^CMPSPInfo::Entry::Entry()$/;"	f	line:25	class:CMPSPInfo::Entry	signature:()
CMPSPInfo::Entry::SerializationOp	dbspinfo.h	/^        inline void SerializationOp(Stream& s, Operation ser_action) {$/;"	f	line:92	struct:CMPSPInfo::Entry	access:public	signature:(Stream& s, Operation ser_action)
CMPSPInfo::Entry::category	dbspinfo.h	/^        std::string category;$/;"	m	line:54	struct:CMPSPInfo::Entry	access:public
CMPSPInfo::Entry::close_early	dbspinfo.h	/^        bool close_early;$/;"	m	line:68	struct:CMPSPInfo::Entry	access:public
CMPSPInfo::Entry::creation_block	dbspinfo.h	/^        uint256 creation_block;$/;"	m	line:76	struct:CMPSPInfo::Entry	access:public
CMPSPInfo::Entry::data	dbspinfo.h	/^        std::string data;$/;"	m	line:58	struct:CMPSPInfo::Entry	access:public
CMPSPInfo::Entry::deadline	dbspinfo.h	/^        int64_t deadline;$/;"	m	line:63	struct:CMPSPInfo::Entry	access:public
CMPSPInfo::Entry::early_bird	dbspinfo.h	/^        uint8_t early_bird;$/;"	m	line:64	struct:CMPSPInfo::Entry	access:public
CMPSPInfo::Entry::fixed	dbspinfo.h	/^        bool fixed;$/;"	m	line:78	struct:CMPSPInfo::Entry	access:public
CMPSPInfo::Entry::historicalData	dbspinfo.h	/^        std::map<uint256, std::vector<int64_t> > historicalData;$/;"	m	line:85	struct:CMPSPInfo::Entry	access:public
CMPSPInfo::Entry::isDivisible	dbspinfo.cpp	/^bool CMPSPInfo::Entry::isDivisible() const$/;"	f	line:31	class:CMPSPInfo::Entry	signature:() const
CMPSPInfo::Entry::issuer	dbspinfo.h	/^        std::string issuer;$/;"	m	line:51	struct:CMPSPInfo::Entry	access:public
CMPSPInfo::Entry::manual	dbspinfo.h	/^        bool manual;$/;"	m	line:79	struct:CMPSPInfo::Entry	access:public
CMPSPInfo::Entry::max_tokens	dbspinfo.h	/^        bool max_tokens;$/;"	m	line:69	struct:CMPSPInfo::Entry	access:public
CMPSPInfo::Entry::missedTokens	dbspinfo.h	/^        int64_t missedTokens;$/;"	m	line:70	struct:CMPSPInfo::Entry	access:public
CMPSPInfo::Entry::name	dbspinfo.h	/^        std::string name;$/;"	m	line:56	struct:CMPSPInfo::Entry	access:public
CMPSPInfo::Entry::num_tokens	dbspinfo.h	/^        int64_t num_tokens;$/;"	m	line:59	struct:CMPSPInfo::Entry	access:public
CMPSPInfo::Entry::percentage	dbspinfo.h	/^        uint8_t percentage;$/;"	m	line:65	struct:CMPSPInfo::Entry	access:public
CMPSPInfo::Entry::prev_prop_id	dbspinfo.h	/^        uint32_t prev_prop_id;$/;"	m	line:53	struct:CMPSPInfo::Entry	access:public
CMPSPInfo::Entry::print	dbspinfo.cpp	/^void CMPSPInfo::Entry::print() const$/;"	f	line:42	class:CMPSPInfo::Entry	signature:() const
CMPSPInfo::Entry::prop_type	dbspinfo.h	/^        uint16_t prop_type;$/;"	m	line:52	struct:CMPSPInfo::Entry	access:public
CMPSPInfo::Entry::property_desired	dbspinfo.h	/^        uint32_t property_desired;$/;"	m	line:62	struct:CMPSPInfo::Entry	access:public
CMPSPInfo::Entry::subcategory	dbspinfo.h	/^        std::string subcategory;$/;"	m	line:55	struct:CMPSPInfo::Entry	access:public
CMPSPInfo::Entry::timeclosed	dbspinfo.h	/^        int64_t timeclosed;$/;"	m	line:71	struct:CMPSPInfo::Entry	access:public
CMPSPInfo::Entry::txid	dbspinfo.h	/^        uint256 txid;$/;"	m	line:75	struct:CMPSPInfo::Entry	access:public
CMPSPInfo::Entry::txid_close	dbspinfo.h	/^        uint256 txid_close;$/;"	m	line:72	struct:CMPSPInfo::Entry	access:public
CMPSPInfo::Entry::update_block	dbspinfo.h	/^        uint256 update_block;$/;"	m	line:77	struct:CMPSPInfo::Entry	access:public
CMPSPInfo::Entry::url	dbspinfo.h	/^        std::string url;$/;"	m	line:57	struct:CMPSPInfo::Entry	access:public
CMPSPInfo::findSPByTX	dbspinfo.cpp	/^uint32_t CMPSPInfo::findSPByTX(const uint256& txid) const$/;"	f	line:277	class:CMPSPInfo	signature:(const uint256& txid) const
CMPSPInfo::getSP	dbspinfo.cpp	/^bool CMPSPInfo::getSP(uint32_t propertyId, Entry& info) const$/;"	f	line:221	class:CMPSPInfo	signature:(uint32_t propertyId, Entry& info) const
CMPSPInfo::getWatermark	dbspinfo.cpp	/^bool CMPSPInfo::getWatermark(uint256& watermark) const$/;"	f	line:406	class:CMPSPInfo	signature:(uint256& watermark) const
CMPSPInfo::hasSP	dbspinfo.cpp	/^bool CMPSPInfo::hasSP(uint32_t propertyId) const$/;"	f	line:258	class:CMPSPInfo	signature:(uint32_t propertyId) const
CMPSPInfo::implied_omni	dbspinfo.h	/^    Entry implied_omni;$/;"	m	line:125	class:CMPSPInfo	access:private
CMPSPInfo::implied_tomni	dbspinfo.h	/^    Entry implied_tomni;$/;"	m	line:126	class:CMPSPInfo	access:private
CMPSPInfo::init	dbspinfo.cpp	/^void CMPSPInfo::init(uint32_t nextSPID, uint32_t nextTestSPID)$/;"	f	line:92	class:CMPSPInfo	signature:(uint32_t nextSPID, uint32_t nextTestSPID)
CMPSPInfo::next_spid	dbspinfo.h	/^    uint32_t next_spid;$/;"	m	line:128	class:CMPSPInfo	access:private
CMPSPInfo::next_test_spid	dbspinfo.h	/^    uint32_t next_test_spid;$/;"	m	line:129	class:CMPSPInfo	access:private
CMPSPInfo::peekNextSPID	dbspinfo.cpp	/^uint32_t CMPSPInfo::peekNextSPID(uint8_t ecosystem) const$/;"	f	line:98	class:CMPSPInfo	signature:(uint8_t ecosystem) const
CMPSPInfo::popBlock	dbspinfo.cpp	/^int64_t CMPSPInfo::popBlock(const uint256& block_hash)$/;"	f	line:305	class:CMPSPInfo	signature:(const uint256& block_hash)
CMPSPInfo::printAll	dbspinfo.cpp	/^void CMPSPInfo::printAll() const$/;"	f	line:432	class:CMPSPInfo	signature:() const
CMPSPInfo::putSP	dbspinfo.cpp	/^uint32_t CMPSPInfo::putSP(uint8_t ecosystem, const Entry& info)$/;"	f	line:161	class:CMPSPInfo	signature:(uint8_t ecosystem, const Entry& info)
CMPSPInfo::setWatermark	dbspinfo.cpp	/^void CMPSPInfo::setWatermark(const uint256& watermark)$/;"	f	line:384	class:CMPSPInfo	signature:(const uint256& watermark)
CMPSPInfo::updateSP	dbspinfo.cpp	/^bool CMPSPInfo::updateSP(uint32_t propertyId, const Entry& info)$/;"	f	line:116	class:CMPSPInfo	signature:(uint32_t propertyId, const Entry& info)
CMPSPInfo::~CMPSPInfo	dbspinfo.cpp	/^CMPSPInfo::~CMPSPInfo()$/;"	f	line:79	class:CMPSPInfo	signature:()
CMPSTOList	dbstolist.cpp	/^CMPSTOList::CMPSTOList(const boost::filesystem::path& path, bool fWipe)$/;"	f	line:31	class:CMPSTOList	signature:(const boost::filesystem::path& path, bool fWipe)
CMPSTOList	dbstolist.h	/^class CMPSTOList : public CDBBase$/;"	c	line:18	inherits:CDBBase
CMPSTOList::CMPSTOList	dbstolist.cpp	/^CMPSTOList::CMPSTOList(const boost::filesystem::path& path, bool fWipe)$/;"	f	line:31	class:CMPSTOList	signature:(const boost::filesystem::path& path, bool fWipe)
CMPSTOList::deleteAboveBlock	dbstolist.cpp	/^int CMPSTOList::deleteAboveBlock(int blockNum)$/;"	f	line:156	class:CMPSTOList	signature:(int blockNum)
CMPSTOList::exists	dbstolist.cpp	/^bool CMPSTOList::exists(std::string address)$/;"	f	line:212	class:CMPSTOList	signature:(std::string address)
CMPSTOList::getMySTOReceipts	dbstolist.cpp	/^std::string CMPSTOList::getMySTOReceipts(std::string filterAddress)$/;"	f	line:118	class:CMPSTOList	signature:(std::string filterAddress)
CMPSTOList::getRecipients	dbstolist.cpp	/^void CMPSTOList::getRecipients(const uint256 txid, std::string filterAddress, UniValue* recipientArray, uint64_t* total, uint64_t* numRecipients)$/;"	f	line:42	class:CMPSTOList	signature:(const uint256 txid, std::string filterAddress, UniValue* recipientArray, uint64_t* total, uint64_t* numRecipients)
CMPSTOList::printAll	dbstolist.cpp	/^void CMPSTOList::printAll()$/;"	f	line:196	class:CMPSTOList	signature:()
CMPSTOList::printStats	dbstolist.cpp	/^void CMPSTOList::printStats()$/;"	f	line:191	class:CMPSTOList	signature:()
CMPSTOList::recordSTOReceive	dbstolist.cpp	/^void CMPSTOList::recordSTOReceive(std::string address, const uint256 &txid, int nBlock, unsigned int propertyId, uint64_t amount)$/;"	f	line:226	class:CMPSTOList	signature:(std::string address, const uint256 &txid, int nBlock, unsigned int propertyId, uint64_t amount)
CMPSTOList::~CMPSTOList	dbstolist.cpp	/^CMPSTOList::~CMPSTOList()$/;"	f	line:37	class:CMPSTOList	signature:()
CMPTally	tally.cpp	/^CMPTally::CMPTally()$/;"	f	line:12	class:CMPTally	signature:()
CMPTally	tally.h	/^class CMPTally$/;"	c	line:19
CMPTally::BalanceRecord	tally.h	/^    } BalanceRecord;$/;"	t	line:24	class:CMPTally	typeref:struct:CMPTally::__anon1	access:private
CMPTally::CMPTally	tally.cpp	/^CMPTally::CMPTally()$/;"	f	line:12	class:CMPTally	signature:()
CMPTally::TokenMap	tally.h	/^    typedef std::map<uint32_t, BalanceRecord> TokenMap;$/;"	t	line:27	class:CMPTally	access:private
CMPTally::__anon1::balance	tally.h	/^        int64_t balance[TALLY_TYPE_COUNT];$/;"	m	line:23	struct:CMPTally::__anon1	access:public
CMPTally::getMoney	tally.cpp	/^int64_t CMPTally::getMoney(uint32_t propertyId, TallyType ttype) const$/;"	f	line:104	class:CMPTally	signature:(uint32_t propertyId, TallyType ttype) const
CMPTally::getMoneyAvailable	tally.cpp	/^int64_t CMPTally::getMoneyAvailable(uint32_t propertyId) const$/;"	f	line:129	class:CMPTally	signature:(uint32_t propertyId) const
CMPTally::getMoneyReserved	tally.cpp	/^int64_t CMPTally::getMoneyReserved(uint32_t propertyId) const$/;"	f	line:154	class:CMPTally	signature:(uint32_t propertyId) const
CMPTally::init	tally.cpp	/^uint32_t CMPTally::init()$/;"	f	line:22	class:CMPTally	signature:()
CMPTally::mp_token	tally.h	/^    TokenMap mp_token;$/;"	m	line:29	class:CMPTally	access:private
CMPTally::my_it	tally.h	/^    TokenMap::iterator my_it;$/;"	m	line:31	class:CMPTally	access:private
CMPTally::next	tally.cpp	/^uint32_t CMPTally::next()$/;"	f	line:37	class:CMPTally	signature:()
CMPTally::operator !=	tally.cpp	/^bool CMPTally::operator!=(const CMPTally& rhs) const$/;"	f	line:211	class:CMPTally	signature:(const CMPTally& rhs) const
CMPTally::operator ==	tally.cpp	/^bool CMPTally::operator==(const CMPTally& rhs) const$/;"	f	line:175	class:CMPTally	signature:(const CMPTally& rhs) const
CMPTally::print	tally.cpp	/^int64_t CMPTally::print(uint32_t propertyId, bool bDivisible) const$/;"	f	line:223	class:CMPTally	signature:(uint32_t propertyId, bool bDivisible) const
CMPTally::updateMoney	tally.cpp	/^bool CMPTally::updateMoney(uint32_t propertyId, int64_t amount, TallyType ttype)$/;"	f	line:70	class:CMPTally	signature:(uint32_t propertyId, int64_t amount, TallyType ttype)
CMPTradeList	dbtradelist.cpp	/^CMPTradeList::CMPTradeList(const boost::filesystem::path& path, bool fWipe)$/;"	f	line:32	class:CMPTradeList	signature:(const boost::filesystem::path& path, bool fWipe)
CMPTradeList	dbtradelist.h	/^class CMPTradeList : public CDBBase$/;"	c	line:19	inherits:CDBBase
CMPTradeList::CMPTradeList	dbtradelist.cpp	/^CMPTradeList::CMPTradeList(const boost::filesystem::path& path, bool fWipe)$/;"	f	line:32	class:CMPTradeList	signature:(const boost::filesystem::path& path, bool fWipe)
CMPTradeList::deleteAboveBlock	dbtradelist.cpp	/^int CMPTradeList::deleteAboveBlock(int blockNum)$/;"	f	line:67	class:CMPTradeList	signature:(int blockNum)
CMPTradeList::getMPTradeCountTotal	dbtradelist.cpp	/^int CMPTradeList::getMPTradeCountTotal()$/;"	f	line:336	class:CMPTradeList	signature:()
CMPTradeList::getMatchingTrades	dbtradelist.cpp	/^bool CMPTradeList::getMatchingTrades(const uint256& txid, uint32_t propertyId, UniValue& tradeArray, int64_t& totalSold, int64_t& totalReceived)$/;"	f	line:118	class:CMPTradeList	signature:(const uint256& txid, uint32_t propertyId, UniValue& tradeArray, int64_t& totalSold, int64_t& totalReceived)
CMPTradeList::getTradesForAddress	dbtradelist.cpp	/^void CMPTradeList::getTradesForAddress(const std::string& address, std::vector<uint256>& vecTransactions, uint32_t propertyIdFilter)$/;"	f	line:205	class:CMPTradeList	signature:(const std::string& address, std::vector<uint256>& vecTransactions, uint32_t propertyIdFilter)
CMPTradeList::getTradesForPair	dbtradelist.cpp	/^void CMPTradeList::getTradesForPair(uint32_t propertyIdSideA, uint32_t propertyIdSideB, UniValue& responseArray, uint64_t count)$/;"	f	line:245	class:CMPTradeList	signature:(uint32_t propertyIdSideA, uint32_t propertyIdSideB, UniValue& responseArray, uint64_t count)
CMPTradeList::printAll	dbtradelist.cpp	/^void CMPTradeList::printAll()$/;"	f	line:102	class:CMPTradeList	signature:()
CMPTradeList::printStats	dbtradelist.cpp	/^void CMPTradeList::printStats()$/;"	f	line:97	class:CMPTradeList	signature:()
CMPTradeList::recordMatchedTrade	dbtradelist.cpp	/^void CMPTradeList::recordMatchedTrade(const uint256& txid1, const uint256& txid2, const std::string& address1, const std::string& address2, uint32_t prop1, uint32_t prop2, int64_t amount1, int64_t amount2, int blockNum, int64_t fee)$/;"	f	line:43	class:CMPTradeList	signature:(const uint256& txid1, const uint256& txid2, const std::string& address1, const std::string& address2, uint32_t prop1, uint32_t prop2, int64_t amount1, int64_t amount2, int blockNum, int64_t fee)
CMPTradeList::recordNewTrade	dbtradelist.cpp	/^void CMPTradeList::recordNewTrade(const uint256& txid, const std::string& address, uint32_t propertyIdForSale, uint32_t propertyIdDesired, int blockNum, int blockIndex)$/;"	f	line:53	class:CMPTradeList	signature:(const uint256& txid, const std::string& address, uint32_t propertyIdForSale, uint32_t propertyIdDesired, int blockNum, int blockIndex)
CMPTradeList::~CMPTradeList	dbtradelist.cpp	/^CMPTradeList::~CMPTradeList()$/;"	f	line:38	class:CMPTradeList	signature:()
CMPTransaction	tx.h	/^    CMPTransaction()$/;"	f	line:216	class:CMPTransaction	access:public	signature:()
CMPTransaction	tx.h	/^class CMPTransaction$/;"	c	line:26
CMPTransaction::ADD	tx.h	/^        ADD                 = 1,$/;"	e	line:175	enum:CMPTransaction::ActionTypes
CMPTransaction::ActionTypes	tx.h	/^    enum ActionTypes$/;"	g	line:165	class:CMPTransaction	access:public
CMPTransaction::CANCEL	tx.h	/^        CANCEL = 3,$/;"	e	line:172	enum:CMPTransaction::ActionTypes
CMPTransaction::CANCEL_ALL_FOR_PAIR	tx.h	/^        CANCEL_ALL_FOR_PAIR = 3,$/;"	e	line:177	enum:CMPTransaction::ActionTypes
CMPTransaction::CANCEL_AT_PRICE	tx.h	/^        CANCEL_AT_PRICE     = 2,$/;"	e	line:176	enum:CMPTransaction::ActionTypes
CMPTransaction::CANCEL_EVERYTHING	tx.h	/^        CANCEL_EVERYTHING   = 4,$/;"	e	line:178	enum:CMPTransaction::ActionTypes
CMPTransaction::CMPTransaction	tx.h	/^    CMPTransaction()$/;"	f	line:216	class:CMPTransaction	access:public	signature:()
CMPTransaction::INVALID	tx.h	/^        INVALID = 0,$/;"	e	line:167	enum:CMPTransaction::ActionTypes
CMPTransaction::NEW	tx.h	/^        NEW = 1,$/;"	e	line:170	enum:CMPTransaction::ActionTypes
CMPTransaction::Set	tx.h	/^    void Set(const std::string& s, const std::string& r, uint64_t n, const uint256& t,$/;"	f	line:277	class:CMPTransaction	access:public	signature:(const std::string& s, const std::string& r, uint64_t n, const uint256& t, int b, unsigned int idx, unsigned char *p, unsigned int size, int encodingClassIn, uint64_t txf)
CMPTransaction::Set	tx.h	/^    void Set(const uint256& t, int b, unsigned int idx, int64_t bt)$/;"	f	line:268	class:CMPTransaction	access:public	signature:(const uint256& t, int b, unsigned int idx, int64_t bt)
CMPTransaction::SetNull	tx.h	/^    void SetNull()$/;"	f	line:222	class:CMPTransaction	access:public	signature:()
CMPTransaction::UPDATE	tx.h	/^        UPDATE = 2,$/;"	e	line:171	enum:CMPTransaction::ActionTypes
CMPTransaction::action	tx.h	/^    unsigned char action; \/\/ depreciated$/;"	m	line:79	class:CMPTransaction	access:private
CMPTransaction::activation_block	tx.h	/^    uint32_t activation_block;$/;"	m	line:94	class:CMPTransaction	access:private
CMPTransaction::alert_expiry	tx.h	/^    uint32_t alert_expiry;$/;"	m	line:89	class:CMPTransaction	access:private
CMPTransaction::alert_text	tx.h	/^    char alert_text[SP_STRING_FIELD_LEN];$/;"	m	line:90	class:CMPTransaction	access:private
CMPTransaction::alert_type	tx.h	/^    uint16_t alert_type;$/;"	m	line:88	class:CMPTransaction	access:private
CMPTransaction::amount_desired	tx.h	/^    uint64_t amount_desired;$/;"	m	line:82	class:CMPTransaction	access:private
CMPTransaction::block	tx.h	/^    int block;$/;"	m	line:33	class:CMPTransaction	access:private
CMPTransaction::blockTime	tx.h	/^    int64_t blockTime;  \/\/ internally nTime is still an "unsigned int"$/;"	m	line:34	class:CMPTransaction	access:private
CMPTransaction::blocktimelimit	tx.h	/^    unsigned char blocktimelimit;$/;"	m	line:83	class:CMPTransaction	access:private
CMPTransaction::category	tx.h	/^    char category[SP_STRING_FIELD_LEN];$/;"	m	line:67	class:CMPTransaction	access:private
CMPTransaction::data	tx.h	/^    char data[SP_STRING_FIELD_LEN];$/;"	m	line:71	class:CMPTransaction	access:private
CMPTransaction::deadline	tx.h	/^    uint64_t deadline;$/;"	m	line:72	class:CMPTransaction	access:private
CMPTransaction::desired_property	tx.h	/^    unsigned int desired_property;$/;"	m	line:77	class:CMPTransaction	access:private
CMPTransaction::desired_value	tx.h	/^    uint64_t desired_value;$/;"	m	line:78	class:CMPTransaction	access:private
CMPTransaction::distribution_property	tx.h	/^    unsigned int distribution_property;$/;"	m	line:59	class:CMPTransaction	access:private
CMPTransaction::early_bird	tx.h	/^    unsigned char early_bird;$/;"	m	line:73	class:CMPTransaction	access:private
CMPTransaction::ecosystem	tx.h	/^    unsigned char ecosystem;$/;"	m	line:62	class:CMPTransaction	access:private
CMPTransaction::encodingClass	tx.h	/^    int encodingClass;  \/\/ No Marker = 0, Class A = 1, Class B = 2, Class C = 3$/;"	m	line:40	class:CMPTransaction	access:private
CMPTransaction::feature_id	tx.h	/^    uint16_t feature_id;$/;"	m	line:93	class:CMPTransaction	access:private
CMPTransaction::getActivationBlock	tx.h	/^    uint32_t getActivationBlock() const { return activation_block; }$/;"	f	line:210	class:CMPTransaction	access:public	signature:() const
CMPTransaction::getAlertExpiry	tx.h	/^    uint32_t getAlertExpiry() const { return alert_expiry; }$/;"	f	line:206	class:CMPTransaction	access:public	signature:() const
CMPTransaction::getAlertMessage	tx.h	/^    std::string getAlertMessage() const { return alert_text; }$/;"	f	line:207	class:CMPTransaction	access:public	signature:() const
CMPTransaction::getAlertType	tx.h	/^    uint16_t getAlertType() const { return alert_type; }$/;"	f	line:205	class:CMPTransaction	access:public	signature:() const
CMPTransaction::getAmount	tx.h	/^    uint64_t getAmount() const { return nValue; }$/;"	f	line:191	class:CMPTransaction	access:public	signature:() const
CMPTransaction::getDeadline	tx.h	/^    int64_t getDeadline() const { return deadline; }$/;"	f	line:200	class:CMPTransaction	access:public	signature:() const
CMPTransaction::getDistributionProperty	tx.h	/^    uint32_t getDistributionProperty() const { return distribution_property; }$/;"	f	line:213	class:CMPTransaction	access:public	signature:() const
CMPTransaction::getEarlyBirdBonus	tx.h	/^    uint8_t getEarlyBirdBonus() const { return early_bird; }$/;"	f	line:201	class:CMPTransaction	access:public	signature:() const
CMPTransaction::getEcosystem	tx.h	/^    uint8_t getEcosystem() const { return ecosystem; }$/;"	f	line:193	class:CMPTransaction	access:public	signature:() const
CMPTransaction::getEncodingClass	tx.h	/^    int getEncodingClass() const { return encodingClass; }$/;"	f	line:204	class:CMPTransaction	access:public	signature:() const
CMPTransaction::getFeatureId	tx.h	/^    uint16_t getFeatureId() const { return feature_id; }$/;"	f	line:209	class:CMPTransaction	access:public	signature:() const
CMPTransaction::getFeePaid	tx.h	/^    uint64_t getFeePaid() const { return tx_fee_paid; }$/;"	f	line:187	class:CMPTransaction	access:public	signature:() const
CMPTransaction::getHash	tx.h	/^    uint256 getHash() const { return txid; }$/;"	f	line:181	class:CMPTransaction	access:public	signature:() const
CMPTransaction::getIndexInBlock	tx.h	/^    unsigned int getIndexInBlock() const { return tx_idx; }$/;"	f	line:212	class:CMPTransaction	access:public	signature:() const
CMPTransaction::getIssuerBonus	tx.h	/^    uint8_t getIssuerBonus() const { return percentage; }$/;"	f	line:202	class:CMPTransaction	access:public	signature:() const
CMPTransaction::getMinClientVersion	tx.h	/^    uint32_t getMinClientVersion() const { return min_client_version; }$/;"	f	line:211	class:CMPTransaction	access:public	signature:() const
CMPTransaction::getNewAmount	tx.h	/^    uint64_t getNewAmount() const { return nNewValue; }$/;"	f	line:192	class:CMPTransaction	access:public	signature:() const
CMPTransaction::getPayload	tx.h	/^    std::string getPayload() const { return HexStr(pkt, pkt + pkt_size); }$/;"	f	line:190	class:CMPTransaction	access:public	signature:() const
CMPTransaction::getPayloadSize	tx.h	/^    int getPayloadSize() const { return pkt_size; }$/;"	f	line:208	class:CMPTransaction	access:public	signature:() const
CMPTransaction::getPreviousId	tx.h	/^    uint32_t getPreviousId() const { return prev_prop_id; }$/;"	f	line:194	class:CMPTransaction	access:public	signature:() const
CMPTransaction::getProperty	tx.h	/^    unsigned int getProperty() const { return property; }$/;"	f	line:184	class:CMPTransaction	access:public	signature:() const
CMPTransaction::getPropertyType	tx.h	/^    unsigned short getPropertyType() const { return prop_type; }$/;"	f	line:186	class:CMPTransaction	access:public	signature:() const
CMPTransaction::getReceiver	tx.h	/^    std::string getReceiver() const { return receiver; }$/;"	f	line:189	class:CMPTransaction	access:public	signature:() const
CMPTransaction::getSPCategory	tx.h	/^    std::string getSPCategory() const { return category; }$/;"	f	line:195	class:CMPTransaction	access:public	signature:() const
CMPTransaction::getSPData	tx.h	/^    std::string getSPData() const { return data; }$/;"	f	line:199	class:CMPTransaction	access:public	signature:() const
CMPTransaction::getSPName	tx.h	/^    std::string getSPName() const { return name; }$/;"	f	line:197	class:CMPTransaction	access:public	signature:() const
CMPTransaction::getSPSubCategory	tx.h	/^    std::string getSPSubCategory() const { return subcategory; }$/;"	f	line:196	class:CMPTransaction	access:public	signature:() const
CMPTransaction::getSPUrl	tx.h	/^    std::string getSPUrl() const { return url; }$/;"	f	line:198	class:CMPTransaction	access:public	signature:() const
CMPTransaction::getSender	tx.h	/^    std::string getSender() const { return sender; }$/;"	f	line:188	class:CMPTransaction	access:public	signature:() const
CMPTransaction::getType	tx.h	/^    unsigned int getType() const { return type; }$/;"	f	line:182	class:CMPTransaction	access:public	signature:() const
CMPTransaction::getTypeString	tx.h	/^    std::string getTypeString() const { return strTransactionType(getType()); }$/;"	f	line:183	class:CMPTransaction	access:public	signature:() const
CMPTransaction::getVersion	tx.h	/^    unsigned short getVersion() const { return version; }$/;"	f	line:185	class:CMPTransaction	access:public	signature:() const
CMPTransaction::interpretPacket	tx.cpp	/^int CMPTransaction::interpretPacket()$/;"	f	line:858	class:CMPTransaction	signature:()
CMPTransaction::interpret_AcceptOfferBTC	tx.cpp	/^bool CMPTransaction::interpret_AcceptOfferBTC()$/;"	f	line:323	class:CMPTransaction	signature:()
CMPTransaction::interpret_Activation	tx.cpp	/^bool CMPTransaction::interpret_Activation()$/;"	f	line:799	class:CMPTransaction	signature:()
CMPTransaction::interpret_Alert	tx.cpp	/^bool CMPTransaction::interpret_Alert()$/;"	f	line:821	class:CMPTransaction	signature:()
CMPTransaction::interpret_ChangeIssuer	tx.cpp	/^bool CMPTransaction::interpret_ChangeIssuer()$/;"	f	line:657	class:CMPTransaction	signature:()
CMPTransaction::interpret_CloseCrowdsale	tx.cpp	/^bool CMPTransaction::interpret_CloseCrowdsale()$/;"	f	line:553	class:CMPTransaction	signature:()
CMPTransaction::interpret_CreatePropertyFixed	tx.cpp	/^bool CMPTransaction::interpret_CreatePropertyFixed()$/;"	f	line:445	class:CMPTransaction	signature:()
CMPTransaction::interpret_CreatePropertyManaged	tx.cpp	/^bool CMPTransaction::interpret_CreatePropertyManaged()$/;"	f	line:569	class:CMPTransaction	signature:()
CMPTransaction::interpret_CreatePropertyVariable	tx.cpp	/^bool CMPTransaction::interpret_CreatePropertyVariable()$/;"	f	line:493	class:CMPTransaction	signature:()
CMPTransaction::interpret_Deactivation	tx.cpp	/^bool CMPTransaction::interpret_Deactivation()$/;"	f	line:783	class:CMPTransaction	signature:()
CMPTransaction::interpret_DisableFreezing	tx.cpp	/^bool CMPTransaction::interpret_DisableFreezing()$/;"	f	line:689	class:CMPTransaction	signature:()
CMPTransaction::interpret_EnableFreezing	tx.cpp	/^bool CMPTransaction::interpret_EnableFreezing()$/;"	f	line:673	class:CMPTransaction	signature:()
CMPTransaction::interpret_FreezeTokens	tx.cpp	/^bool CMPTransaction::interpret_FreezeTokens()$/;"	f	line:705	class:CMPTransaction	signature:()
CMPTransaction::interpret_GrantTokens	tx.cpp	/^bool CMPTransaction::interpret_GrantTokens()$/;"	f	line:612	class:CMPTransaction	signature:()
CMPTransaction::interpret_MetaDExCancelEcosystem	tx.cpp	/^bool CMPTransaction::interpret_MetaDExCancelEcosystem()$/;"	f	line:423	class:CMPTransaction	signature:()
CMPTransaction::interpret_MetaDExCancelPair	tx.cpp	/^bool CMPTransaction::interpret_MetaDExCancelPair()$/;"	f	line:399	class:CMPTransaction	signature:()
CMPTransaction::interpret_MetaDExCancelPrice	tx.cpp	/^bool CMPTransaction::interpret_MetaDExCancelPrice()$/;"	f	line:371	class:CMPTransaction	signature:()
CMPTransaction::interpret_MetaDExTrade	tx.cpp	/^bool CMPTransaction::interpret_MetaDExTrade()$/;"	f	line:343	class:CMPTransaction	signature:()
CMPTransaction::interpret_RevokeTokens	tx.cpp	/^bool CMPTransaction::interpret_RevokeTokens()$/;"	f	line:637	class:CMPTransaction	signature:()
CMPTransaction::interpret_SendAll	tx.cpp	/^bool CMPTransaction::interpret_SendAll()$/;"	f	line:266	class:CMPTransaction	signature:()
CMPTransaction::interpret_SendToOwners	tx.cpp	/^bool CMPTransaction::interpret_SendToOwners()$/;"	f	line:238	class:CMPTransaction	signature:()
CMPTransaction::interpret_SimpleSend	tx.cpp	/^bool CMPTransaction::interpret_SimpleSend()$/;"	f	line:213	class:CMPTransaction	signature:()
CMPTransaction::interpret_TradeOffer	tx.cpp	/^bool CMPTransaction::interpret_TradeOffer()$/;"	f	line:288	class:CMPTransaction	signature:()
CMPTransaction::interpret_Transaction	tx.cpp	/^bool CMPTransaction::interpret_Transaction()$/;"	f	line:107	class:CMPTransaction	signature:()
CMPTransaction::interpret_TransactionType	tx.cpp	/^bool CMPTransaction::interpret_TransactionType()$/;"	f	line:189	class:CMPTransaction	signature:()
CMPTransaction::interpret_UnfreezeTokens	tx.cpp	/^bool CMPTransaction::interpret_UnfreezeTokens()$/;"	f	line:744	class:CMPTransaction	signature:()
CMPTransaction::isOverrun	tx.cpp	/^bool CMPTransaction::isOverrun(const char* p)$/;"	f	line:98	class:CMPTransaction	signature:(const char* p)
CMPTransaction::isRpcOnly	tx.h	/^    bool isRpcOnly() const { return rpcOnly; }$/;"	f	line:203	class:CMPTransaction	access:public	signature:() const
CMPTransaction::logicHelper_CrowdsaleParticipation	tx.cpp	/^int CMPTransaction::logicHelper_CrowdsaleParticipation()$/;"	f	line:951	class:CMPTransaction	signature:()
CMPTransaction::logicMath_AcceptOffer_BTC	tx.cpp	/^int CMPTransaction::logicMath_AcceptOffer_BTC()$/;"	f	line:1357	class:CMPTransaction	signature:()
CMPTransaction::logicMath_Activation	tx.cpp	/^int CMPTransaction::logicMath_Activation()$/;"	f	line:2380	class:CMPTransaction	signature:()
CMPTransaction::logicMath_Alert	tx.cpp	/^int CMPTransaction::logicMath_Alert()$/;"	f	line:2415	class:CMPTransaction	signature:()
CMPTransaction::logicMath_ChangeIssuer	tx.cpp	/^int CMPTransaction::logicMath_ChangeIssuer()$/;"	f	line:2044	class:CMPTransaction	signature:()
CMPTransaction::logicMath_CloseCrowdsale	tx.cpp	/^int CMPTransaction::logicMath_CloseCrowdsale()$/;"	f	line:1756	class:CMPTransaction	signature:()
CMPTransaction::logicMath_CreatePropertyFixed	tx.cpp	/^int CMPTransaction::logicMath_CreatePropertyFixed()$/;"	f	line:1584	class:CMPTransaction	signature:()
CMPTransaction::logicMath_CreatePropertyManaged	tx.cpp	/^int CMPTransaction::logicMath_CreatePropertyManaged()$/;"	f	line:1823	class:CMPTransaction	signature:()
CMPTransaction::logicMath_CreatePropertyVariable	tx.cpp	/^int CMPTransaction::logicMath_CreatePropertyVariable()$/;"	f	line:1654	class:CMPTransaction	signature:()
CMPTransaction::logicMath_Deactivation	tx.cpp	/^int CMPTransaction::logicMath_Deactivation()$/;"	f	line:2337	class:CMPTransaction	signature:()
CMPTransaction::logicMath_DisableFreezing	tx.cpp	/^int CMPTransaction::logicMath_DisableFreezing()$/;"	f	line:2168	class:CMPTransaction	signature:()
CMPTransaction::logicMath_EnableFreezing	tx.cpp	/^int CMPTransaction::logicMath_EnableFreezing()$/;"	f	line:2107	class:CMPTransaction	signature:()
CMPTransaction::logicMath_FreezeTokens	tx.cpp	/^int CMPTransaction::logicMath_FreezeTokens()$/;"	f	line:2221	class:CMPTransaction	signature:()
CMPTransaction::logicMath_GrantTokens	tx.cpp	/^int CMPTransaction::logicMath_GrantTokens()$/;"	f	line:1887	class:CMPTransaction	signature:()
CMPTransaction::logicMath_MetaDExCancelEcosystem	tx.cpp	/^int CMPTransaction::logicMath_MetaDExCancelEcosystem()$/;"	f	line:1561	class:CMPTransaction	signature:()
CMPTransaction::logicMath_MetaDExCancelPair	tx.cpp	/^int CMPTransaction::logicMath_MetaDExCancelPair()$/;"	f	line:1515	class:CMPTransaction	signature:()
CMPTransaction::logicMath_MetaDExCancelPrice	tx.cpp	/^int CMPTransaction::logicMath_MetaDExCancelPrice()$/;"	f	line:1459	class:CMPTransaction	signature:()
CMPTransaction::logicMath_MetaDExTrade	tx.cpp	/^int CMPTransaction::logicMath_MetaDExTrade()$/;"	f	line:1383	class:CMPTransaction	signature:()
CMPTransaction::logicMath_RevokeTokens	tx.cpp	/^int CMPTransaction::logicMath_RevokeTokens()$/;"	f	line:1974	class:CMPTransaction	signature:()
CMPTransaction::logicMath_SendAll	tx.cpp	/^int CMPTransaction::logicMath_SendAll()$/;"	f	line:1203	class:CMPTransaction	signature:()
CMPTransaction::logicMath_SendToOwners	tx.cpp	/^int CMPTransaction::logicMath_SendToOwners()$/;"	f	line:1076	class:CMPTransaction	signature:()
CMPTransaction::logicMath_SimpleSend	tx.cpp	/^int CMPTransaction::logicMath_SimpleSend()$/;"	f	line:1030	class:CMPTransaction	signature:()
CMPTransaction::logicMath_TradeOffer	tx.cpp	/^int CMPTransaction::logicMath_TradeOffer()$/;"	f	line:1261	class:CMPTransaction	signature:()
CMPTransaction::logicMath_UnfreezeTokens	tx.cpp	/^int CMPTransaction::logicMath_UnfreezeTokens()$/;"	f	line:2279	class:CMPTransaction	signature:()
CMPTransaction::min_client_version	tx.h	/^    uint32_t min_client_version;$/;"	m	line:95	class:CMPTransaction	access:private
CMPTransaction::min_fee	tx.h	/^    uint64_t min_fee;$/;"	m	line:84	class:CMPTransaction	access:private
CMPTransaction::nNewValue	tx.h	/^    uint64_t nNewValue;$/;"	m	line:51	class:CMPTransaction	access:private
CMPTransaction::nValue	tx.h	/^    uint64_t nValue;$/;"	m	line:50	class:CMPTransaction	access:private
CMPTransaction::name	tx.h	/^    char name[SP_STRING_FIELD_LEN];$/;"	m	line:69	class:CMPTransaction	access:private
CMPTransaction::operator <	tx.h	/^    bool operator<(const CMPTransaction& other) const$/;"	f	line:303	class:CMPTransaction	access:public	signature:(const CMPTransaction& other) const
CMPTransaction::percentage	tx.h	/^    unsigned char percentage;$/;"	m	line:74	class:CMPTransaction	access:private
CMPTransaction::pkt	tx.h	/^    unsigned char pkt[1 + MAX_PACKETS * PACKET_SIZE];$/;"	m	line:39	class:CMPTransaction	access:private
CMPTransaction::pkt_size	tx.h	/^    int pkt_size;$/;"	m	line:38	class:CMPTransaction	access:private
CMPTransaction::prev_prop_id	tx.h	/^    unsigned int prev_prop_id;$/;"	m	line:66	class:CMPTransaction	access:private
CMPTransaction::prop_type	tx.h	/^    unsigned short prop_type;$/;"	m	line:65	class:CMPTransaction	access:private
CMPTransaction::property	tx.h	/^    unsigned int property;$/;"	m	line:56	class:CMPTransaction	access:private
CMPTransaction::receiver	tx.h	/^    std::string receiver;$/;"	m	line:43	class:CMPTransaction	access:private
CMPTransaction::rpcOnly	tx.h	/^    bool rpcOnly;$/;"	m	line:98	class:CMPTransaction	access:private
CMPTransaction::sender	tx.h	/^    std::string sender;$/;"	m	line:42	class:CMPTransaction	access:private
CMPTransaction::subaction	tx.h	/^    unsigned char subaction;$/;"	m	line:85	class:CMPTransaction	access:private
CMPTransaction::subcategory	tx.h	/^    char subcategory[SP_STRING_FIELD_LEN];$/;"	m	line:68	class:CMPTransaction	access:private
CMPTransaction::tx_fee_paid	tx.h	/^    uint64_t tx_fee_paid;$/;"	m	line:36	class:CMPTransaction	access:private
CMPTransaction::tx_idx	tx.h	/^    unsigned int tx_idx;  \/\/ tx # within the block, 0-based$/;"	m	line:35	class:CMPTransaction	access:private
CMPTransaction::txid	tx.h	/^    uint256 txid;$/;"	m	line:32	class:CMPTransaction	access:private
CMPTransaction::type	tx.h	/^    unsigned int type;$/;"	m	line:45	class:CMPTransaction	access:private
CMPTransaction::unlockLogic	tx.h	/^    void unlockLogic() { rpcOnly = false; };$/;"	f	line:300	class:CMPTransaction	access:public	signature:()
CMPTransaction::url	tx.h	/^    char url[SP_STRING_FIELD_LEN];$/;"	m	line:70	class:CMPTransaction	access:private
CMPTransaction::version	tx.h	/^    unsigned short version; \/\/ = MP_TX_PKT_V0;$/;"	m	line:46	class:CMPTransaction	access:private
CMPTxList	dbtxlist.cpp	/^CMPTxList::CMPTxList(const boost::filesystem::path& path, bool fWipe)$/;"	f	line:47	class:CMPTxList	signature:(const boost::filesystem::path& path, bool fWipe)
CMPTxList	dbtxlist.h	/^class CMPTxList : public CDBBase$/;"	c	line:17	inherits:CDBBase
CMPTxList::CMPTxList	dbtxlist.cpp	/^CMPTxList::CMPTxList(const boost::filesystem::path& path, bool fWipe)$/;"	f	line:47	class:CMPTxList	signature:(const boost::filesystem::path& path, bool fWipe)
CMPTxList::CheckForFreezeTxs	dbtxlist.cpp	/^bool CMPTxList::CheckForFreezeTxs(int blockHeight)$/;"	f	line:698	class:CMPTxList	signature:(int blockHeight)
CMPTxList::GetSeedBlocks	dbtxlist.cpp	/^std::set<int> CMPTxList::GetSeedBlocks(int startHeight, int endHeight)$/;"	f	line:447	class:CMPTxList	signature:(int startHeight, int endHeight)
CMPTxList::LoadActivations	dbtxlist.cpp	/^void CMPTxList::LoadActivations(int blockHeight)$/;"	f	line:544	class:CMPTxList	signature:(int blockHeight)
CMPTxList::LoadAlerts	dbtxlist.cpp	/^void CMPTxList::LoadAlerts(int blockHeight)$/;"	f	line:471	class:CMPTxList	signature:(int blockHeight)
CMPTxList::LoadFreezeState	dbtxlist.cpp	/^bool CMPTxList::LoadFreezeState(int blockHeight)$/;"	f	line:619	class:CMPTxList	signature:(int blockHeight)
CMPTxList::exists	dbtxlist.cpp	/^bool CMPTxList::exists(const uint256 &txid)$/;"	f	line:373	class:CMPTxList	signature:(const uint256 &txid)
CMPTxList::findMetaDExCancel	dbtxlist.cpp	/^uint256 CMPTxList::findMetaDExCancel(const uint256 txid)$/;"	f	line:194	class:CMPTxList	signature:(const uint256 txid)
CMPTxList::getDBVersion	dbtxlist.cpp	/^int CMPTxList::getDBVersion()$/;"	f	line:343	class:CMPTxList	signature:()
CMPTxList::getKeyValue	dbtxlist.cpp	/^std::string CMPTxList::getKeyValue(std::string key)$/;"	f	line:182	class:CMPTxList	signature:(std::string key)
CMPTxList::getMPTransactionCountBlock	dbtxlist.cpp	/^int CMPTxList::getMPTransactionCountBlock(int block)$/;"	f	line:315	class:CMPTxList	signature:(int block)
CMPTxList::getMPTransactionCountTotal	dbtxlist.cpp	/^int CMPTxList::getMPTransactionCountTotal()$/;"	f	line:300	class:CMPTxList	signature:()
CMPTxList::getNumberOfMetaDExCancels	dbtxlist.cpp	/^int CMPTxList::getNumberOfMetaDExCancels(const uint256 txid)$/;"	f	line:240	class:CMPTxList	signature:(const uint256 txid)
CMPTxList::getNumberOfSubRecords	dbtxlist.cpp	/^int CMPTxList::getNumberOfSubRecords(const uint256& txid)$/;"	f	line:223	class:CMPTxList	signature:(const uint256& txid)
CMPTxList::getPurchaseDetails	dbtxlist.cpp	/^bool CMPTxList::getPurchaseDetails(const uint256 txid, int purchaseNumber, std::string* buyer, std::string* seller, uint64_t* vout, uint64_t* propertyId, uint64_t* nValue)$/;"	f	line:258	class:CMPTxList	signature:(const uint256 txid, int purchaseNumber, std::string* buyer, std::string* seller, uint64_t* vout, uint64_t* propertyId, uint64_t* nValue)
CMPTxList::getSendAllDetails	dbtxlist.cpp	/^bool CMPTxList::getSendAllDetails(const uint256& txid, int subSend, uint32_t& propertyId, int64_t& amount)$/;"	f	line:283	class:CMPTxList	signature:(const uint256& txid, int subSend, uint32_t& propertyId, int64_t& amount)
CMPTxList::getTX	dbtxlist.cpp	/^bool CMPTxList::getTX(const uint256 &txid, std::string& value)$/;"	f	line:387	class:CMPTxList	signature:(const uint256 &txid, std::string& value)
CMPTxList::getValidMPTX	dbtxlist.cpp	/^bool CMPTxList::getValidMPTX(const uint256& txid, int* block, unsigned int* type, uint64_t* nAmended)$/;"	f	line:406	class:CMPTxList	signature:(const uint256& txid, int* block, unsigned int* type, uint64_t* nAmended)
CMPTxList::isMPinBlockRange	dbtxlist.cpp	/^bool CMPTxList::isMPinBlockRange(int starting_block, int ending_block, bool bDeleteFound)$/;"	f	line:747	class:CMPTxList	signature:(int starting_block, int ending_block, bool bDeleteFound)
CMPTxList::printAll	dbtxlist.cpp	/^void CMPTxList::printAll()$/;"	f	line:728	class:CMPTxList	signature:()
CMPTxList::printStats	dbtxlist.cpp	/^void CMPTxList::printStats()$/;"	f	line:723	class:CMPTxList	signature:()
CMPTxList::recordMetaDExCancelTX	dbtxlist.cpp	/^void CMPTxList::recordMetaDExCancelTX(const uint256& txidMaster, const uint256& txidSub, bool fValid, int nBlock, unsigned int propertyId, uint64_t nValue)$/;"	f	line:126	class:CMPTxList	signature:(const uint256& txidMaster, const uint256& txidSub, bool fValid, int nBlock, unsigned int propertyId, uint64_t nValue)
CMPTxList::recordPaymentTX	dbtxlist.cpp	/^void CMPTxList::recordPaymentTX(const uint256& txid, bool fValid, int nBlock, unsigned int vout, unsigned int propertyId, uint64_t nValue, std::string buyer, std::string seller)$/;"	f	line:77	class:CMPTxList	signature:(const uint256& txid, bool fValid, int nBlock, unsigned int vout, unsigned int propertyId, uint64_t nValue, std::string buyer, std::string seller)
CMPTxList::recordSendAllSubRecord	dbtxlist.cpp	/^void CMPTxList::recordSendAllSubRecord(const uint256& txid, int subRecordNumber, uint32_t propertyId, int64_t nValue)$/;"	f	line:171	class:CMPTxList	signature:(const uint256& txid, int subRecordNumber, uint32_t propertyId, int64_t nValue)
CMPTxList::recordTX	dbtxlist.cpp	/^void CMPTxList::recordTX(const uint256 &txid, bool fValid, int nBlock, unsigned int type, uint64_t nValue)$/;"	f	line:58	class:CMPTxList	signature:(const uint256 &txid, bool fValid, int nBlock, unsigned int type, uint64_t nValue)
CMPTxList::setDBVersion	dbtxlist.cpp	/^int CMPTxList::setDBVersion()$/;"	f	line:363	class:CMPTxList	signature:()
CMPTxList::~CMPTxList	dbtxlist.cpp	/^CMPTxList::~CMPTxList()$/;"	f	line:53	class:CMPTxList	signature:()
CMainConsensusParams	rules.cpp	/^CMainConsensusParams::CMainConsensusParams()$/;"	f	line:165	class:mastercore::CMainConsensusParams	signature:()
CMainConsensusParams	rules.h	/^class CMainConsensusParams: public CConsensusParams$/;"	c	line:153	namespace:mastercore	inherits:CConsensusParams
COmniFeeCache	dbfees.cpp	/^COmniFeeCache::COmniFeeCache(const boost::filesystem::path& path, bool fWipe)$/;"	f	line:37	class:COmniFeeCache	signature:(const boost::filesystem::path& path, bool fWipe)
COmniFeeCache	dbfees.h	/^class COmniFeeCache : public CDBBase$/;"	c	line:19	inherits:CDBBase
COmniFeeCache::AddFee	dbfees.cpp	/^void COmniFeeCache::AddFee(const uint32_t &propertyId, int block, const int64_t &amount)$/;"	f	line:111	class:COmniFeeCache	signature:(const uint32_t &propertyId, int block, const int64_t &amount)
COmniFeeCache::COmniFeeCache	dbfees.cpp	/^COmniFeeCache::COmniFeeCache(const boost::filesystem::path& path, bool fWipe)$/;"	f	line:37	class:COmniFeeCache	signature:(const boost::filesystem::path& path, bool fWipe)
COmniFeeCache::ClearCache	dbfees.cpp	/^void COmniFeeCache::ClearCache(const uint32_t &propertyId, int block)$/;"	f	line:82	class:COmniFeeCache	signature:(const uint32_t &propertyId, int block)
COmniFeeCache::DistributeCache	dbfees.cpp	/^void COmniFeeCache::DistributeCache(const uint32_t &propertyId, int block)$/;"	f	line:201	class:COmniFeeCache	signature:(const uint32_t &propertyId, int block)
COmniFeeCache::EvalCache	dbfees.cpp	/^void COmniFeeCache::EvalCache(const uint32_t &propertyId, int block)$/;"	f	line:193	class:COmniFeeCache	signature:(const uint32_t &propertyId, int block)
COmniFeeCache::GetCacheHistory	dbfees.cpp	/^std::set<feeCacheItem> COmniFeeCache::GetCacheHistory(const uint32_t &propertyId)$/;"	f	line:309	class:COmniFeeCache	signature:(const uint32_t &propertyId)
COmniFeeCache::GetCachedAmount	dbfees.cpp	/^int64_t COmniFeeCache::GetCachedAmount(const uint32_t &propertyId)$/;"	f	line:66	class:COmniFeeCache	signature:(const uint32_t &propertyId)
COmniFeeCache::GetDistributionThreshold	dbfees.cpp	/^int64_t COmniFeeCache::GetDistributionThreshold(const uint32_t &propertyId)$/;"	f	line:49	class:COmniFeeCache	signature:(const uint32_t &propertyId)
COmniFeeCache::PruneCache	dbfees.cpp	/^void COmniFeeCache::PruneCache(const uint32_t &propertyId, int block)$/;"	f	line:244	class:COmniFeeCache	signature:(const uint32_t &propertyId, int block)
COmniFeeCache::RollBackCache	dbfees.cpp	/^void COmniFeeCache::RollBackCache(int block)$/;"	f	line:164	class:COmniFeeCache	signature:(int block)
COmniFeeCache::UpdateDistributionThresholds	dbfees.cpp	/^void COmniFeeCache::UpdateDistributionThresholds(uint32_t propertyId)$/;"	f	line:55	class:COmniFeeCache	signature:(uint32_t propertyId)
COmniFeeCache::printAll	dbfees.cpp	/^void COmniFeeCache::printAll()$/;"	f	line:297	class:COmniFeeCache	signature:()
COmniFeeCache::printStats	dbfees.cpp	/^void COmniFeeCache::printStats()$/;"	f	line:291	class:COmniFeeCache	signature:()
COmniFeeCache::~COmniFeeCache	dbfees.cpp	/^COmniFeeCache::~COmniFeeCache()$/;"	f	line:43	class:COmniFeeCache	signature:()
COmniFeeHistory	dbfees.cpp	/^COmniFeeHistory::COmniFeeHistory(const boost::filesystem::path& path, bool fWipe)$/;"	f	line:340	class:COmniFeeHistory	signature:(const boost::filesystem::path& path, bool fWipe)
COmniFeeHistory	dbfees.h	/^class COmniFeeHistory : public CDBBase$/;"	c	line:54	inherits:CDBBase
COmniFeeHistory::COmniFeeHistory	dbfees.cpp	/^COmniFeeHistory::COmniFeeHistory(const boost::filesystem::path& path, bool fWipe)$/;"	f	line:340	class:COmniFeeHistory	signature:(const boost::filesystem::path& path, bool fWipe)
COmniFeeHistory::CountRecords	dbfees.cpp	/^int COmniFeeHistory::CountRecords()$/;"	f	line:371	class:COmniFeeHistory	signature:()
COmniFeeHistory::GetDistributionData	dbfees.cpp	/^bool COmniFeeHistory::GetDistributionData(int id, uint32_t *propertyId, int *block, int64_t *total)$/;"	f	line:436	class:COmniFeeHistory	signature:(int id, uint32_t *propertyId, int *block, int64_t *total)
COmniFeeHistory::GetDistributionsForProperty	dbfees.cpp	/^std::set<int> COmniFeeHistory::GetDistributionsForProperty(const uint32_t &propertyId)$/;"	f	line:409	class:COmniFeeHistory	signature:(const uint32_t &propertyId)
COmniFeeHistory::GetFeeDistribution	dbfees.cpp	/^std::set<feeHistoryItem> COmniFeeHistory::GetFeeDistribution(int id)$/;"	f	line:461	class:COmniFeeHistory	signature:(int id)
COmniFeeHistory::RecordFeeDistribution	dbfees.cpp	/^void COmniFeeHistory::RecordFeeDistribution(const uint32_t &propertyId, int block, int64_t total, std::set<feeHistoryItem> feeRecipients)$/;"	f	line:498	class:COmniFeeHistory	signature:(const uint32_t &propertyId, int block, int64_t total, std::set<feeHistoryItem> feeRecipients)
COmniFeeHistory::RollBackHistory	dbfees.cpp	/^void COmniFeeHistory::RollBackHistory(int block)$/;"	f	line:384	class:COmniFeeHistory	signature:(int block)
COmniFeeHistory::printAll	dbfees.cpp	/^void COmniFeeHistory::printAll()$/;"	f	line:358	class:COmniFeeHistory	signature:()
COmniFeeHistory::printStats	dbfees.cpp	/^void COmniFeeHistory::printStats()$/;"	f	line:352	class:COmniFeeHistory	signature:()
COmniFeeHistory::~COmniFeeHistory	dbfees.cpp	/^COmniFeeHistory::~COmniFeeHistory()$/;"	f	line:346	class:COmniFeeHistory	signature:()
COmniTransactionDB	dbtransaction.cpp	/^COmniTransactionDB::COmniTransactionDB(const boost::filesystem::path& path, bool fWipe)$/;"	f	line:21	class:COmniTransactionDB	signature:(const boost::filesystem::path& path, bool fWipe)
COmniTransactionDB	dbtransaction.h	/^class COmniTransactionDB : public CDBBase$/;"	c	line:17	inherits:CDBBase
COmniTransactionDB::COmniTransactionDB	dbtransaction.cpp	/^COmniTransactionDB::COmniTransactionDB(const boost::filesystem::path& path, bool fWipe)$/;"	f	line:21	class:COmniTransactionDB	signature:(const boost::filesystem::path& path, bool fWipe)
COmniTransactionDB::FetchInvalidReason	dbtransaction.cpp	/^std::string COmniTransactionDB::FetchInvalidReason(const uint256& txid)$/;"	f	line:90	class:COmniTransactionDB	signature:(const uint256& txid)
COmniTransactionDB::FetchTransactionDetails	dbtransaction.cpp	/^std::vector<std::string> COmniTransactionDB::FetchTransactionDetails(const uint256& txid)$/;"	f	line:35	class:COmniTransactionDB	signature:(const uint256& txid)
COmniTransactionDB::FetchTransactionPosition	dbtransaction.cpp	/^uint32_t COmniTransactionDB::FetchTransactionPosition(const uint256& txid)$/;"	f	line:75	class:COmniTransactionDB	signature:(const uint256& txid)
COmniTransactionDB::RecordTransaction	dbtransaction.cpp	/^void COmniTransactionDB::RecordTransaction(const uint256& txid, uint32_t posInBlock, int processingResult)$/;"	f	line:61	class:COmniTransactionDB	signature:(const uint256& txid, uint32_t posInBlock, int processingResult)
COmniTransactionDB::~COmniTransactionDB	dbtransaction.cpp	/^COmniTransactionDB::~COmniTransactionDB()$/;"	f	line:27	class:COmniTransactionDB	signature:()
CRegTestConsensusParams	rules.cpp	/^CRegTestConsensusParams::CRegTestConsensusParams()$/;"	f	line:247	class:mastercore::CRegTestConsensusParams	signature:()
CRegTestConsensusParams	rules.h	/^class CRegTestConsensusParams: public CConsensusParams$/;"	c	line:178	namespace:mastercore	inherits:CConsensusParams
CTestNetConsensusParams	rules.cpp	/^CTestNetConsensusParams::CTestNetConsensusParams()$/;"	f	line:206	class:mastercore::CTestNetConsensusParams	signature:()
CTestNetConsensusParams	rules.h	/^class CTestNetConsensusParams: public CConsensusParams$/;"	c	line:167	namespace:mastercore	inherits:CConsensusParams
CheckActivationAuthorization	activation.cpp	/^bool CheckActivationAuthorization(const std::string& sender)$/;"	f	line:145	namespace:mastercore	signature:(const std::string& sender)
CheckAlertAuthorization	notifications.cpp	/^bool CheckAlertAuthorization(const std::string& sender)$/;"	f	line:87	namespace:mastercore	signature:(const std::string& sender)
CheckDeactivationAuthorization	activation.cpp	/^bool CheckDeactivationAuthorization(const std::string& sender)$/;"	f	line:216	namespace:mastercore	signature:(const std::string& sender)
CheckExpiredAlerts	notifications.cpp	/^bool CheckExpiredAlerts(unsigned int curBlock, uint64_t curTime)$/;"	f	line:148	namespace:mastercore	signature:(unsigned int curBlock, uint64_t curTime)
CheckFee	walletutils.cpp	/^bool CheckFee(const std::string& fromAddress, size_t nDataSize)$/;"	f	line:69	namespace:mastercore	signature:(const std::string& fromAddress, size_t nDataSize)
CheckForFreezeTxs	dbtxlist.cpp	/^bool CMPTxList::CheckForFreezeTxs(int blockHeight)$/;"	f	line:698	class:CMPTxList	signature:(int blockHeight)
CheckInput	walletutils.cpp	/^bool CheckInput(const CTxOut& txOut, int nHeight, CTxDestination& dest)$/;"	f	line:109	namespace:mastercore	signature:(const CTxOut& txOut, int nHeight, CTxDestination& dest)
CheckLiveActivations	activation.cpp	/^void CheckLiveActivations(int blockHeight)$/;"	f	line:84	namespace:mastercore	signature:(int blockHeight)
CheckOutputType	test/script_solver_tests.cpp	/^static void CheckOutputType(const CScript& script, txnouttype outTypeExpected)$/;"	f	line:17	file:	signature:(const CScript& script, txnouttype outTypeExpected)
CheckWalletUpdate	omnicore.cpp	/^void CheckWalletUpdate(bool forceUpdate)$/;"	f	line:606	signature:(bool forceUpdate)
Clear	dbbase.cpp	/^void CDBBase::Clear()$/;"	f	line:32	class:CDBBase	signature:()
Clear	dbspinfo.cpp	/^void CMPSPInfo::Clear()$/;"	f	line:84	class:CMPSPInfo	signature:()
ClearActivations	activation.cpp	/^void ClearActivations()$/;"	f	line:129	namespace:mastercore	signature:()
ClearAlerts	notifications.cpp	/^void ClearAlerts()$/;"	f	line:50	namespace:mastercore	signature:()
ClearCache	dbfees.cpp	/^void COmniFeeCache::ClearCache(const uint32_t &propertyId, int block)$/;"	f	line:82	class:COmniFeeCache	signature:(const uint32_t &propertyId, int block)
ClearFreezeState	omnicore.cpp	/^void mastercore::ClearFreezeState()$/;"	f	line:338	class:mastercore	signature:()
Close	dbbase.cpp	/^void CDBBase::Close()$/;"	f	line:59	class:CDBBase	signature:()
CompareTradePair	dbtradelist.cpp	/^static bool CompareTradePair(const std::pair<int64_t, UniValue>& firstJSONObj, const std::pair<int64_t, UniValue>& secondJSONObj)$/;"	f	line:239	file:	signature:(const std::pair<int64_t, UniValue>& firstJSONObj, const std::pair<int64_t, UniValue>& secondJSONObj)
ConsensusCheckpoint	rules.h	/^struct ConsensusCheckpoint$/;"	s	line:59	namespace:mastercore
ConsensusParams	rules.cpp	/^CConsensusParams& ConsensusParams(const std::string& network)$/;"	f	line:295	namespace:mastercore	signature:(const std::string& network)
ConsensusParams	rules.cpp	/^const CConsensusParams& ConsensusParams()$/;"	f	line:313	namespace:mastercore	signature:()
ConsolePrint	log.cpp	/^int ConsolePrint(const std::string& str)$/;"	f	line:167	signature:(const std::string& str)
ConvertTo256	uint256_extensions.h	/^inline arith_uint256 ConvertTo256(const NumberT& number)$/;"	f	line:36	namespace:mastercore	signature:(const NumberT& number)
ConvertTo64	uint256_extensions.h	/^inline int64_t ConvertTo64(const arith_uint256& number)$/;"	f	line:45	namespace:mastercore	signature:(const arith_uint256& number)
CountRecords	dbfees.cpp	/^int COmniFeeHistory::CountRecords()$/;"	f	line:371	class:COmniFeeHistory	signature:()
CreateFundedTransaction	wallettxbuilder.cpp	/^int CreateFundedTransaction($/;"	f	line:183	signature:( const std::string& senderAddress, const std::string& receiverAddress, const std::string& feeAddress, const std::vector<unsigned char>& payload, uint256& retTxid)
CreatePayload_ActivateFeature	createpayload.cpp	/^std::vector<unsigned char> CreatePayload_ActivateFeature(uint16_t featureId, uint32_t activationBlock, uint32_t minClientVersion)$/;"	f	line:513	signature:(uint16_t featureId, uint32_t activationBlock, uint32_t minClientVersion)
CreatePayload_ChangeIssuer	createpayload.cpp	/^std::vector<unsigned char> CreatePayload_ChangeIssuer(uint32_t propertyId)$/;"	f	line:322	signature:(uint32_t propertyId)
CreatePayload_CloseCrowdsale	createpayload.cpp	/^std::vector<unsigned char> CreatePayload_CloseCrowdsale(uint32_t propertyId)$/;"	f	line:263	signature:(uint32_t propertyId)
CreatePayload_DExAccept	createpayload.cpp	/^std::vector<unsigned char> CreatePayload_DExAccept(uint32_t propertyId, uint64_t amount)$/;"	f	line:104	signature:(uint32_t propertyId, uint64_t amount)
CreatePayload_DExSell	createpayload.cpp	/^std::vector<unsigned char> CreatePayload_DExSell(uint32_t propertyId, uint64_t amountForSale, uint64_t amountDesired, uint8_t timeLimit, uint64_t minFee, uint8_t subAction)$/;"	f	line:80	signature:(uint32_t propertyId, uint64_t amountForSale, uint64_t amountDesired, uint8_t timeLimit, uint64_t minFee, uint8_t subAction)
CreatePayload_DeactivateFeature	createpayload.cpp	/^std::vector<unsigned char> CreatePayload_DeactivateFeature(uint16_t featureId)$/;"	f	line:495	signature:(uint16_t featureId)
CreatePayload_DisableFreezing	createpayload.cpp	/^std::vector<unsigned char> CreatePayload_DisableFreezing(uint32_t propertyId)$/;"	f	line:354	signature:(uint32_t propertyId)
CreatePayload_EnableFreezing	createpayload.cpp	/^std::vector<unsigned char> CreatePayload_EnableFreezing(uint32_t propertyId)$/;"	f	line:338	signature:(uint32_t propertyId)
CreatePayload_FreezeTokens	createpayload.cpp	/^std::vector<unsigned char> CreatePayload_FreezeTokens(uint32_t propertyId, uint64_t amount, const std::string& address)$/;"	f	line:370	signature:(uint32_t propertyId, uint64_t amount, const std::string& address)
CreatePayload_Grant	createpayload.cpp	/^std::vector<unsigned char> CreatePayload_Grant(uint32_t propertyId, uint64_t amount, std::string memo)$/;"	f	line:279	signature:(uint32_t propertyId, uint64_t amount, std::string memo)
CreatePayload_IssuanceFixed	createpayload.cpp	/^std::vector<unsigned char> CreatePayload_IssuanceFixed(uint8_t ecosystem, uint16_t propertyType, uint32_t previousPropertyId, std::string category,$/;"	f	line:147	signature:(uint8_t ecosystem, uint16_t propertyType, uint32_t previousPropertyId, std::string category, std::string subcategory, std::string name, std::string url, std::string data, uint64_t amount)
CreatePayload_IssuanceManaged	createpayload.cpp	/^std::vector<unsigned char> CreatePayload_IssuanceManaged(uint8_t ecosystem, uint16_t propertyType, uint32_t previousPropertyId, std::string category,$/;"	f	line:228	signature:(uint8_t ecosystem, uint16_t propertyType, uint32_t previousPropertyId, std::string category, std::string subcategory, std::string name, std::string url, std::string data)
CreatePayload_IssuanceVariable	createpayload.cpp	/^std::vector<unsigned char> CreatePayload_IssuanceVariable(uint8_t ecosystem, uint16_t propertyType, uint32_t previousPropertyId, std::string category,$/;"	f	line:184	signature:(uint8_t ecosystem, uint16_t propertyType, uint32_t previousPropertyId, std::string category, std::string subcategory, std::string name, std::string url, std::string data, uint32_t propertyIdDesired, uint64_t amountPerUnit, uint64_t deadline, uint8_t earlyBonus, uint8_t issuerPercentage)
CreatePayload_MetaDExCancelEcosystem	createpayload.cpp	/^std::vector<unsigned char> CreatePayload_MetaDExCancelEcosystem(uint8_t ecosystem)$/;"	f	line:478	signature:(uint8_t ecosystem)
CreatePayload_MetaDExCancelPair	createpayload.cpp	/^std::vector<unsigned char> CreatePayload_MetaDExCancelPair(uint32_t propertyIdForSale, uint32_t propertyIdDesired)$/;"	f	line:458	signature:(uint32_t propertyIdForSale, uint32_t propertyIdDesired)
CreatePayload_MetaDExCancelPrice	createpayload.cpp	/^std::vector<unsigned char> CreatePayload_MetaDExCancelPrice(uint32_t propertyIdForSale, uint64_t amountForSale, uint32_t propertyIdDesired, uint64_t amountDesired)$/;"	f	line:434	signature:(uint32_t propertyIdForSale, uint64_t amountForSale, uint32_t propertyIdDesired, uint64_t amountDesired)
CreatePayload_MetaDExTrade	createpayload.cpp	/^std::vector<unsigned char> CreatePayload_MetaDExTrade(uint32_t propertyIdForSale, uint64_t amountForSale, uint32_t propertyIdDesired, uint64_t amountDesired)$/;"	f	line:410	signature:(uint32_t propertyIdForSale, uint64_t amountForSale, uint32_t propertyIdDesired, uint64_t amountDesired)
CreatePayload_OmniCoreAlert	createpayload.cpp	/^std::vector<unsigned char> CreatePayload_OmniCoreAlert(uint16_t alertType, uint32_t expiryValue, const std::string& alertMessage)$/;"	f	line:535	signature:(uint16_t alertType, uint32_t expiryValue, const std::string& alertMessage)
CreatePayload_Revoke	createpayload.cpp	/^std::vector<unsigned char> CreatePayload_Revoke(uint32_t propertyId, uint64_t amount, std::string memo)$/;"	f	line:301	signature:(uint32_t propertyId, uint64_t amount, std::string memo)
CreatePayload_SendAll	createpayload.cpp	/^std::vector<unsigned char> CreatePayload_SendAll(uint8_t ecosystem)$/;"	f	line:65	signature:(uint8_t ecosystem)
CreatePayload_SendToOwners	createpayload.cpp	/^std::vector<unsigned char> CreatePayload_SendToOwners(uint32_t propertyId, uint64_t amount, uint32_t distributionProperty)$/;"	f	line:122	signature:(uint32_t propertyId, uint64_t amount, uint32_t distributionProperty)
CreatePayload_SimpleSend	createpayload.cpp	/^std::vector<unsigned char> CreatePayload_SimpleSend(uint32_t propertyId, uint64_t amount)$/;"	f	line:47	signature:(uint32_t propertyId, uint64_t amount)
CreatePayload_UnfreezeTokens	createpayload.cpp	/^std::vector<unsigned char> CreatePayload_UnfreezeTokens(uint32_t propertyId, uint64_t amount, const std::string& address)$/;"	f	line:390	signature:(uint32_t propertyId, uint64_t amount, const std::string& address)
CrowdMap	sp.h	/^typedef std::map<std::string, CMPCrowd> CrowdMap;$/;"	t	line:71	namespace:mastercore
DB_VERSION	omnicore.h	34;"	d	line:34
DEXMATH_FEATURE_BLOCK	rules.h	/^    int DEXMATH_FEATURE_BLOCK;$/;"	m	line:127	class:mastercore::CConsensusParams	access:public
DEX_ERROR_ACCEPT	omnicore.h	94;"	d	line:94
DEX_ERROR_PAYMENT	omnicore.h	95;"	d	line:95
DEX_ERROR_SELLOFFER	omnicore.h	93;"	d	line:93
DEx_acceptCreate	dex.cpp	/^int DEx_acceptCreate(const std::string& addressBuyer, const std::string& addressSeller, uint32_t propertyId, int64_t amountAccepted, int block, int64_t feePaid, uint64_t* nAmended)$/;"	f	line:269	namespace:mastercore	signature:(const std::string& addressBuyer, const std::string& addressSeller, uint32_t propertyId, int64_t amountAccepted, int block, int64_t feePaid, uint64_t* nAmended)
DEx_acceptDestroy	dex.cpp	/^int DEx_acceptDestroy(const std::string& addressBuyer, const std::string& addressSeller, uint32_t propertyid, bool fForceErase)$/;"	f	line:334	namespace:mastercore	signature:(const std::string& addressBuyer, const std::string& addressSeller, uint32_t propertyid, bool fForceErase)
DEx_acceptExists	dex.cpp	/^bool DEx_acceptExists(const std::string& addressSeller, uint32_t propertyId, const std::string& addressBuyer)$/;"	f	line:67	namespace:mastercore	signature:(const std::string& addressSeller, uint32_t propertyId, const std::string& addressBuyer)
DEx_getAccept	dex.cpp	/^CMPAccept* DEx_getAccept(const std::string& addressSeller, uint32_t propertyId, const std::string& addressBuyer)$/;"	f	line:79	namespace:mastercore	signature:(const std::string& addressSeller, uint32_t propertyId, const std::string& addressBuyer)
DEx_getOffer	dex.cpp	/^CMPOffer* DEx_getOffer(const std::string& addressSeller, uint32_t propertyId)$/;"	f	line:52	namespace:mastercore	signature:(const std::string& addressSeller, uint32_t propertyId)
DEx_offerCreate	dex.cpp	/^int DEx_offerCreate(const std::string& addressSeller, uint32_t propertyId, int64_t amountOffered, int block, int64_t amountDesired, int64_t minAcceptFee, uint8_t paymentWindow, const uint256& txid, uint64_t* nAmended)$/;"	f	line:142	namespace:mastercore	signature:(const std::string& addressSeller, uint32_t propertyId, int64_t amountOffered, int block, int64_t amountDesired, int64_t minAcceptFee, uint8_t paymentWindow, const uint256& txid, uint64_t* nAmended)
DEx_offerDestroy	dex.cpp	/^int DEx_offerDestroy(const std::string& addressSeller, uint32_t propertyId)$/;"	f	line:214	namespace:mastercore	signature:(const std::string& addressSeller, uint32_t propertyId)
DEx_offerExists	dex.cpp	/^bool DEx_offerExists(const std::string& addressSeller, uint32_t propertyId)$/;"	f	line:40	namespace:mastercore	signature:(const std::string& addressSeller, uint32_t propertyId)
DEx_offerUpdate	dex.cpp	/^int DEx_offerUpdate(const std::string& addressSeller, uint32_t propertyId, int64_t amountOffered, int block, int64_t amountDesired, int64_t minAcceptFee, uint8_t paymentWindow, const uint256& txid, uint64_t* nAmended)$/;"	f	line:245	namespace:mastercore	signature:(const std::string& addressSeller, uint32_t propertyId, int64_t amountOffered, int block, int64_t amountDesired, int64_t minAcceptFee, uint8_t paymentWindow, const uint256& txid, uint64_t* nAmended)
DEx_payment	dex.cpp	/^int DEx_payment(const uint256& txid, unsigned int vout, const std::string& addressSeller, const std::string& addressBuyer, int64_t amountPaid, int block, uint64_t* nAmended)$/;"	f	line:442	namespace:mastercore	signature:(const uint256& txid, unsigned int vout, const std::string& addressSeller, const std::string& addressBuyer, int64_t amountPaid, int block, uint64_t* nAmended)
DISPLAY_PRECISION_LEN	mdex.cpp	42;"	d	line:42	file:
DeactivateFeature	rules.cpp	/^bool DeactivateFeature(uint16_t featureId, int transactionBlock)$/;"	f	line:475	namespace:mastercore	signature:(uint16_t featureId, int transactionBlock)
DebugLogInit	log.cpp	/^static void DebugLogInit()$/;"	f	line:114	file:	signature:()
DeleteAlerts	notifications.cpp	/^void DeleteAlerts(const std::string& sender)$/;"	f	line:30	namespace:mastercore	signature:(const std::string& sender)
DeletePendingActivation	activation.cpp	/^static void DeletePendingActivation(uint16_t featureId)$/;"	f	line:36	namespace:mastercore	signature:(uint16_t featureId)
DistributeCache	dbfees.cpp	/^void COmniFeeCache::DistributeCache(const uint32_t &propertyId, int block)$/;"	f	line:201	class:COmniFeeCache	signature:(const uint32_t &propertyId, int block)
DivideAndRoundUp	uint256_extensions.h	/^inline arith_uint256 DivideAndRoundUp(const arith_uint256& numerator, const arith_uint256& denominator)$/;"	f	line:54	namespace:mastercore	signature:(const arith_uint256& numerator, const arith_uint256& denominator)
Entry	dbspinfo.cpp	/^CMPSPInfo::Entry::Entry()$/;"	f	line:25	class:CMPSPInfo::Entry	signature:()
Entry	dbspinfo.h	/^    struct Entry {$/;"	s	line:49	class:CMPSPInfo	access:public
EvalCache	dbfees.cpp	/^void COmniFeeCache::EvalCache(const uint32_t &propertyId, int block)$/;"	f	line:193	class:COmniFeeCache	signature:(const uint32_t &propertyId, int block)
ExodusAddress	omnicore.cpp	/^const CTxDestination ExodusAddress()$/;"	f	line:1986	signature:()
ExodusCrowdsaleAddress	omnicore.cpp	/^const  CTxDestination  ExodusCrowdsaleAddress(int nBlock)$/;"	f	line:2009	signature:(int nBlock)
FEATURE_BETTING	rules.h	/^const uint16_t FEATURE_BETTING = 3;$/;"	m	line:22	namespace:mastercore
FEATURE_CLASS_C	rules.h	/^const uint16_t FEATURE_CLASS_C = 1;$/;"	m	line:18	namespace:mastercore
FEATURE_DEXMATH	rules.h	/^const uint16_t FEATURE_DEXMATH = 5;$/;"	m	line:26	namespace:mastercore
FEATURE_FEES	rules.h	/^const uint16_t FEATURE_FEES = 9;$/;"	m	line:34	namespace:mastercore
FEATURE_FREEZENOTICE	rules.h	/^const uint16_t FEATURE_FREEZENOTICE = 14;$/;"	m	line:38	namespace:mastercore
FEATURE_GRANTEFFECTS	rules.h	/^const uint16_t FEATURE_GRANTEFFECTS = 4;$/;"	m	line:24	namespace:mastercore
FEATURE_METADEX	rules.h	/^const uint16_t FEATURE_METADEX = 2;$/;"	m	line:20	namespace:mastercore
FEATURE_SENDALL	rules.h	/^const uint16_t FEATURE_SENDALL = 6;$/;"	m	line:28	namespace:mastercore
FEATURE_SPCROWDCROSSOVER	rules.h	/^const uint16_t FEATURE_SPCROWDCROSSOVER = 7;$/;"	m	line:30	namespace:mastercore
FEATURE_STOV1	rules.h	/^const uint16_t FEATURE_STOV1 = 10;$/;"	m	line:36	namespace:mastercore
FEATURE_TRADEALLPAIRS	rules.h	/^const uint16_t FEATURE_TRADEALLPAIRS = 8;$/;"	m	line:32	namespace:mastercore
FEES_FEATURE_BLOCK	rules.h	/^    int FEES_FEATURE_BLOCK;$/;"	m	line:133	class:mastercore::CConsensusParams	access:public
FILETYPES	persistence.cpp	/^enum FILETYPES {$/;"	g	line:47	file:
FILETYPE_ACCEPTS	persistence.cpp	/^  FILETYPE_ACCEPTS,$/;"	e	line:50	enum:FILETYPES	file:
FILETYPE_BALANCES	persistence.cpp	/^  FILETYPE_BALANCES = 0,$/;"	e	line:48	enum:FILETYPES	file:
FILETYPE_CROWDSALES	persistence.cpp	/^  FILETYPE_CROWDSALES,$/;"	e	line:52	enum:FILETYPES	file:
FILETYPE_GLOBALS	persistence.cpp	/^  FILETYPE_GLOBALS,$/;"	e	line:51	enum:FILETYPES	file:
FILETYPE_MDEXORDERS	persistence.cpp	/^  FILETYPE_MDEXORDERS,$/;"	e	line:53	enum:FILETYPES	file:
FILETYPE_OFFERS	persistence.cpp	/^  FILETYPE_OFFERS,$/;"	e	line:49	enum:FILETYPES	file:
FREEZENOTICE_FEATURE_BLOCK	rules.h	/^    int FREEZENOTICE_FEATURE_BLOCK;$/;"	m	line:135	class:mastercore::CConsensusParams	access:public
FeatureActivation	activation.h	/^struct FeatureActivation$/;"	s	line:12	namespace:mastercore
FetchInvalidReason	dbtransaction.cpp	/^std::string COmniTransactionDB::FetchInvalidReason(const uint256& txid)$/;"	f	line:90	class:COmniTransactionDB	signature:(const uint256& txid)
FetchTransactionDetails	dbtransaction.cpp	/^std::vector<std::string> COmniTransactionDB::FetchTransactionDetails(const uint256& txid)$/;"	f	line:35	class:COmniTransactionDB	signature:(const uint256& txid)
FetchTransactionPosition	dbtransaction.cpp	/^uint32_t COmniTransactionDB::FetchTransactionPosition(const uint256& txid)$/;"	f	line:75	class:COmniTransactionDB	signature:(const uint256& txid)
FetchWalletOmniTransactions	walletfetchtxs.cpp	/^std::map<std::string, uint256> FetchWalletOmniTransactions(unsigned int count, int startBlock, int endBlock)$/;"	f	line:58	namespace:mastercore	signature:(unsigned int count, int startBlock, int endBlock)
FillTxInputCache	omnicore.cpp	/^static bool FillTxInputCache(const CTransaction& tx)$/;"	f	line:813	file:	signature:(const CTransaction& tx)
FormatByType	omnicore.cpp	/^std::string FormatByType(int64_t amount, uint16_t propertyType)$/;"	f	line:252	signature:(int64_t amount, uint16_t propertyType)
FormatDivisibleMP	omnicore.cpp	/^std::string FormatDivisibleMP(int64_t n, bool fSign)$/;"	f	line:211	signature:(int64_t n, bool fSign)
FormatDivisibleShortMP	omnicore.cpp	/^std::string FormatDivisibleShortMP(int64_t n)$/;"	f	line:194	signature:(int64_t n)
FormatIndivisibleMP	omnicore.cpp	/^std::string FormatIndivisibleMP(int64_t n)$/;"	f	line:229	signature:(int64_t n)
FormatMP	omnicore.cpp	/^std::string FormatMP(uint32_t property, int64_t n, bool fSign)$/;"	f	line:243	signature:(uint32_t property, int64_t n, bool fSign)
FormatShortMP	omnicore.cpp	/^std::string FormatShortMP(uint32_t property, int64_t n)$/;"	f	line:234	signature:(uint32_t property, int64_t n)
GENESIS_BLOCK	rules.h	/^    int GENESIS_BLOCK;$/;"	m	line:82	class:mastercore::CConsensusParams	access:public
GRANTEFFECTS_FEATURE_BLOCK	rules.h	/^    int GRANTEFFECTS_FEATURE_BLOCK;$/;"	m	line:125	class:mastercore::CConsensusParams	access:public
GenerateConsensusString	consensushash.cpp	/^std::string GenerateConsensusString(const CMPAccept& acceptObj, const std::string& address)$/;"	f	line:75	namespace:mastercore	signature:(const CMPAccept& acceptObj, const std::string& address)
GenerateConsensusString	consensushash.cpp	/^std::string GenerateConsensusString(const CMPCrowd& crowdObj)$/;"	f	line:91	namespace:mastercore	signature:(const CMPCrowd& crowdObj)
GenerateConsensusString	consensushash.cpp	/^std::string GenerateConsensusString(const CMPMetaDEx& tradeObj)$/;"	f	line:83	namespace:mastercore	signature:(const CMPMetaDEx& tradeObj)
GenerateConsensusString	consensushash.cpp	/^std::string GenerateConsensusString(const CMPOffer& offerObj, const std::string& address)$/;"	f	line:67	namespace:mastercore	signature:(const CMPOffer& offerObj, const std::string& address)
GenerateConsensusString	consensushash.cpp	/^std::string GenerateConsensusString(const CMPTally& tallyObj, const std::string& address, const uint32_t propertyId)$/;"	f	line:52	namespace:mastercore	signature:(const CMPTally& tallyObj, const std::string& address, const uint32_t propertyId)
GenerateConsensusString	consensushash.cpp	/^std::string GenerateConsensusString(const uint32_t propertyId, const std::string& address)$/;"	f	line:99	namespace:mastercore	signature:(const uint32_t propertyId, const std::string& address)
GetAddressLabel	walletutils.cpp	/^std::string GetAddressLabel(const std::string& address)$/;"	f	line:129	namespace:mastercore	signature:(const std::string& address)
GetAvailableTokenBalance	omnicore.cpp	/^int64_t GetAvailableTokenBalance(const std::string& address, uint32_t propertyId)$/;"	f	line:291	signature:(const std::string& address, uint32_t propertyId)
GetBalancesHash	consensushash.cpp	/^uint256 GetBalancesHash(const uint32_t hashPropertyId)$/;"	f	line:317	namespace:mastercore	signature:(const uint32_t hashPropertyId)
GetBlockIndex	utilsbitcoin.cpp	/^CBlockIndex* GetBlockIndex(const uint256& hash)$/;"	f	line:41	namespace:mastercore	signature:(const uint256& hash)
GetBlockList	seedblocks.cpp	/^static std::set<int> GetBlockList()$/;"	f	line:19	file:	signature:()
GetCacheHistory	dbfees.cpp	/^std::set<feeCacheItem> COmniFeeCache::GetCacheHistory(const uint32_t &propertyId)$/;"	f	line:309	class:COmniFeeCache	signature:(const uint32_t &propertyId)
GetCachedAmount	dbfees.cpp	/^int64_t COmniFeeCache::GetCachedAmount(const uint32_t &propertyId)$/;"	f	line:66	class:COmniFeeCache	signature:(const uint32_t &propertyId)
GetCheckpoints	rules.cpp	/^std::vector<ConsensusCheckpoint> CConsensusParams::GetCheckpoints() const$/;"	f	line:87	class:mastercore::CConsensusParams	signature:() const
GetCheckpoints	rules.cpp	/^std::vector<ConsensusCheckpoint> CMainConsensusParams::GetCheckpoints() const$/;"	f	line:95	class:mastercore::CMainConsensusParams	signature:() const
GetCompletedActivations	activation.cpp	/^std::vector<FeatureActivation> GetCompletedActivations()$/;"	f	line:119	namespace:mastercore	signature:()
GetConsensusHash	consensushash.cpp	/^uint256 GetConsensusHash()$/;"	f	line:153	namespace:mastercore	signature:()
GetDistributionData	dbfees.cpp	/^bool COmniFeeHistory::GetDistributionData(int id, uint32_t *propertyId, int *block, int64_t *total)$/;"	f	line:436	class:COmniFeeHistory	signature:(int id, uint32_t *propertyId, int *block, int64_t *total)
GetDistributionThreshold	dbfees.cpp	/^int64_t COmniFeeCache::GetDistributionThreshold(const uint32_t &propertyId)$/;"	f	line:49	class:COmniFeeCache	signature:(const uint32_t &propertyId)
GetDistributionsForProperty	dbfees.cpp	/^std::set<int> COmniFeeHistory::GetDistributionsForProperty(const uint32_t &propertyId)$/;"	f	line:409	class:COmniFeeHistory	signature:(const uint32_t &propertyId)
GetDustThreshold	script.cpp	/^int64_t GetDustThreshold(const CScript& scriptPubKey)$/;"	f	line:25	signature:(const CScript& scriptPubKey)
GetEconomicThreshold	walletutils.cpp	/^static int64_t GetEconomicThreshold(const CTxOut& txOut)$/;"	f	line:189	namespace:mastercore	signature:(const CTxOut& txOut)
GetEncodingClass	omnicore.cpp	/^int mastercore::GetEncodingClass(const CTransaction& tx, int nBlock)$/;"	f	line:697	class:mastercore	signature:(const CTransaction& tx, int nBlock)
GetEstimatedFeePerKb	walletutils.cpp	/^static int64_t GetEstimatedFeePerKb()$/;"	f	line:169	namespace:mastercore	signature:()
GetFeatureName	rules.cpp	/^std::string GetFeatureName(uint16_t featureId)$/;"	f	line:536	namespace:mastercore	signature:(uint16_t featureId)
GetFeeDistribution	dbfees.cpp	/^std::set<feeHistoryItem> COmniFeeHistory::GetFeeDistribution(int id)$/;"	f	line:461	class:COmniFeeHistory	signature:(int id)
GetFirstSender	test/sender_firstin_tests.cpp	/^static bool GetFirstSender(const std::vector<CTxOut>& txInputs, std::string& strSender)$/;"	f	line:78	file:	signature:(const std::vector<CTxOut>& txInputs, std::string& strSender)
GetFrozenTokenBalance	omnicore.cpp	/^int64_t GetFrozenTokenBalance(const std::string& address, uint32_t propertyId)$/;"	f	line:313	signature:(const std::string& address, uint32_t propertyId)
GetHeight	utilsbitcoin.cpp	/^int GetHeight()$/;"	f	line:20	namespace:mastercore	signature:()
GetLatestBlockTime	utilsbitcoin.cpp	/^uint32_t GetLatestBlockTime()$/;"	f	line:29	namespace:mastercore	signature:()
GetLogPath	log.cpp	/^static boost::filesystem::path GetLogPath()$/;"	f	line:96	file:	signature:()
GetMetaDExHash	consensushash.cpp	/^uint256 GetMetaDExHash(const uint32_t propertyId)$/;"	f	line:283	namespace:mastercore	signature:(const uint32_t propertyId)
GetMissedIssuerBonus	sp.cpp	/^int64_t mastercore::GetMissedIssuerBonus(const CMPSPInfo::Entry& sp, const CMPCrowd& crowdsale)$/;"	f	line:161	class:mastercore	signature:(const CMPSPInfo::Entry& sp, const CMPCrowd& crowdsale)
GetNextPropertyId	omnicore.cpp	/^uint32_t mastercore::GetNextPropertyId(bool maineco)$/;"	f	line:590	class:mastercore	signature:(bool maineco)
GetOmMarker	omnicore.cpp	/^const std::vector<unsigned char> GetOmMarker()$/;"	f	line:2026	signature:()
GetOmniCoreAlertMessages	notifications.cpp	/^std::vector<std::string> GetOmniCoreAlertMessages()$/;"	f	line:136	namespace:mastercore	signature:()
GetOmniCoreAlerts	notifications.cpp	/^std::vector<AlertData> GetOmniCoreAlerts()$/;"	f	line:128	namespace:mastercore	signature:()
GetOutputType	script.cpp	/^bool GetOutputType(const CScript& scriptPubKey, txnouttype& whichTypeRet)$/;"	f	line:41	signature:(const CScript& scriptPubKey, txnouttype& whichTypeRet)
GetPendingActivations	activation.cpp	/^std::vector<FeatureActivation> GetPendingActivations()$/;"	f	line:111	namespace:mastercore	signature:()
GetReservedTokenBalance	omnicore.cpp	/^int64_t GetReservedTokenBalance(const std::string& address, uint32_t propertyId)$/;"	f	line:303	signature:(const std::string& address, uint32_t propertyId)
GetRestrictions	rules.cpp	/^std::vector<TransactionRestriction> CConsensusParams::GetRestrictions() const$/;"	f	line:35	class:mastercore::CConsensusParams	signature:() const
GetScriptPushes	script.cpp	/^bool GetScriptPushes(const CScript& script, std::vector<std::string>& vstrRet, bool fSkipFirst)$/;"	f	line:61	signature:(const CScript& script, std::vector<std::string>& vstrRet, bool fSkipFirst)
GetSeedBlocks	dbtxlist.cpp	/^std::set<int> CMPTxList::GetSeedBlocks(int startHeight, int endHeight)$/;"	f	line:447	class:CMPTxList	signature:(int startHeight, int endHeight)
GetSenderByContribution	test/sender_bycontribution_tests.cpp	/^static bool GetSenderByContribution(const std::vector<CTxOut>& vouts, std::string& strSender)$/;"	f	line:369	file:	signature:(const std::vector<CTxOut>& vouts, std::string& strSender)
GetTimestamp	log.cpp	/^static std::string GetTimestamp()$/;"	f	line:134	file:	signature:()
GetTokenBalance	omnicore.cpp	/^int64_t GetTokenBalance(const std::string& address, uint32_t propertyId, TallyType ttype)$/;"	f	line:271	signature:(const std::string& address, uint32_t propertyId, TallyType ttype)
GetTransactionByteOffset	walletfetchtxs.cpp	/^static unsigned int GetTransactionByteOffset(const uint256& txid)$/;"	f	line:41	namespace:mastercore	signature:(const uint256& txid)
HandleDExPayments	omnicore.cpp	/^static bool HandleDExPayments(const CTransaction& tx, int nBlock, const std::string& strSender)$/;"	f	line:1301	file:	signature:(const CTransaction& tx, int nBlock, const std::string& strSender)
HandleExodusPurchase	omnicore.cpp	/^static bool HandleExodusPurchase(const CTransaction& tx, int nBlock, const std::string& strSender, unsigned int nTime)$/;"	f	line:1331	file:	signature:(const CTransaction& tx, int nBlock, const std::string& strSender, unsigned int nTime)
HashToAddress	parsing.cpp	/^std::string HashToAddress(unsigned char version, const uint160& hash)$/;"	f	line:85	signature:(unsigned char version, const uint160& hash)
INVALID	tx.h	/^        INVALID = 0,$/;"	e	line:167	enum:CMPTransaction::ActionTypes
InitDebugLogLevels	log.cpp	/^void InitDebugLogLevels()$/;"	f	line:182	signature:()
InputsToView	createtx.cpp	/^void InputsToView(const std::vector<PrevTxsEntry>& prevTxs, CCoinsViewCache& view)$/;"	f	line:180	signature:(const std::vector<PrevTxsEntry>& prevTxs, CCoinsViewCache& view)
IsAllowedInputType	rules.cpp	/^bool IsAllowedInputType(int whichType, int nBlock)$/;"	f	line:343	namespace:mastercore	signature:(int whichType, int nBlock)
IsAllowedOutputType	rules.cpp	/^bool IsAllowedOutputType(int whichType, int nBlock)$/;"	f	line:362	namespace:mastercore	signature:(int whichType, int nBlock)
IsFeatureActivated	rules.cpp	/^bool IsFeatureActivated(uint16_t featureId, int transactionBlock)$/;"	f	line:558	namespace:mastercore	signature:(uint16_t featureId, int transactionBlock)
IsMyAddress	walletutils.cpp	/^int IsMyAddress(const std::string& address)$/;"	f	line:149	namespace:mastercore	signature:(const std::string& address)
IsPersistenceEnabled	persistence.cpp	/^bool IsPersistenceEnabled(int blockHeight) {$/;"	f	line:512	signature:(int blockHeight)
IsPropertyIdValid	sp.cpp	/^bool mastercore::IsPropertyIdValid(uint32_t propertyId)$/;"	f	line:104	class:mastercore	signature:(uint32_t propertyId)
IsTransactionTypeAllowed	rules.cpp	/^bool IsTransactionTypeAllowed(int txBlock, uint32_t txProperty, uint16_t txType, uint16_t version)$/;"	f	line:613	namespace:mastercore	signature:(int txBlock, uint32_t txProperty, uint16_t txType, uint16_t version)
LAST_EXODUS_BLOCK	rules.h	/^    int LAST_EXODUS_BLOCK;$/;"	m	line:84	class:mastercore::CConsensusParams	access:public
LOG_BUFFERSIZE	log.cpp	/^static const long LOG_BUFFERSIZE  =  8000000; \/\/  8 MB$/;"	v	line:23	file:
LOG_FILENAME	log.cpp	/^const std::string LOG_FILENAME    = "omnicore.log";$/;"	v	line:20
LOG_SHRINKSIZE	log.cpp	/^static const long LOG_SHRINKSIZE  = 50000000; \/\/ 50 MB$/;"	v	line:24	file:
LoadActivations	dbtxlist.cpp	/^void CMPTxList::LoadActivations(int blockHeight)$/;"	f	line:544	class:CMPTxList	signature:(int blockHeight)
LoadAlerts	dbtxlist.cpp	/^void CMPTxList::LoadAlerts(int blockHeight)$/;"	f	line:471	class:CMPTxList	signature:(int blockHeight)
LoadFreezeState	dbtxlist.cpp	/^bool CMPTxList::LoadFreezeState(int blockHeight)$/;"	f	line:619	class:CMPTxList	signature:(int blockHeight)
LoadMostRelevantInMemoryState	persistence.cpp	/^int LoadMostRelevantInMemoryState()$/;"	f	line:660	signature:()
LockUnrelatedCoins	wallettxbuilder.cpp	/^static void LockUnrelatedCoins($/;"	f	line:131	file:	signature:( CWallet* pwallet, const std::set<CTxDestination>& destinations, std::vector<COutPoint>& retLockedCoins)
LogFilePrint	log.cpp	/^int LogFilePrint(const std::string& str)$/;"	f	line:151	signature:(const std::string& str)
MAKE_OMNI_CORE_ERROR_AND_LOG_FUNC	log.h	59;"	d	line:59
MAKE_OMNI_CORE_ERROR_AND_LOG_FUNC	log.h	83;"	d	line:83
MAX_ACTIVATION_BLOCKS	rules.h	/^    int MAX_ACTIVATION_BLOCKS;$/;"	m	line:89	class:mastercore::CConsensusParams	access:public
MAX_BLOCK	test/rules_txs_tests.cpp	/^const int MAX_BLOCK = std::numeric_limits<int>::max();$/;"	v	line:15
MAX_INT_8_BYTES	omnicore.h	38;"	d	line:38
MAX_PACKETS	parsing.h	20;"	d	line:20
MAX_SEED_BLOCK	seedblocks.cpp	/^const int MAX_SEED_BLOCK = 490000;$/;"	v	line:17
MAX_SHA256_OBFUSCATION_TIMES	parsing.h	21;"	d	line:21
MAX_STATE_HISTORY	omnicore.h	/^int const MAX_STATE_HISTORY = 50;$/;"	v	line:28
MAX_VERSION	test/rules_txs_tests.cpp	/^const int MAX_VERSION = std::numeric_limits<uint16_t>::max();$/;"	v	line:16
METADEX_ERROR	omnicore.h	104;"	d	line:104
METADEX_RESERVE	tally.h	/^    METADEX_RESERVE = 4,$/;"	e	line:13	enum:TallyType
MIN_ACTIVATION_BLOCKS	rules.h	/^    int MIN_ACTIVATION_BLOCKS;$/;"	m	line:87	class:mastercore::CConsensusParams	access:public
MONEYMAN_REGTEST_BLOCK	rules.h	/^const int MONEYMAN_REGTEST_BLOCK = 101;$/;"	m	line:13	namespace:mastercore
MONEYMAN_TESTNET_BLOCK	rules.h	/^const int MONEYMAN_TESTNET_BLOCK = 270775;$/;"	m	line:15	namespace:mastercore
MPPersistencePath	omnicore.cpp	/^boost::filesystem::path MPPersistencePath;$/;"	v	line:122
MPRPCErrorCode	errors.h	/^enum MPRPCErrorCode$/;"	g	line:8
MP_BLOCK_NOT_IN_CHAIN	errors.h	/^    MP_BLOCK_NOT_IN_CHAIN =         -3333,  \/\/ Transaction not part of the active chain.   (pBlockIndex is NULL)$/;"	e	line:31	enum:MPRPCErrorCode
MP_CROWDSALE_WITHOUT_PROPERTY	errors.h	/^    MP_CROWDSALE_WITHOUT_PROPERTY = -3334,  \/\/ Potential database corruption: "Crowdsale Purchase" without valid property identifier.$/;"	e	line:32	enum:MPRPCErrorCode
MP_ENCODING_ERROR	errors.h	/^    MP_ENCODING_ERROR =             -250,$/;"	e	line:17	enum:MPRPCErrorCode
MP_ERR_COMMIT_TX	errors.h	/^    MP_ERR_COMMIT_TX =              -213,$/;"	e	line:26	enum:MPRPCErrorCode
MP_ERR_CREATE_TX	errors.h	/^    MP_ERR_CREATE_TX =              -211,$/;"	e	line:25	enum:MPRPCErrorCode
MP_ERR_INPUTSELECT_FAIL	errors.h	/^    MP_ERR_INPUTSELECT_FAIL =       -206,$/;"	e	line:24	enum:MPRPCErrorCode
MP_ERR_WALLET_ACCESS	errors.h	/^    MP_ERR_WALLET_ACCESS =          -205,$/;"	e	line:23	enum:MPRPCErrorCode
MP_INPUTS_INVALID	errors.h	/^    MP_INPUTS_INVALID =             -212,$/;"	e	line:16	enum:MPRPCErrorCode
MP_INPUT_NOT_IN_RANGE	errors.h	/^    MP_INPUT_NOT_IN_RANGE =         -11,    \/\/ input value larger than supported$/;"	e	line:13	enum:MPRPCErrorCode
MP_INSUF_FUNDS_APENDI	errors.h	/^    MP_INSUF_FUNDS_APENDI =         -2,     \/\/ balance after pending$/;"	e	line:12	enum:MPRPCErrorCode
MP_INSUF_FUNDS_BPENDI	errors.h	/^    MP_INSUF_FUNDS_BPENDI =         -1,     \/\/ balance before pending$/;"	e	line:11	enum:MPRPCErrorCode
MP_INVALID_TX_IN_DB_FOUND	errors.h	/^    MP_INVALID_TX_IN_DB_FOUND     = -3335,  \/\/ Potential database corruption: Invalid transaction found.$/;"	e	line:33	enum:MPRPCErrorCode
MP_REDEMP_BAD_KEYID	errors.h	/^    MP_REDEMP_BAD_KEYID =           -220,$/;"	e	line:19	enum:MPRPCErrorCode
MP_REDEMP_BAD_VALIDATION	errors.h	/^    MP_REDEMP_BAD_VALIDATION =      -223,$/;"	e	line:22	enum:MPRPCErrorCode
MP_REDEMP_FETCH_ERR_PUBKEY	errors.h	/^    MP_REDEMP_FETCH_ERR_PUBKEY =    -221,$/;"	e	line:20	enum:MPRPCErrorCode
MP_REDEMP_ILLEGAL	errors.h	/^    MP_REDEMP_ILLEGAL =             -233,$/;"	e	line:18	enum:MPRPCErrorCode
MP_REDEMP_INVALID_PUBKEY	errors.h	/^    MP_REDEMP_INVALID_PUBKEY =      -222,$/;"	e	line:21	enum:MPRPCErrorCode
MP_TX_IS_NOT_MASTER_PROTOCOL	errors.h	/^    MP_TX_IS_NOT_MASTER_PROTOCOL  = -3336,  \/\/ Not a Master Protocol transaction.$/;"	e	line:34	enum:MPRPCErrorCode
MP_TX_NOT_FOUND	errors.h	/^    MP_TX_NOT_FOUND =               -3331,  \/\/ No information available about transaction. (GetTransaction failed)$/;"	e	line:29	enum:MPRPCErrorCode
MP_TX_PKT_V0	omnicore.h	44;"	d	line:44
MP_TX_PKT_V1	omnicore.h	45;"	d	line:45
MP_TX_UNCONFIRMED	errors.h	/^    MP_TX_UNCONFIRMED =             -3332,  \/\/ Unconfirmed transactions are not supported. (blockHash is 0)$/;"	e	line:30	enum:MPRPCErrorCode
MSC_ALERT_BLOCK	rules.h	/^    int MSC_ALERT_BLOCK;$/;"	m	line:104	class:mastercore::CConsensusParams	access:public
MSC_BET_BLOCK	rules.h	/^    int MSC_BET_BLOCK;$/;"	m	line:120	class:mastercore::CConsensusParams	access:public
MSC_DEX_BLOCK	rules.h	/^    int MSC_DEX_BLOCK;$/;"	m	line:108	class:mastercore::CConsensusParams	access:public
MSC_MANUALSP_BLOCK	rules.h	/^    int MSC_MANUALSP_BLOCK;$/;"	m	line:112	class:mastercore::CConsensusParams	access:public
MSC_METADEX_BLOCK	rules.h	/^    int MSC_METADEX_BLOCK;$/;"	m	line:116	class:mastercore::CConsensusParams	access:public
MSC_PROPERTY_TYPE_DIVISIBLE	omnicore.h	84;"	d	line:84
MSC_PROPERTY_TYPE_DIVISIBLE_APPENDING	omnicore.h	88;"	d	line:88
MSC_PROPERTY_TYPE_DIVISIBLE_REPLACING	omnicore.h	86;"	d	line:86
MSC_PROPERTY_TYPE_INDIVISIBLE	omnicore.h	83;"	d	line:83
MSC_PROPERTY_TYPE_INDIVISIBLE_APPENDING	omnicore.h	87;"	d	line:87
MSC_PROPERTY_TYPE_INDIVISIBLE_REPLACING	omnicore.h	85;"	d	line:85
MSC_SEND_ALL_BLOCK	rules.h	/^    int MSC_SEND_ALL_BLOCK;$/;"	m	line:118	class:mastercore::CConsensusParams	access:public
MSC_SEND_BLOCK	rules.h	/^    int MSC_SEND_BLOCK;$/;"	m	line:106	class:mastercore::CConsensusParams	access:public
MSC_SP_BLOCK	rules.h	/^    int MSC_SP_BLOCK;$/;"	m	line:110	class:mastercore::CConsensusParams	access:public
MSC_STOV1_BLOCK	rules.h	/^    int MSC_STOV1_BLOCK;$/;"	m	line:122	class:mastercore::CConsensusParams	access:public
MSC_STO_BLOCK	rules.h	/^    int MSC_STO_BLOCK;$/;"	m	line:114	class:mastercore::CConsensusParams	access:public
MSC_TYPE_ACCEPT_OFFER_BTC	omnicore.h	/^  MSC_TYPE_ACCEPT_OFFER_BTC           = 22,$/;"	e	line:59	enum:TransactionType
MSC_TYPE_AUTOMATIC_DISPENSARY	omnicore.h	/^  MSC_TYPE_AUTOMATIC_DISPENSARY       = 15,$/;"	e	line:57	enum:TransactionType
MSC_TYPE_CHANGE_ISSUER_ADDRESS	omnicore.h	/^  MSC_TYPE_CHANGE_ISSUER_ADDRESS      = 70,$/;"	e	line:73	enum:TransactionType
MSC_TYPE_CLOSE_CROWDSALE	omnicore.h	/^  MSC_TYPE_CLOSE_CROWDSALE            = 53,$/;"	e	line:69	enum:TransactionType
MSC_TYPE_CREATE_PROPERTY_FIXED	omnicore.h	/^  MSC_TYPE_CREATE_PROPERTY_FIXED      = 50,$/;"	e	line:66	enum:TransactionType
MSC_TYPE_CREATE_PROPERTY_MANUAL	omnicore.h	/^  MSC_TYPE_CREATE_PROPERTY_MANUAL     = 54,$/;"	e	line:70	enum:TransactionType
MSC_TYPE_CREATE_PROPERTY_VARIABLE	omnicore.h	/^  MSC_TYPE_CREATE_PROPERTY_VARIABLE   = 51,$/;"	e	line:67	enum:TransactionType
MSC_TYPE_DISABLE_FREEZING	omnicore.h	/^  MSC_TYPE_DISABLE_FREEZING           = 72,$/;"	e	line:75	enum:TransactionType
MSC_TYPE_ENABLE_FREEZING	omnicore.h	/^  MSC_TYPE_ENABLE_FREEZING            = 71,$/;"	e	line:74	enum:TransactionType
MSC_TYPE_FREEZE_PROPERTY_TOKENS	omnicore.h	/^  MSC_TYPE_FREEZE_PROPERTY_TOKENS     = 185,$/;"	e	line:76	enum:TransactionType
MSC_TYPE_GRANT_PROPERTY_TOKENS	omnicore.h	/^  MSC_TYPE_GRANT_PROPERTY_TOKENS      = 55,$/;"	e	line:71	enum:TransactionType
MSC_TYPE_METADEX_CANCEL_ECOSYSTEM	omnicore.h	/^  MSC_TYPE_METADEX_CANCEL_ECOSYSTEM   = 28,$/;"	e	line:63	enum:TransactionType
MSC_TYPE_METADEX_CANCEL_PAIR	omnicore.h	/^  MSC_TYPE_METADEX_CANCEL_PAIR        = 27,$/;"	e	line:62	enum:TransactionType
MSC_TYPE_METADEX_CANCEL_PRICE	omnicore.h	/^  MSC_TYPE_METADEX_CANCEL_PRICE       = 26,$/;"	e	line:61	enum:TransactionType
MSC_TYPE_METADEX_TRADE	omnicore.h	/^  MSC_TYPE_METADEX_TRADE              = 25,$/;"	e	line:60	enum:TransactionType
MSC_TYPE_NOTIFICATION	omnicore.h	/^  MSC_TYPE_NOTIFICATION               = 31,$/;"	e	line:64	enum:TransactionType
MSC_TYPE_OFFER_ACCEPT_A_BET	omnicore.h	/^  MSC_TYPE_OFFER_ACCEPT_A_BET         = 40,$/;"	e	line:65	enum:TransactionType
MSC_TYPE_PROMOTE_PROPERTY	omnicore.h	/^  MSC_TYPE_PROMOTE_PROPERTY           = 52,$/;"	e	line:68	enum:TransactionType
MSC_TYPE_RATELIMITED_MARK	omnicore.h	/^  MSC_TYPE_RATELIMITED_MARK           = 12,$/;"	e	line:56	enum:TransactionType
MSC_TYPE_RESTRICTED_SEND	omnicore.h	/^  MSC_TYPE_RESTRICTED_SEND            =  2,$/;"	e	line:51	enum:TransactionType
MSC_TYPE_REVOKE_PROPERTY_TOKENS	omnicore.h	/^  MSC_TYPE_REVOKE_PROPERTY_TOKENS     = 56,$/;"	e	line:72	enum:TransactionType
MSC_TYPE_SAVINGS_COMPROMISED	omnicore.h	/^  MSC_TYPE_SAVINGS_COMPROMISED        = 11,$/;"	e	line:55	enum:TransactionType
MSC_TYPE_SAVINGS_MARK	omnicore.h	/^  MSC_TYPE_SAVINGS_MARK               = 10,$/;"	e	line:54	enum:TransactionType
MSC_TYPE_SEND_ALL	omnicore.h	/^  MSC_TYPE_SEND_ALL                   =  4,$/;"	e	line:53	enum:TransactionType
MSC_TYPE_SEND_TO_OWNERS	omnicore.h	/^  MSC_TYPE_SEND_TO_OWNERS             =  3,$/;"	e	line:52	enum:TransactionType
MSC_TYPE_SIMPLE_SEND	omnicore.h	/^  MSC_TYPE_SIMPLE_SEND                =  0,$/;"	e	line:50	enum:TransactionType
MSC_TYPE_TRADE_OFFER	omnicore.h	/^  MSC_TYPE_TRADE_OFFER                = 20,$/;"	e	line:58	enum:TransactionType
MSC_TYPE_UNFREEZE_PROPERTY_TOKENS	omnicore.h	/^  MSC_TYPE_UNFREEZE_PROPERTY_TOKENS   = 186,$/;"	e	line:77	enum:TransactionType
MULTISIG_BLOCK	rules.h	/^    int MULTISIG_BLOCK;$/;"	m	line:99	class:mastercore::CConsensusParams	access:public
MainNet	utilsbitcoin.cpp	/^bool MainNet()$/;"	f	line:53	namespace:mastercore	signature:()
MatchReturnType	mdex.cpp	/^enum MatchReturnType$/;"	g	line:66	file:
MetaDEx_ADD	mdex.cpp	/^int mastercore::MetaDEx_ADD(const std::string& sender_addr, uint32_t prop, int64_t amount, int block, uint32_t property_desired, int64_t amount_desired, const uint256& txid, unsigned int idx)$/;"	f	line:496	class:mastercore	signature:(const std::string& sender_addr, uint32_t prop, int64_t amount, int block, uint32_t property_desired, int64_t amount_desired, const uint256& txid, unsigned int idx)
MetaDEx_CANCEL_ALL_FOR_PAIR	mdex.cpp	/^int mastercore::MetaDEx_CANCEL_ALL_FOR_PAIR(const uint256& txid, unsigned int block, const std::string& sender_addr, uint32_t prop, uint32_t property_desired)$/;"	f	line:585	class:mastercore	signature:(const uint256& txid, unsigned int block, const std::string& sender_addr, uint32_t prop, uint32_t property_desired)
MetaDEx_CANCEL_AT_PRICE	mdex.cpp	/^int mastercore::MetaDEx_CANCEL_AT_PRICE(const uint256& txid, unsigned int block, const std::string& sender_addr, uint32_t prop, int64_t amount, uint32_t property_desired, int64_t amount_desired)$/;"	f	line:531	class:mastercore	signature:(const uint256& txid, unsigned int block, const std::string& sender_addr, uint32_t prop, int64_t amount, uint32_t property_desired, int64_t amount_desired)
MetaDEx_CANCEL_EVERYTHING	mdex.cpp	/^int mastercore::MetaDEx_CANCEL_EVERYTHING(const uint256& txid, unsigned int block, const std::string& sender_addr, unsigned char ecosystem)$/;"	f	line:637	class:mastercore	signature:(const uint256& txid, unsigned int block, const std::string& sender_addr, unsigned char ecosystem)
MetaDEx_INSERT	mdex.cpp	/^bool mastercore::MetaDEx_INSERT(const CMPMetaDEx& objMetaDEx)$/;"	f	line:460	class:mastercore	signature:(const CMPMetaDEx& objMetaDEx)
MetaDEx_RetrieveTrade	mdex.cpp	/^const CMPMetaDEx* mastercore::MetaDEx_RetrieveTrade(const uint256& txid)$/;"	f	line:841	class:mastercore	signature:(const uint256& txid)
MetaDEx_SHUTDOWN	mdex.cpp	/^int mastercore::MetaDEx_SHUTDOWN()$/;"	f	line:721	class:mastercore	signature:()
MetaDEx_SHUTDOWN_ALLPAIR	mdex.cpp	/^int mastercore::MetaDEx_SHUTDOWN_ALLPAIR()$/;"	f	line:696	class:mastercore	signature:()
MetaDEx_compare	mdex.h	/^struct MetaDEx_compare$/;"	s	line:107	namespace:mastercore
MetaDEx_compare::operator ()	mdex.cpp	/^bool MetaDEx_compare::operator()(const CMPMetaDEx &lhs, const CMPMetaDEx &rhs) const$/;"	f	line:454	class:MetaDEx_compare	signature:(const CMPMetaDEx &lhs, const CMPMetaDEx &rhs) const
MetaDEx_debug_print	mdex.cpp	/^void mastercore::MetaDEx_debug_print(bool bShowPriceLevel, bool bDisplay)$/;"	f	line:811	class:mastercore	signature:(bool bShowPriceLevel, bool bDisplay)
MetaDEx_getStatus	mdex.cpp	/^int mastercore::MetaDEx_getStatus(const uint256& txid, uint32_t propertyIdForSale, int64_t amountForSale, int64_t totalSold)$/;"	f	line:780	class:mastercore	signature:(const uint256& txid, uint32_t propertyIdForSale, int64_t amountForSale, int64_t totalSold)
MetaDEx_getStatusText	mdex.cpp	/^std::string mastercore::MetaDEx_getStatusText(int tradeStatus)$/;"	f	line:763	class:mastercore	signature:(int tradeStatus)
MetaDEx_isOpen	mdex.cpp	/^bool mastercore::MetaDEx_isOpen(const uint256& txid, uint32_t propertyIdForSale)$/;"	f	line:743	class:mastercore	signature:(const uint256& txid, uint32_t propertyIdForSale)
MetaDexObjectToJSON	rpc.cpp	/^void MetaDexObjectToJSON(const CMPMetaDEx& obj, UniValue& metadex_obj)$/;"	f	line:98	signature:(const CMPMetaDEx& obj, UniValue& metadex_obj)
MetaDexObjectsToJSON	rpc.cpp	/^void MetaDexObjectsToJSON(std::vector<CMPMetaDEx>& vMetaDexObjs, UniValue& response)$/;"	f	line:119	signature:(std::vector<CMPMetaDEx>& vMetaDexObjs, UniValue& response)
Modulo256	uint256_extensions.h	/^inline arith_uint256 Modulo256(const arith_uint256& a, const arith_uint256& n)$/;"	f	line:27	namespace:mastercore	signature:(const arith_uint256& a, const arith_uint256& n)
MutableConsensusParams	rules.cpp	/^CConsensusParams& MutableConsensusParams()$/;"	f	line:323	namespace:mastercore	signature:()
NEW	tx.h	/^        NEW = 1,$/;"	e	line:170	enum:CMPTransaction::ActionTypes
NOTHING	mdex.cpp	/^    NOTHING = 0,$/;"	e	line:68	enum:MatchReturnType	file:
NO_MARKER	parsing.h	12;"	d	line:12
NULLDATA_BLOCK	rules.h	/^    int NULLDATA_BLOCK;$/;"	m	line:101	class:mastercore::CConsensusParams	access:public
NUM_FILETYPES	persistence.cpp	/^  NUM_FILETYPES$/;"	e	line:54	enum:FILETYPES	file:
NewIterator	dbbase.h	/^    leveldb::Iterator* NewIterator() const$/;"	f	line:66	class:CDBBase	access:protected	signature:() const
NonStandardOutput	test/utils_tx.cpp	/^CTxOut NonStandardOutput()$/;"	f	line:203	signature:()
NotifyTotalTokensChanged	omnicore.cpp	/^void NotifyTotalTokensChanged(uint32_t propertyId, int block)$/;"	f	line:600	signature:(uint32_t propertyId, int block)
OMNICORE_ACTIVATION_H	activation.h	2;"	d	line:2
OMNICORE_BITCOIN_H	utilsbitcoin.h	2;"	d	line:2
OMNICORE_CONSENSUSHASH_H	consensushash.h	2;"	d	line:2
OMNICORE_CONVERT_H	convert.h	2;"	d	line:2
OMNICORE_CREATEPAYLOAD_H	createpayload.h	2;"	d	line:2
OMNICORE_CREATETX_H	createtx.h	2;"	d	line:2
OMNICORE_DBBASE_H	dbbase.h	2;"	d	line:2
OMNICORE_DBSPINFO_H	dbspinfo.h	2;"	d	line:2
OMNICORE_DBSTOLIST_H	dbstolist.h	2;"	d	line:2
OMNICORE_DBTRADELIST_H	dbtradelist.h	2;"	d	line:2
OMNICORE_DBTRANSACTION_H	dbtransaction.h	2;"	d	line:2
OMNICORE_DBTXLIST_H	dbtxlist.h	2;"	d	line:2
OMNICORE_DEX_H	dex.h	2;"	d	line:2
OMNICORE_ENCODING_H	encoding.h	2;"	d	line:2
OMNICORE_ERRORS_H	errors.h	2;"	d	line:2
OMNICORE_FEES_H	dbfees.h	2;"	d	line:2
OMNICORE_LOG_H	log.h	2;"	d	line:2
OMNICORE_MDEX_H	mdex.h	2;"	d	line:2
OMNICORE_MESSAGE_TYPE_ACTIVATION	omnicore.h	/^  OMNICORE_MESSAGE_TYPE_ACTIVATION    = 65534,$/;"	e	line:79	enum:TransactionType
OMNICORE_MESSAGE_TYPE_ALERT	omnicore.h	/^  OMNICORE_MESSAGE_TYPE_ALERT         = 65535$/;"	e	line:80	enum:TransactionType
OMNICORE_MESSAGE_TYPE_DEACTIVATION	omnicore.h	/^  OMNICORE_MESSAGE_TYPE_DEACTIVATION  = 65533,$/;"	e	line:78	enum:TransactionType
OMNICORE_NOTIFICATIONS_H	notifications.h	2;"	d	line:2
OMNICORE_OMNICORE_H	omnicore.h	2;"	d	line:2
OMNICORE_PARSE_STRING_H	parse_string.h	2;"	d	line:2
OMNICORE_PARSING_H	parsing.h	2;"	d	line:2
OMNICORE_PENDING_H	pending.h	2;"	d	line:2
OMNICORE_PERSISTENCE_H	persistence.h	2;"	d	line:2
OMNICORE_RPCMBSTRING_H	rpcmbstring.h	2;"	d	line:2
OMNICORE_RPCPAYLOAD_H	rpcpayload.h	2;"	d	line:2
OMNICORE_RPCRAWTX_H	rpcrawtx.h	2;"	d	line:2
OMNICORE_RPCREQUIREMENTS_H	rpcrequirements.h	2;"	d	line:2
OMNICORE_RPCTX	rpctx.h	2;"	d	line:2
OMNICORE_RPCTXOBJECT_H	rpctxobject.h	2;"	d	line:2
OMNICORE_RPCVALUES_H	rpcvalues.h	2;"	d	line:2
OMNICORE_RULES_H	rules.h	2;"	d	line:2
OMNICORE_SCRIPT_H	script.h	2;"	d	line:2
OMNICORE_SEEDBLOCKS_H	seedblocks.h	2;"	d	line:2
OMNICORE_SP_H	sp.h	2;"	d	line:2
OMNICORE_STO_H	sto.h	2;"	d	line:2
OMNICORE_TALLY_H	tally.h	2;"	d	line:2
OMNICORE_TEST_UTILS_TX_H	test/utils_tx.h	2;"	d	line:2
OMNICORE_TX_H	tx.h	2;"	d	line:2
OMNICORE_UINT256_EXTENSIONS_H	uint256_extensions.h	8;"	d	line:8
OMNICORE_UTILSUI_H	utilsui.h	2;"	d	line:2
OMNICORE_VERSION	version.h	/^static const int OMNICORE_VERSION =$/;"	v	line:39
OMNICORE_VERSION_BUILD	version.h	24;"	d	line:24
OMNICORE_VERSION_H	version.h	2;"	d	line:2
OMNICORE_VERSION_MAJOR	version.h	15;"	d	line:15
OMNICORE_VERSION_MINOR	version.h	18;"	d	line:18
OMNICORE_VERSION_PATCH	version.h	21;"	d	line:21
OMNICORE_VERSION_SUFFIX	version.cpp	13;"	d	line:13	file:
OMNICORE_VERSION_SUFFIX	version.cpp	15;"	d	line:15	file:
OMNICORE_WALLETCACHE_H	walletcache.h	2;"	d	line:2
OMNICORE_WALLETFETCHTXS_H	walletfetchtxs.h	2;"	d	line:2
OMNICORE_WALLETTXBUILDER_H	wallettxbuilder.h	2;"	d	line:2
OMNICORE_WALLETUTILS_H	walletutils.h	2;"	d	line:2
OMNI_CLASS_A	parsing.h	13;"	d	line:13
OMNI_CLASS_B	parsing.h	14;"	d	line:14
OMNI_CLASS_C	parsing.h	15;"	d	line:15
OMNI_FEE_THRESHOLD	rules.h	/^const int64_t OMNI_FEE_THRESHOLD = 100000; \/\/ 0.001%$/;"	m	line:41	namespace:mastercore
OMNI_FREEZE_WAIT_PERIOD	rules.h	/^    int OMNI_FREEZE_WAIT_PERIOD;$/;"	m	line:92	class:mastercore::CConsensusParams	access:public
OMNI_PROPERTY_BTC	omnicore.h	108;"	d	line:108
OMNI_PROPERTY_MSC	omnicore.h	109;"	d	line:109
OMNI_PROPERTY_TMSC	omnicore.h	110;"	d	line:110
OfferMap	dex.h	/^typedef std::map<std::string, CMPOffer> OfferMap;$/;"	t	line:222	namespace:mastercore
OmniCoreVersion	version.cpp	/^const std::string OmniCoreVersion()$/;"	f	line:19	signature:()
OmniCore_Encode_ClassB	encoding.cpp	/^bool OmniCore_Encode_ClassB(const std::string& senderAddress, const CPubKey& redeemingPubKey,$/;"	f	line:25	signature:(const std::string& senderAddress, const CPubKey& redeemingPubKey, const std::vector<unsigned char>& vchPayload, std::vector<std::pair<CScript, int64_t> >& vecOutputs)
OmniCore_Encode_ClassC	encoding.cpp	/^bool OmniCore_Encode_ClassC(const std::vector<unsigned char>& vchPayload,$/;"	f	line:83	signature:(const std::vector<unsigned char>& vchPayload, std::vector<std::pair <CScript, int64_t> >& vecOutputs)
OmniTxBuilder	createtx.cpp	/^OmniTxBuilder::OmniTxBuilder()$/;"	f	line:110	class:OmniTxBuilder	signature:()
OmniTxBuilder	createtx.cpp	/^OmniTxBuilder::OmniTxBuilder(const CMutableTransaction& transactionIn)$/;"	f	line:116	class:OmniTxBuilder	signature:(const CMutableTransaction& transactionIn)
OmniTxBuilder	createtx.h	/^class OmniTxBuilder: public TxBuilder$/;"	c	line:147	inherits:TxBuilder
OmniTxBuilder::OmniTxBuilder	createtx.cpp	/^OmniTxBuilder::OmniTxBuilder()$/;"	f	line:110	class:OmniTxBuilder	signature:()
OmniTxBuilder::OmniTxBuilder	createtx.cpp	/^OmniTxBuilder::OmniTxBuilder(const CMutableTransaction& transactionIn)$/;"	f	line:116	class:OmniTxBuilder	signature:(const CMutableTransaction& transactionIn)
OmniTxBuilder::addChange	createtx.cpp	/^OmniTxBuilder& OmniTxBuilder::addChange(const std::string& destination, const CCoinsViewCache& view, int64_t txFee, uint32_t position)$/;"	f	line:170	class:OmniTxBuilder	signature:(const std::string& destination, const CCoinsViewCache& view, int64_t txFee, uint32_t position)
OmniTxBuilder::addInputs	createtx.cpp	/^OmniTxBuilder& OmniTxBuilder::addInputs(const std::vector<PrevTxsEntry>& prevTxs)$/;"	f	line:122	class:OmniTxBuilder	signature:(const std::vector<PrevTxsEntry>& prevTxs)
OmniTxBuilder::addMultisig	createtx.cpp	/^OmniTxBuilder& OmniTxBuilder::addMultisig(const std::vector<unsigned char>& data, const std::string& seed, const CPubKey& pubKey)$/;"	f	line:158	class:OmniTxBuilder	signature:(const std::vector<unsigned char>& data, const std::string& seed, const CPubKey& pubKey)
OmniTxBuilder::addOpReturn	createtx.cpp	/^OmniTxBuilder& OmniTxBuilder::addOpReturn(const std::vector<unsigned char>& data)$/;"	f	line:146	class:OmniTxBuilder	signature:(const std::vector<unsigned char>& data)
OmniTxBuilder::addReference	createtx.cpp	/^OmniTxBuilder& OmniTxBuilder::addReference(const std::string& destination, int64_t value)$/;"	f	line:133	class:OmniTxBuilder	signature:(const std::string& destination, int64_t value)
OpReturn_Empty	test/utils_tx.cpp	/^CTxOut OpReturn_Empty()$/;"	f	line:149	signature:()
OpReturn_MultiSimpleSend	test/utils_tx.cpp	/^CTxOut OpReturn_MultiSimpleSend()$/;"	f	line:190	signature:()
OpReturn_PlainMarker	test/utils_tx.cpp	/^CTxOut OpReturn_PlainMarker()$/;"	f	line:173	signature:()
OpReturn_SimpleSend	test/utils_tx.cpp	/^CTxOut OpReturn_SimpleSend()$/;"	f	line:181	signature:()
OpReturn_Unrelated	test/utils_tx.cpp	/^CTxOut OpReturn_Unrelated()$/;"	f	line:165	signature:()
OpReturn_UnrelatedShort	test/utils_tx.cpp	/^CTxOut OpReturn_UnrelatedShort()$/;"	f	line:157	signature:()
Open	dbbase.cpp	/^leveldb::Status CDBBase::Open(const boost::filesystem::path& path, bool fWipe)$/;"	f	line:17	class:CDBBase	signature:(const boost::filesystem::path& path, bool fWipe)
OwnerAddrType	sto.h	/^typedef std::set<std::pair<int64_t, std::string>, SendToOwners_compare> OwnerAddrType;$/;"	t	line:22	namespace:mastercore
PACKET_SIZE	parsing.h	19;"	d	line:19
PACKET_SIZE_CLASS_A	parsing.h	18;"	d	line:18
PENDING	tally.h	/^    PENDING = 3,$/;"	e	line:12	enum:TallyType
PKT_ERROR	omnicore.h	92;"	d	line:92
PKT_ERROR_CROWD	omnicore.h	98;"	d	line:98
PKT_ERROR_METADEX	omnicore.h	103;"	d	line:103
PKT_ERROR_SEND	omnicore.h	101;"	d	line:101
PKT_ERROR_SEND_ALL	omnicore.h	106;"	d	line:106
PKT_ERROR_SP	omnicore.h	97;"	d	line:97
PKT_ERROR_STO	omnicore.h	100;"	d	line:100
PKT_ERROR_TOKENS	omnicore.h	105;"	d	line:105
PKT_ERROR_TRADEOFFER	omnicore.h	102;"	d	line:102
PKT_RETURNED_OBJECT	omnicore.h	90;"	d	line:90
PUBKEYHASH_BLOCK	rules.h	/^    int PUBKEYHASH_BLOCK;$/;"	m	line:95	class:mastercore::CConsensusParams	access:public
PUSH_BACK_BYTES	createpayload.cpp	17;"	d	line:17	file:
PUSH_BACK_BYTES	createpayload.cpp	556;"	d	line:556	file:
PUSH_BACK_BYTES_PTR	createpayload.cpp	24;"	d	line:24	file:
PUSH_BACK_BYTES_PTR	createpayload.cpp	557;"	d	line:557	file:
ParseAddress	rpcvalues.cpp	/^std::string ParseAddress(const UniValue& value)$/;"	f	line:26	signature:(const UniValue& value)
ParseAddressOrEmpty	rpcvalues.cpp	/^std::string ParseAddressOrEmpty(const UniValue& value)$/;"	f	line:35	signature:(const UniValue& value)
ParseAddressOrWildcard	rpcvalues.cpp	/^std::string ParseAddressOrWildcard(const UniValue& value)$/;"	f	line:43	signature:(const UniValue& value)
ParseAmount	rpcvalues.cpp	/^int64_t ParseAmount(const UniValue& value, bool isDivisible)$/;"	f	line:60	signature:(const UniValue& value, bool isDivisible)
ParseAmount	rpcvalues.cpp	/^int64_t ParseAmount(const UniValue& value, int propertyType)$/;"	f	line:69	signature:(const UniValue& value, int propertyType)
ParseDExAction	rpcvalues.cpp	/^uint8_t ParseDExAction(const UniValue& value)$/;"	f	line:93	signature:(const UniValue& value)
ParseDExFee	rpcvalues.cpp	/^int64_t ParseDExFee(const UniValue& value)$/;"	f	line:84	signature:(const UniValue& value)
ParseDExPaymentWindow	rpcvalues.cpp	/^uint8_t ParseDExPaymentWindow(const UniValue& value)$/;"	f	line:75	signature:(const UniValue& value)
ParseDeadline	rpcvalues.cpp	/^int64_t ParseDeadline(const UniValue& value)$/;"	f	line:138	signature:(const UniValue& value)
ParseEarlyBirdBonus	rpcvalues.cpp	/^uint8_t ParseEarlyBirdBonus(const UniValue& value)$/;"	f	line:147	signature:(const UniValue& value)
ParseEcosystem	rpcvalues.cpp	/^uint8_t ParseEcosystem(const UniValue& value)$/;"	f	line:102	signature:(const UniValue& value)
ParseIssuerBonus	rpcvalues.cpp	/^uint8_t ParseIssuerBonus(const UniValue& value)$/;"	f	line:156	signature:(const UniValue& value)
ParseMetaDExAction	rpcvalues.cpp	/^uint8_t ParseMetaDExAction(const UniValue& value)$/;"	f	line:165	signature:(const UniValue& value)
ParseMutableTransaction	rpcvalues.cpp	/^CMutableTransaction ParseMutableTransaction(const UniValue& value)$/;"	f	line:186	signature:(const UniValue& value)
ParseOutputIndex	rpcvalues.cpp	/^uint32_t ParseOutputIndex(const UniValue& value)$/;"	f	line:201	signature:(const UniValue& value)
ParsePrevTxs	rpcvalues.cpp	/^std::vector<PrevTxsEntry> ParsePrevTxs(const UniValue& value)$/;"	f	line:211	signature:(const UniValue& value)
ParsePreviousPropertyId	rpcvalues.cpp	/^uint32_t ParsePreviousPropertyId(const UniValue& value)$/;"	f	line:120	signature:(const UniValue& value)
ParsePropertyId	rpcvalues.cpp	/^uint32_t ParsePropertyId(const UniValue& value)$/;"	f	line:51	signature:(const UniValue& value)
ParsePropertyType	rpcvalues.cpp	/^uint16_t ParsePropertyType(const UniValue& value)$/;"	f	line:111	signature:(const UniValue& value)
ParsePubKeyOrAddress	rpcvalues.cpp	/^CPubKey ParsePubKeyOrAddress(const UniValue& value)$/;"	f	line:192	signature:(const UniValue& value)
ParseText	rpcvalues.cpp	/^std::string ParseText(const UniValue& value)$/;"	f	line:129	signature:(const UniValue& value)
ParseTransaction	omnicore.cpp	/^int ParseTransaction(const CTransaction& tx, int nBlock, unsigned int idx, CMPTransaction& mptx, unsigned int nTime)$/;"	f	line:1288	signature:(const CTransaction& tx, int nBlock, unsigned int idx, CMPTransaction& mptx, unsigned int nTime)
ParseTransaction	rpcvalues.cpp	/^CTransaction ParseTransaction(const UniValue& value)$/;"	f	line:174	signature:(const UniValue& value)
PayToBareMultisig_1of2	test/utils_tx.cpp	/^CTxOut PayToBareMultisig_1of2()$/;"	f	line:64	signature:()
PayToBareMultisig_1of3	test/utils_tx.cpp	/^CTxOut PayToBareMultisig_1of3()$/;"	f	line:88	signature:()
PayToBareMultisig_3of5	test/utils_tx.cpp	/^CTxOut PayToBareMultisig_3of5()$/;"	f	line:116	signature:()
PayToPubKeyHash_Exodus	test/utils_tx.cpp	/^CTxOut PayToPubKeyHash_Exodus()$/;"	f	line:16	signature:()
PayToPubKeyHash_ExodusCrowdsale	test/utils_tx.cpp	/^CTxOut PayToPubKeyHash_ExodusCrowdsale(int nHeight)$/;"	f	line:24	signature:(int nHeight)
PayToPubKeyHash_Unrelated	test/utils_tx.cpp	/^CTxOut PayToPubKeyHash_Unrelated()$/;"	f	line:32	signature:()
PayToPubKey_Unrelated	test/utils_tx.cpp	/^CTxOut PayToPubKey_Unrelated()$/;"	f	line:48	signature:()
PayToScriptHash_Unrelated	test/utils_tx.cpp	/^CTxOut PayToScriptHash_Unrelated()$/;"	f	line:40	signature:()
PendingActivationCompleted	activation.cpp	/^static void PendingActivationCompleted(const FeatureActivation& activation)$/;"	f	line:52	namespace:mastercore	signature:(const FeatureActivation& activation)
PendingAdd	pending.cpp	/^void PendingAdd(const uint256& txid, const std::string& sendingAddress, uint16_t type, uint32_t propertyId, int64_t amount, bool fSubtract)$/;"	f	line:29	namespace:mastercore	signature:(const uint256& txid, const std::string& sendingAddress, uint16_t type, uint32_t propertyId, int64_t amount, bool fSubtract)
PendingCheck	pending.cpp	/^void PendingCheck()$/;"	f	line:84	namespace:mastercore	signature:()
PendingDelete	pending.cpp	/^void PendingDelete(const uint256& txid)$/;"	f	line:61	namespace:mastercore	signature:(const uint256& txid)
PendingMap	pending.h	/^typedef std::map<uint256, CMPPending> PendingMap;$/;"	t	line:16	namespace:mastercore
PersistInMemoryState	persistence.cpp	/^int PersistInMemoryState(const CBlockIndex* pBlockIndex)$/;"	f	line:525	signature:(const CBlockIndex* pBlockIndex)
PopulateFailure	rpc.cpp	/^void PopulateFailure(int error)$/;"	f	line:68	signature:(int error)
PrepareObfuscatedHashes	parsing.cpp	/^void PrepareObfuscatedHashes(const std::string& strSeed, int hashCount, std::string(&vstrHashes)[1+MAX_SHA256_OBFUSCATION_TIMES])$/;"	f	line:113	signature:(const std::string& strSeed, int hashCount, std::string(&vstrHashes)[1+MAX_SHA256_OBFUSCATION_TIMES])
PrevTxsEntry	createtx.cpp	/^PrevTxsEntry::PrevTxsEntry(const uint256& txid, uint32_t nOut, int64_t nValue, const CScript& scriptPubKey)$/;"	f	line:21	class:PrevTxsEntry	signature:(const uint256& txid, uint32_t nOut, int64_t nValue, const CScript& scriptPubKey)
PrevTxsEntry	createtx.h	/^struct PrevTxsEntry$/;"	s	line:22
PrevTxsEntry::PrevTxsEntry	createtx.cpp	/^PrevTxsEntry::PrevTxsEntry(const uint256& txid, uint32_t nOut, int64_t nValue, const CScript& scriptPubKey)$/;"	f	line:21	class:PrevTxsEntry	signature:(const uint256& txid, uint32_t nOut, int64_t nValue, const CScript& scriptPubKey)
PrevTxsEntry::outPoint	createtx.h	/^    COutPoint outPoint;$/;"	m	line:27	struct:PrevTxsEntry	access:public
PrevTxsEntry::txOut	createtx.h	/^    CTxOut txOut;$/;"	m	line:28	struct:PrevTxsEntry	access:public
PrintFreezeState	omnicore.cpp	/^void mastercore::PrintFreezeState()$/;"	f	line:345	class:mastercore	signature:()
ProgressReporter	omnicore.cpp	/^    ProgressReporter(const CBlockIndex* pblockFirst, const CBlockIndex* pblockLast)$/;"	f	line:1398	class:ProgressReporter	access:public	signature:(const CBlockIndex* pblockFirst, const CBlockIndex* pblockLast)
ProgressReporter	omnicore.cpp	/^class ProgressReporter$/;"	c	line:1360	file:
ProgressReporter::ProgressReporter	omnicore.cpp	/^    ProgressReporter(const CBlockIndex* pblockFirst, const CBlockIndex* pblockLast)$/;"	f	line:1398	class:ProgressReporter	access:public	signature:(const CBlockIndex* pblockFirst, const CBlockIndex* pblockLast)
ProgressReporter::estimateRemainingTime	omnicore.cpp	/^    int64_t estimateRemainingTime(double progress) const$/;"	f	line:1368	class:ProgressReporter	file:	access:private	signature:(double progress) const
ProgressReporter::m_pblockFirst	omnicore.cpp	/^    const CBlockIndex* m_pblockFirst;$/;"	m	line:1363	class:ProgressReporter	file:	access:private
ProgressReporter::m_pblockLast	omnicore.cpp	/^    const CBlockIndex* m_pblockLast;$/;"	m	line:1364	class:ProgressReporter	file:	access:private
ProgressReporter::m_timeStart	omnicore.cpp	/^    const int64_t m_timeStart;$/;"	m	line:1365	class:ProgressReporter	file:	access:private
ProgressReporter::remainingTimeAsString	omnicore.cpp	/^    std::string remainingTimeAsString(int64_t remainingTime) const$/;"	f	line:1381	class:ProgressReporter	file:	access:private	signature:(int64_t remainingTime) const
ProgressReporter::update	omnicore.cpp	/^    void update(const CBlockIndex* pblockNow) const$/;"	f	line:1404	class:ProgressReporter	access:public	signature:(const CBlockIndex* pblockNow) const
PropertyToJSON	rpc.cpp	/^void PropertyToJSON(const CMPSPInfo::Entry& sProperty, UniValue& property_obj)$/;"	f	line:88	signature:(const CMPSPInfo::Entry& sProperty, UniValue& property_obj)
PruneCache	dbfees.cpp	/^void COmniFeeCache::PruneCache(const uint32_t &propertyId, int block)$/;"	f	line:244	class:COmniFeeCache	signature:(const uint32_t &propertyId, int block)
RPC_H	rpc.h	15;"	d	line:15
RecordFeeDistribution	dbfees.cpp	/^void COmniFeeHistory::RecordFeeDistribution(const uint32_t &propertyId, int block, int64_t total, std::set<feeHistoryItem> feeRecipients)$/;"	f	line:498	class:COmniFeeHistory	signature:(const uint32_t &propertyId, int block, int64_t total, std::set<feeHistoryItem> feeRecipients)
RecordTransaction	dbtransaction.cpp	/^void COmniTransactionDB::RecordTransaction(const uint256& txid, uint32_t posInBlock, int processingResult)$/;"	f	line:61	class:COmniTransactionDB	signature:(const uint256& txid, uint32_t posInBlock, int processingResult)
RegTest	utilsbitcoin.cpp	/^bool RegTest()$/;"	f	line:63	namespace:mastercore	signature:()
RegisterOmniDataRetrievalRPCCommands	rpc.cpp	/^void RegisterOmniDataRetrievalRPCCommands(CRPCTable &tableRPC)$/;"	f	line:2493	signature:(CRPCTable &tableRPC)
RegisterOmniPayloadCreationRPCCommands	rpcpayload.cpp	/^void RegisterOmniPayloadCreationRPCCommands(CRPCTable &tableRPC)$/;"	f	line:706	signature:(CRPCTable &tableRPC)
RegisterOmniRawTransactionRPCCommands	rpcrawtx.cpp	/^void RegisterOmniRawTransactionRPCCommands(CRPCTable &tableRPC)$/;"	f	line:329	signature:(CRPCTable &tableRPC)
RegisterOmniTransactionCreationRPCCommands	rpctx.cpp	/^void RegisterOmniTransactionCreationRPCCommands(CRPCTable &tableRPC)$/;"	f	line:1574	signature:(CRPCTable &tableRPC)
RequireActiveCrowdsale	rpcrequirements.cpp	/^void RequireActiveCrowdsale(uint32_t propertyId)$/;"	f	line:78	signature:(uint32_t propertyId)
RequireBalance	rpcrequirements.cpp	/^void RequireBalance(const std::string& address, uint32_t propertyId, int64_t amount)$/;"	f	line:18	signature:(const std::string& address, uint32_t propertyId, int64_t amount)
RequireCrowdsale	rpcrequirements.cpp	/^void RequireCrowdsale(uint32_t propertyId)$/;"	f	line:66	signature:(uint32_t propertyId)
RequireDifferentIds	rpcrequirements.cpp	/^void RequireDifferentIds(uint32_t propertyId, uint32_t otherId)$/;"	f	line:59	signature:(uint32_t propertyId, uint32_t otherId)
RequireExistingProperty	rpcrequirements.cpp	/^void RequireExistingProperty(uint32_t propertyId)$/;"	f	line:44	signature:(uint32_t propertyId)
RequireHeightInChain	rpcrequirements.cpp	/^void RequireHeightInChain(int blockHeight)$/;"	f	line:157	signature:(int blockHeight)
RequireManagedProperty	rpcrequirements.cpp	/^void RequireManagedProperty(uint32_t propertyId)$/;"	f	line:86	signature:(uint32_t propertyId)
RequireMatchingDExOffer	rpcrequirements.cpp	/^void RequireMatchingDExOffer(const std::string& address, uint32_t propertyId)$/;"	f	line:110	signature:(const std::string& address, uint32_t propertyId)
RequireNoOtherDExOffer	rpcrequirements.cpp	/^void RequireNoOtherDExOffer(const std::string& address, uint32_t propertyId)$/;"	f	line:118	signature:(const std::string& address, uint32_t propertyId)
RequirePrimaryToken	rpcrequirements.cpp	/^void RequirePrimaryToken(uint32_t propertyId)$/;"	f	line:30	signature:(uint32_t propertyId)
RequirePropertyName	rpcrequirements.cpp	/^void RequirePropertyName(const std::string& name)$/;"	f	line:37	signature:(const std::string& name)
RequireSameEcosystem	rpcrequirements.cpp	/^void RequireSameEcosystem(uint32_t propertyId, uint32_t otherId)$/;"	f	line:52	signature:(uint32_t propertyId, uint32_t otherId)
RequireSaneDExFee	rpcrequirements.cpp	/^void RequireSaneDExFee(const std::string& address, uint32_t propertyId)$/;"	f	line:145	signature:(const std::string& address, uint32_t propertyId)
RequireSaneDExPaymentWindow	rpcrequirements.cpp	/^void RequireSaneDExPaymentWindow(const std::string& address, uint32_t propertyId)$/;"	f	line:133	signature:(const std::string& address, uint32_t propertyId)
RequireSaneReferenceAmount	rpcrequirements.cpp	/^void RequireSaneReferenceAmount(int64_t amount)$/;"	f	line:126	signature:(int64_t amount)
RequireTokenIssuer	rpcrequirements.cpp	/^void RequireTokenIssuer(const std::string& address, uint32_t propertyId)$/;"	f	line:98	signature:(const std::string& address, uint32_t propertyId)
ResetConsensusParams	rules.cpp	/^void ResetConsensusParams()$/;"	f	line:333	namespace:mastercore	signature:()
RestoreInMemoryState	persistence.cpp	/^int RestoreInMemoryState(const std::string& filename, int what, bool verifyHash)$/;"	f	line:546	signature:(const std::string& filename, int what, bool verifyHash)
RewindDBsAndState	omnicore.cpp	/^void RewindDBsAndState(int nHeight, int nBlockPrev = 0, bool fInitialParse = false)$/;"	f	line:1543	signature:(int nHeight, int nBlockPrev = 0, bool fInitialParse = false)
RollBackCache	dbfees.cpp	/^void COmniFeeCache::RollBackCache(int block)$/;"	f	line:164	class:COmniFeeCache	signature:(int block)
RollBackHistory	dbfees.cpp	/^void COmniFeeHistory::RollBackHistory(int block)$/;"	f	line:384	class:COmniFeeHistory	signature:(int block)
SCRIPTHASH_BLOCK	rules.h	/^    int SCRIPTHASH_BLOCK;$/;"	m	line:97	class:mastercore::CConsensusParams	access:public
SELLOFFER_RESERVE	tally.h	/^    SELLOFFER_RESERVE = 1,$/;"	e	line:10	enum:TallyType
SPCROWDCROSSOVER_FEATURE_BLOCK	rules.h	/^    int SPCROWDCROSSOVER_FEATURE_BLOCK;$/;"	m	line:129	class:mastercore::CConsensusParams	access:public
SP_STRING_FIELD_LEN	omnicore.h	41;"	d	line:41
STORE_EVERY_N_BLOCK	omnicore.h	/^int const STORE_EVERY_N_BLOCK = 10000;$/;"	v	line:29
STO_GetReceivers	sto.cpp	/^OwnerAddrType STO_GetReceivers(const std::string& sender, uint32_t property, int64_t amount)$/;"	f	line:35	namespace:mastercore	signature:(const std::string& sender, uint32_t property, int64_t amount)
STR_ACCEPT_ADDR_PROP_ADDR_COMBO	dex.h	/^inline std::string STR_ACCEPT_ADDR_PROP_ADDR_COMBO(const std::string& seller, const std::string& buyer, uint32_t propertyId)$/;"	f	line:25	signature:(const std::string& seller, const std::string& buyer, uint32_t propertyId)
STR_PAYMENT_SUBKEY_TXID_PAYMENT_COMBO	dex.h	/^inline std::string STR_PAYMENT_SUBKEY_TXID_PAYMENT_COMBO(const std::string& txidStr, unsigned int paymentNumber)$/;"	f	line:30	signature:(const std::string& txidStr, unsigned int paymentNumber)
STR_REF_SUBKEY_TXID_REF_COMBO	dex.h	/^inline std::string STR_REF_SUBKEY_TXID_REF_COMBO(const std::string& txidStr, unsigned int refNumber)$/;"	f	line:35	signature:(const std::string& txidStr, unsigned int refNumber)
STR_SELLOFFER_ADDR_PROP_COMBO	dex.h	/^inline std::string STR_SELLOFFER_ADDR_PROP_COMBO(const std::string& address, uint32_t propertyId)$/;"	f	line:20	signature:(const std::string& address, uint32_t propertyId)
SafeSolver	script.cpp	/^bool SafeSolver(const CScript& scriptPubKey, txnouttype& typeRet, std::vector<std::vector<unsigned char> >& vSolutionsRet)$/;"	f	line:89	signature:(const CScript& scriptPubKey, txnouttype& typeRet, std::vector<std::vector<unsigned char> >& vSolutionsRet)
SanitizeInvalidUTF8	rpcmbstring.cpp	/^std::string SanitizeInvalidUTF8(const std::string& s)$/;"	f	line:110	namespace:mastercore	signature:(const std::string& s)
SelectAllCoins	walletutils.cpp	/^int64_t SelectAllCoins(const std::string& fromAddress, CCoinControl& coinControl)$/;"	f	line:285	namespace:mastercore	signature:(const std::string& fromAddress, CCoinControl& coinControl)
SelectCoins	walletutils.cpp	/^int64_t SelectCoins(const std::string& fromAddress, CCoinControl& coinControl, int64_t additional)$/;"	f	line:206	namespace:mastercore	signature:(const std::string& fromAddress, CCoinControl& coinControl, int64_t additional)
SendToOwners_compare	sto.h	/^struct SendToOwners_compare$/;"	s	line:12	namespace:mastercore
SerializationOp	dbspinfo.h	/^        inline void SerializationOp(Stream& s, Operation ser_action) {$/;"	f	line:92	struct:CMPSPInfo::Entry	access:public	signature:(Stream& s, Operation ser_action)
Set	tx.h	/^    void Set(const std::string& s, const std::string& r, uint64_t n, const uint256& t,$/;"	f	line:277	class:CMPTransaction	access:public	signature:(const std::string& s, const std::string& r, uint64_t n, const uint256& t, int b, unsigned int idx, unsigned char *p, unsigned int size, int encodingClassIn, uint64_t txf)
Set	tx.h	/^    void Set(const uint256& t, int b, unsigned int idx, int64_t bt)$/;"	f	line:268	class:CMPTransaction	access:public	signature:(const uint256& t, int b, unsigned int idx, int64_t bt)
SetNull	tx.h	/^    void SetNull()$/;"	f	line:222	class:CMPTransaction	access:public	signature:()
ShouldConsensusHashBlock	consensushash.cpp	/^bool ShouldConsensusHashBlock(int block) {$/;"	f	line:28	namespace:mastercore	signature:(int block)
ShrinkDebugLog	log.cpp	/^void ShrinkDebugLog()$/;"	f	line:267	signature:()
SkipBlock	seedblocks.cpp	/^bool SkipBlock(int nBlock)$/;"	f	line:5519	signature:(int nBlock)
StrToInt64	parse_string.cpp	/^int64_t StrToInt64(const std::string& str, bool divisible)$/;"	f	line:12	namespace:mastercore	signature:(const std::string& str, bool divisible)
SwapByteOrder16	parsing.cpp	/^void SwapByteOrder16(uint16_t& us)$/;"	f	line:44	signature:(uint16_t& us)
SwapByteOrder32	parsing.cpp	/^void SwapByteOrder32(uint32_t& ui)$/;"	f	line:55	signature:(uint32_t& ui)
SwapByteOrder64	parsing.cpp	/^void SwapByteOrder64(uint64_t& ull)$/;"	f	line:68	signature:(uint64_t& ull)
TALLY_TYPE_COUNT	tally.h	/^    TALLY_TYPE_COUNT$/;"	e	line:14	enum:TallyType
TEST_ECO_PROPERTY_1	omnicore.h	31;"	d	line:31
TRADEALLPAIRS_FEATURE_BLOCK	rules.h	/^    int TRADEALLPAIRS_FEATURE_BLOCK;$/;"	m	line:131	class:mastercore::CConsensusParams	access:public
TRADED	mdex.cpp	/^    TRADED = 1,$/;"	e	line:69	enum:MatchReturnType	file:
TRADED_MOREINBUYER	mdex.cpp	/^    TRADED_MOREINBUYER,$/;"	e	line:71	enum:MatchReturnType	file:
TRADED_MOREINSELLER	mdex.cpp	/^    TRADED_MOREINSELLER,$/;"	e	line:70	enum:MatchReturnType	file:
TRADE_CANCELLED	mdex.h	29;"	d	line:29
TRADE_CANCELLED_PART_FILLED	mdex.h	30;"	d	line:30
TRADE_FILLED	mdex.h	28;"	d	line:28
TRADE_INVALID	mdex.h	25;"	d	line:25
TRADE_OPEN	mdex.h	26;"	d	line:26
TRADE_OPEN_PART_FILLED	mdex.h	27;"	d	line:27
TRANSFER_FEE_PER_OWNER	sto.h	/^const int64_t TRANSFER_FEE_PER_OWNER = 1;$/;"	m	line:18	namespace:mastercore
TRANSFER_FEE_PER_OWNER_V1	sto.h	/^const int64_t TRANSFER_FEE_PER_OWNER_V1 = 1000;$/;"	m	line:19	namespace:mastercore
TXExodusFundraiser	omnicore.cpp	/^static bool TXExodusFundraiser(const CTransaction& tx, const std::string& sender, int64_t amountInvested, int nBlock, unsigned int nTime)$/;"	f	line:665	file:	signature:(const CTransaction& tx, const std::string& sender, int64_t amountInvested, int nBlock, unsigned int nTime)
TallyType	tally.h	/^enum TallyType {$/;"	g	line:8
TestNet	utilsbitcoin.cpp	/^bool TestNet()$/;"	f	line:58	namespace:mastercore	signature:()
ToString	mdex.cpp	/^std::string CMPMetaDEx::ToString() const$/;"	f	line:425	class:CMPMetaDEx	signature:() const
TokenMap	tally.h	/^    typedef std::map<uint32_t, BalanceRecord> TokenMap;$/;"	t	line:27	class:CMPTally	access:private
TransactionRestriction	rules.h	/^struct TransactionRestriction$/;"	s	line:45	namespace:mastercore
TransactionType	omnicore.h	/^enum TransactionType {$/;"	g	line:49
TxBuilder	createtx.cpp	/^TxBuilder::TxBuilder()$/;"	f	line:27	class:TxBuilder	signature:()
TxBuilder	createtx.cpp	/^TxBuilder::TxBuilder(const CMutableTransaction& transactionIn)$/;"	f	line:32	class:TxBuilder	signature:(const CMutableTransaction& transactionIn)
TxBuilder	createtx.h	/^class TxBuilder$/;"	c	line:55
TxBuilder::TxBuilder	createtx.cpp	/^TxBuilder::TxBuilder()$/;"	f	line:27	class:TxBuilder	signature:()
TxBuilder::TxBuilder	createtx.cpp	/^TxBuilder::TxBuilder(const CMutableTransaction& transactionIn)$/;"	f	line:32	class:TxBuilder	signature:(const CMutableTransaction& transactionIn)
TxBuilder::addChange	createtx.cpp	/^TxBuilder& TxBuilder::addChange(const CTxDestination& destination, const CCoinsViewCache& view, int64_t txFee, uint32_t position)$/;"	f	line:75	class:TxBuilder	signature:(const CTxDestination& destination, const CCoinsViewCache& view, int64_t txFee, uint32_t position)
TxBuilder::addInput	createtx.cpp	/^TxBuilder& TxBuilder::addInput(const COutPoint& outPoint)$/;"	f	line:38	class:TxBuilder	signature:(const COutPoint& outPoint)
TxBuilder::addInput	createtx.cpp	/^TxBuilder& TxBuilder::addInput(const uint256& txid, uint32_t nOut)$/;"	f	line:47	class:TxBuilder	signature:(const uint256& txid, uint32_t nOut)
TxBuilder::addOutput	createtx.cpp	/^TxBuilder& TxBuilder::addOutput(const CScript& scriptPubKey, int64_t value)$/;"	f	line:55	class:TxBuilder	signature:(const CScript& scriptPubKey, int64_t value)
TxBuilder::addOutputs	createtx.cpp	/^TxBuilder& TxBuilder::addOutputs(const std::vector<std::pair<CScript, int64_t> >& txOutputs)$/;"	f	line:64	class:TxBuilder	signature:(const std::vector<std::pair<CScript, int64_t> >& txOutputs)
TxBuilder::build	createtx.cpp	/^CMutableTransaction TxBuilder::build()$/;"	f	line:104	class:TxBuilder	signature:()
TxBuilder::transaction	createtx.h	/^    CMutableTransaction transaction;$/;"	m	line:125	class:TxBuilder	access:protected
TxClassA	test/parsing_a_tests.cpp	/^static CTransaction TxClassA(const std::vector<CTxOut>& txInputs, const std::vector<CTxOut>& txOuts)$/;"	f	line:29	file:	signature:(const std::vector<CTxOut>& txInputs, const std::vector<CTxOut>& txOuts)
TxClassB	test/parsing_b_tests.cpp	/^static CTransaction TxClassB(const std::vector<CTxOut>& txInputs, const std::vector<CTxOut>& txOuts)$/;"	f	line:29	file:	signature:(const std::vector<CTxOut>& txInputs, const std::vector<CTxOut>& txOuts)
TxClassB	test/sender_bycontribution_tests.cpp	/^static CTransaction TxClassB(const std::vector<CTxOut>& txInputs)$/;"	f	line:331	file:	signature:(const std::vector<CTxOut>& txInputs)
TxClassC	test/parsing_c_tests.cpp	/^static CTransaction TxClassC(const std::vector<CTxOut>& txInputs, const std::vector<CTxOut>& txOuts)$/;"	f	line:30	file:	signature:(const std::vector<CTxOut>& txInputs, const std::vector<CTxOut>& txOuts)
TxClassC	test/sender_firstin_tests.cpp	/^static CTransaction TxClassC(const std::vector<CTxOut>& txInputs)$/;"	f	line:28	file:	signature:(const std::vector<CTxOut>& txInputs)
UPDATE	tx.h	/^        UPDATE = 2,$/;"	e	line:171	enum:CMPTransaction::ActionTypes
UnitTest	utilsbitcoin.cpp	/^bool UnitTest()$/;"	f	line:68	namespace:mastercore	signature:()
UnlockCoins	wallettxbuilder.cpp	/^static void UnlockCoins($/;"	f	line:163	file:	signature:( CWallet* pwallet, const std::vector<COutPoint>& vToUnlock)
UpdateDistributionThresholds	dbfees.cpp	/^void COmniFeeCache::UpdateDistributionThresholds(uint32_t propertyId)$/;"	f	line:55	class:COmniFeeCache	signature:(uint32_t propertyId)
UseEncodingClassC	omnicore.cpp	/^bool mastercore::UseEncodingClassC(size_t nDataSize)$/;"	f	line:1859	class:mastercore	signature:(size_t nDataSize)
VerifyCheckpoint	rules.cpp	/^bool VerifyCheckpoint(int block, const uint256& blockHash)$/;"	f	line:642	namespace:mastercore	signature:(int block, const uint256& blockHash)
WalletCacheUpdate	walletcache.cpp	/^int WalletCacheUpdate()$/;"	f	line:41	namespace:mastercore	signature:()
WalletTxBuilder	wallettxbuilder.cpp	/^int WalletTxBuilder($/;"	f	line:41	signature:( const std::string& senderAddress, const std::string& receiverAddress, const std::string& redemptionAddress, int64_t referenceAmount, const std::vector<unsigned char>& payload, uint256& retTxid, std::string& retRawTx, bool commit)
_my_sps	omnicore.cpp	/^CMPSPInfo* mastercore::_my_sps;$/;"	m	line:133	class:mastercore	file:
accept_amount_original	dex.h	/^    int64_t accept_amount_original;    \/\/ amount of MSC\/TMSC desired to purchased$/;"	m	line:120	class:CMPAccept	access:private
accept_amount_remaining	dex.h	/^    int64_t accept_amount_remaining;   \/\/ amount of MSC\/TMSC remaining to purchased$/;"	m	line:121	class:CMPAccept	access:private
action	tx.h	/^    unsigned char action; \/\/ depreciated$/;"	m	line:79	class:CMPTransaction	access:private
activationBlock	activation.h	/^    int activationBlock;$/;"	m	line:15	struct:mastercore::FeatureActivation	access:public
activationBlock	rules.h	/^    int activationBlock;$/;"	m	line:54	struct:mastercore::TransactionRestriction	access:public
activation_block	tx.h	/^    uint32_t activation_block;$/;"	m	line:94	class:CMPTransaction	access:private
addChange	createtx.cpp	/^OmniTxBuilder& OmniTxBuilder::addChange(const std::string& destination, const CCoinsViewCache& view, int64_t txFee, uint32_t position)$/;"	f	line:170	class:OmniTxBuilder	signature:(const std::string& destination, const CCoinsViewCache& view, int64_t txFee, uint32_t position)
addChange	createtx.cpp	/^TxBuilder& TxBuilder::addChange(const CTxDestination& destination, const CCoinsViewCache& view, int64_t txFee, uint32_t position)$/;"	f	line:75	class:TxBuilder	signature:(const CTxDestination& destination, const CCoinsViewCache& view, int64_t txFee, uint32_t position)
addInput	createtx.cpp	/^TxBuilder& TxBuilder::addInput(const COutPoint& outPoint)$/;"	f	line:38	class:TxBuilder	signature:(const COutPoint& outPoint)
addInput	createtx.cpp	/^TxBuilder& TxBuilder::addInput(const uint256& txid, uint32_t nOut)$/;"	f	line:47	class:TxBuilder	signature:(const uint256& txid, uint32_t nOut)
addInputs	createtx.cpp	/^OmniTxBuilder& OmniTxBuilder::addInputs(const std::vector<PrevTxsEntry>& prevTxs)$/;"	f	line:122	class:OmniTxBuilder	signature:(const std::vector<PrevTxsEntry>& prevTxs)
addMultisig	createtx.cpp	/^OmniTxBuilder& OmniTxBuilder::addMultisig(const std::vector<unsigned char>& data, const std::string& seed, const CPubKey& pubKey)$/;"	f	line:158	class:OmniTxBuilder	signature:(const std::vector<unsigned char>& data, const std::string& seed, const CPubKey& pubKey)
addOpReturn	createtx.cpp	/^OmniTxBuilder& OmniTxBuilder::addOpReturn(const std::vector<unsigned char>& data)$/;"	f	line:146	class:OmniTxBuilder	signature:(const std::vector<unsigned char>& data)
addOutput	createtx.cpp	/^TxBuilder& TxBuilder::addOutput(const CScript& scriptPubKey, int64_t value)$/;"	f	line:55	class:TxBuilder	signature:(const CScript& scriptPubKey, int64_t value)
addOutputs	createtx.cpp	/^TxBuilder& TxBuilder::addOutputs(const std::vector<std::pair<CScript, int64_t> >& txOutputs)$/;"	f	line:64	class:TxBuilder	signature:(const std::vector<std::pair<CScript, int64_t> >& txOutputs)
addReference	createtx.cpp	/^OmniTxBuilder& OmniTxBuilder::addReference(const std::string& destination, int64_t value)$/;"	f	line:133	class:OmniTxBuilder	signature:(const std::string& destination, int64_t value)
addr	mdex.h	/^    std::string addr;$/;"	m	line:49	class:CMPMetaDEx	access:private
alert_expiry	notifications.h	/^    uint32_t alert_expiry;$/;"	m	line:25	struct:mastercore::AlertData	access:public
alert_expiry	tx.h	/^    uint32_t alert_expiry;$/;"	m	line:89	class:CMPTransaction	access:private
alert_message	notifications.h	/^    std::string alert_message;$/;"	m	line:27	struct:mastercore::AlertData	access:public
alert_sender	notifications.h	/^    std::string alert_sender;$/;"	m	line:21	struct:mastercore::AlertData	access:public
alert_text	tx.h	/^    char alert_text[SP_STRING_FIELD_LEN];$/;"	m	line:90	class:CMPTransaction	access:private
alert_type	notifications.h	/^    uint16_t alert_type;$/;"	m	line:23	struct:mastercore::AlertData	access:public
alert_type	tx.h	/^    uint16_t alert_type;$/;"	m	line:88	class:CMPTransaction	access:private
allowWildcard	rules.h	/^    bool allowWildcard;$/;"	m	line:52	struct:mastercore::TransactionRestriction	access:public
amount	pending.h	/^    int64_t amount;$/;"	m	line:39	struct:CMPPending	access:public
amount_desired	mdex.h	/^    int64_t amount_desired;$/;"	m	line:46	class:CMPMetaDEx	access:private
amount_desired	tx.h	/^    uint64_t amount_desired;$/;"	m	line:82	class:CMPTransaction	access:private
amount_forsale	mdex.h	/^    int64_t amount_forsale;$/;"	m	line:44	class:CMPMetaDEx	access:private
amount_remaining	mdex.h	/^    int64_t amount_remaining;$/;"	m	line:47	class:CMPMetaDEx	access:private
autoCommit	omnicore.cpp	/^bool autoCommit = true;$/;"	v	line:116
balance	tally.h	/^        int64_t balance[TALLY_TYPE_COUNT];$/;"	m	line:23	struct:CMPTally::__anon1	access:public
block	dex.h	/^    int block;$/;"	m	line:130	class:CMPAccept	access:private
block	mdex.h	/^    int block;$/;"	m	line:40	class:CMPMetaDEx	access:private
block	tx.h	/^    int block;$/;"	m	line:33	class:CMPTransaction	access:private
blockHash	rules.h	/^    uint256 blockHash;$/;"	m	line:62	struct:mastercore::ConsensusCheckpoint	access:public
blockHeight	rules.h	/^    int blockHeight;$/;"	m	line:61	struct:mastercore::ConsensusCheckpoint	access:public
blockTime	tx.h	/^    int64_t blockTime;  \/\/ internally nTime is still an "unsigned int"$/;"	m	line:34	class:CMPTransaction	access:private
blocktimelimit	dex.h	/^    uint8_t blocktimelimit;            \/\/ copied from the offer during creation$/;"	m	line:122	class:CMPAccept	access:private
blocktimelimit	dex.h	/^    uint8_t blocktimelimit;$/;"	m	line:54	class:CMPOffer	access:private
blocktimelimit	tx.h	/^    unsigned char blocktimelimit;$/;"	m	line:83	class:CMPTransaction	access:private
build	createtx.cpp	/^CMutableTransaction TxBuilder::build()$/;"	f	line:104	class:TxBuilder	signature:()
calculateDExPurchase	dex.cpp	/^int64_t calculateDExPurchase(const int64_t amountOffered, const int64_t amountDesired, const int64_t amountPaid)$/;"	f	line:424	namespace:mastercore	signature:(const int64_t amountOffered, const int64_t amountDesired, const int64_t amountPaid)
calculateDExPurchase	dex.cpp	/^static int64_t calculateDExPurchase(const int64_t amountOffered, const int64_t amountDesired, const int64_t amountPaid)$/;"	f	line:395	namespace:mastercore::legacy	signature:(const int64_t amountOffered, const int64_t amountDesired, const int64_t amountPaid)
calculateDesiredBTC	dex.cpp	/^int64_t calculateDesiredBTC(const int64_t amountOffered, const int64_t amountDesired, const int64_t amountAvailable)$/;"	f	line:121	namespace:mastercore	signature:(const int64_t amountOffered, const int64_t amountDesired, const int64_t amountAvailable)
calculateDesiredBTC	dex.cpp	/^static int64_t calculateDesiredBTC(const int64_t amountOffered, const int64_t amountDesired, const int64_t amountAvailable)$/;"	f	line:99	namespace:mastercore::legacy	signature:(const int64_t amountOffered, const int64_t amountDesired, const int64_t amountAvailable)
calculateFundraiser	sp.cpp	/^void mastercore::calculateFundraiser(bool inflateAmount, int64_t amtTransfer, uint8_t bonusPerc,$/;"	f	line:201	class:mastercore	signature:(bool inflateAmount, int64_t amtTransfer, uint8_t bonusPerc, int64_t fundraiserSecs, int64_t currentSecs, int64_t numProps, uint8_t issuerPerc, int64_t totalTokens, std::pair<int64_t, int64_t>& tokens, bool& close_crowdsale)
calculate_and_update_devmsc	omnicore.cpp	/^static int64_t calculate_and_update_devmsc(unsigned int nTime, int block)$/;"	f	line:550	file:	signature:(unsigned int nTime, int block)
category	dbspinfo.h	/^        std::string category;$/;"	m	line:54	struct:CMPSPInfo::Entry	access:public
category	tx.h	/^    char category[SP_STRING_FIELD_LEN];$/;"	m	line:67	class:CMPTransaction	access:private
check_mb	rpcmbstring.cpp	/^bool check_mb(const char* s, size_t n)$/;"	f	line:59	namespace:mastercore::mbstring	signature:(const char* s, size_t n)
check_mb	test/mbstring_tests.cpp	/^bool check_mb(const std::string& s)$/;"	f	line:18	namespace:mastercore::mbstring	signature:(const std::string& s)
clear_all_state	omnicore.cpp	/^void clear_all_state()$/;"	f	line:1515	signature:()
close_early	dbspinfo.h	/^        bool close_early;$/;"	m	line:68	struct:CMPSPInfo::Entry	access:public
commands	rpc.cpp	/^static const CRPCCommand commands[] =$/;"	v	line:2432	file:
commands	rpcpayload.cpp	/^static const CRPCCommand commands[] =$/;"	v	line:681	file:
commands	rpcrawtx.cpp	/^static const CRPCCommand commands[] =$/;"	v	line:317	file:
commands	rpctx.cpp	/^static const CRPCCommand commands[] =$/;"	v	line:1535	file:
consensusHash	rules.h	/^    uint256 consensusHash;$/;"	m	line:63	struct:mastercore::ConsensusCheckpoint	access:public
createRandomKeyId	test/sender_bycontribution_tests.cpp	/^static CKeyID createRandomKeyId()$/;"	f	line:391	file:	signature:()
createRandomScriptId	test/sender_bycontribution_tests.cpp	/^static CScriptID createRandomScriptId()$/;"	f	line:402	file:	signature:()
createTxOut	test/parsing_a_tests.cpp	/^static CTxOut createTxOut(int64_t amount, const std::string& dest)$/;"	f	line:68	file:	signature:(int64_t amount, const std::string& dest)
createTxOut	test/parsing_b_tests.cpp	/^static CTxOut createTxOut(int64_t amount, const std::string& dest)$/;"	f	line:68	file:	signature:(int64_t amount, const std::string& dest)
createTxOut	test/parsing_c_tests.cpp	/^static CTxOut createTxOut(int64_t amount, const std::string& dest)$/;"	f	line:69	file:	signature:(int64_t amount, const std::string& dest)
createTxOut	test/sender_bycontribution_tests.cpp	/^static CTxOut createTxOut(int64_t amount, const std::string& dest)$/;"	f	line:385	file:	signature:(int64_t amount, const std::string& dest)
createTxOut	test/sender_firstin_tests.cpp	/^static CTxOut createTxOut(int64_t amount, const std::string& dest)$/;"	f	line:72	file:	signature:(int64_t amount, const std::string& dest)
creation_block	dbspinfo.h	/^        uint256 creation_block;$/;"	m	line:76	struct:CMPSPInfo::Entry	access:public
cs_number	test/lock_tests.cpp	/^    CCriticalSection cs_number;$/;"	m	line:17	namespace:locker	file:
cs_pending	pending.cpp	/^CCriticalSection cs_pending;$/;"	m	line:21	namespace:mastercore	file:
cs_tx_cache	omnicore.cpp	/^CCriticalSection mastercore::cs_tx_cache;$/;"	m	line:800	class:mastercore	file:
currentOmniAlerts	notifications.cpp	/^std::vector<AlertData> currentOmniAlerts;$/;"	m	line:23	namespace:mastercore	file:
data	dbspinfo.h	/^        std::string data;$/;"	m	line:58	struct:CMPSPInfo::Entry	access:public
data	tx.h	/^    char data[SP_STRING_FIELD_LEN];$/;"	m	line:71	class:CMPTransaction	access:private
deadline	dbspinfo.h	/^        int64_t deadline;$/;"	m	line:63	struct:CMPSPInfo::Entry	access:public
deadline	sp.h	/^    int64_t deadline;$/;"	m	line:33	class:CMPCrowd	access:private
deadline	tx.h	/^    uint64_t deadline;$/;"	m	line:72	class:CMPTransaction	access:private
debugLogInitFlag	log.cpp	/^static boost::once_flag debugLogInitFlag = BOOST_ONCE_INIT;$/;"	v	line:81	file:
dec_float	mdex.cpp	/^typedef boost::multiprecision::cpp_dec_float_100 dec_float;$/;"	t	line:35	file:
deleteAboveBlock	dbstolist.cpp	/^int CMPSTOList::deleteAboveBlock(int blockNum)$/;"	f	line:156	class:CMPSTOList	signature:(int blockNum)
deleteAboveBlock	dbtradelist.cpp	/^int CMPTradeList::deleteAboveBlock(int blockNum)$/;"	f	line:67	class:CMPTradeList	signature:(int blockNum)
desired_property	mdex.h	/^    uint32_t desired_property;$/;"	m	line:45	class:CMPMetaDEx	access:private
desired_property	tx.h	/^    unsigned int desired_property;$/;"	m	line:77	class:CMPTransaction	access:private
desired_value	tx.h	/^    uint64_t desired_value;$/;"	m	line:78	class:CMPTransaction	access:private
disableFreezing	omnicore.cpp	/^void mastercore::disableFreezing(uint32_t propertyId)$/;"	f	line:364	class:mastercore	signature:(uint32_t propertyId)
displayFullUnitPrice	mdex.cpp	/^std::string CMPMetaDEx::displayFullUnitPrice() const$/;"	f	line:375	class:CMPMetaDEx	signature:() const
displayUnitPrice	mdex.cpp	/^std::string CMPMetaDEx::displayUnitPrice() const$/;"	f	line:348	class:CMPMetaDEx	signature:() const
distribution_property	tx.h	/^    unsigned int distribution_property;$/;"	m	line:59	class:CMPTransaction	access:private
early_bird	dbspinfo.h	/^        uint8_t early_bird;$/;"	m	line:64	struct:CMPSPInfo::Entry	access:public
early_bird	sp.h	/^    uint8_t early_bird;$/;"	m	line:34	class:CMPCrowd	access:private
early_bird	tx.h	/^    unsigned char early_bird;$/;"	m	line:73	class:CMPTransaction	access:private
ecosystem	tx.h	/^    unsigned char ecosystem;$/;"	m	line:62	class:CMPTransaction	access:private
enableFreezing	omnicore.cpp	/^void mastercore::enableFreezing(uint32_t propertyId, int liveBlock)$/;"	f	line:357	class:mastercore	signature:(uint32_t propertyId, int liveBlock)
encodingClass	tx.h	/^    int encodingClass;  \/\/ No Marker = 0, Class A = 1, Class B = 2, Class C = 3$/;"	m	line:40	class:CMPTransaction	access:private
eraseExpiredAccepts	dex.cpp	/^unsigned int eraseExpiredAccepts(int blockNow)$/;"	f	line:540	namespace:mastercore	signature:(int blockNow)
eraseExpiredCrowdsale	sp.cpp	/^unsigned int mastercore::eraseExpiredCrowdsale(const CBlockIndex* pBlockIndex)$/;"	f	line:368	class:mastercore	signature:(const CBlockIndex* pBlockIndex)
eraseMaxedCrowdsale	sp.cpp	/^void mastercore::eraseMaxedCrowdsale(const std::string& address, int64_t blockTime, int block)$/;"	f	line:334	class:mastercore	signature:(const std::string& address, int64_t blockTime, int block)
error_str	errors.h	/^inline std::string error_str(int ec) {$/;"	f	line:37	signature:(int ec)
estimateRemainingTime	omnicore.cpp	/^    int64_t estimateRemainingTime(double progress) const$/;"	f	line:1368	class:ProgressReporter	file:	access:private	signature:(double progress) const
exists	dbstolist.cpp	/^bool CMPSTOList::exists(std::string address)$/;"	f	line:212	class:CMPSTOList	signature:(std::string address)
exists	dbtxlist.cpp	/^bool CMPTxList::exists(const uint256 &txid)$/;"	f	line:373	class:CMPTxList	signature:(const uint256 &txid)
exodusBonusPerWeek	rules.h	/^    double exodusBonusPerWeek;$/;"	m	line:76	class:mastercore::CConsensusParams	access:public
exodusDeadline	rules.h	/^    unsigned int exodusDeadline;$/;"	m	line:78	class:mastercore::CConsensusParams	access:public
exodusReward	rules.h	/^    int64_t exodusReward;$/;"	m	line:80	class:mastercore::CConsensusParams	access:public
exodus_address	omnicore.cpp	/^static std::string exodus_address = "1EXoDusjGwvnjZUyKkxZ4UHEf77z6A5S4P";$/;"	v	line:100	file:
exodus_mainnet	omnicore.cpp	/^static const std::string exodus_mainnet = "1EXoDusjGwvnjZUyKkxZ4UHEf77z6A5S4P";$/;"	v	line:103	file:
exodus_prev	omnicore.cpp	/^int64_t exodus_prev = 0;$/;"	v	line:119
exodus_testnet	omnicore.cpp	/^static const std::string exodus_testnet = "mpexoDuSkGGqvqrkrjiFng38QPkJQVFyqv";$/;"	v	line:105	file:
featureId	activation.h	/^    uint16_t featureId;$/;"	m	line:14	struct:mastercore::FeatureActivation	access:public
featureName	activation.h	/^    std::string featureName;$/;"	m	line:17	struct:mastercore::FeatureActivation	access:public
feature_id	tx.h	/^    uint16_t feature_id;$/;"	m	line:93	class:CMPTransaction	access:private
feeCacheItem	dbfees.h	/^typedef std::pair<int, int64_t> feeCacheItem;$/;"	t	line:14
feeHistoryItem	dbfees.h	/^typedef std::pair<std::string, int64_t> feeHistoryItem;$/;"	t	line:15
fileout	log.cpp	/^static FILE* fileout = NULL;$/;"	v	line:86	file:
findMetaDExCancel	dbtxlist.cpp	/^uint256 CMPTxList::findMetaDExCancel(const uint256 txid)$/;"	f	line:194	class:CMPTxList	signature:(const uint256 txid)
findSPByTX	dbspinfo.cpp	/^uint32_t CMPSPInfo::findSPByTX(const uint256& txid) const$/;"	f	line:277	class:CMPSPInfo	signature:(const uint256& txid) const
fixed	dbspinfo.h	/^        bool fixed;$/;"	m	line:78	struct:CMPSPInfo::Entry	access:public
freezeAddress	omnicore.cpp	/^void mastercore::freezeAddress(const std::string& address, uint32_t propertyId)$/;"	f	line:403	class:mastercore	signature:(const std::string& address, uint32_t propertyId)
getAcceptAmount	dex.h	/^    int64_t getAcceptAmount() const { return accept_amount_original; }$/;"	f	line:139	class:CMPAccept	access:public	signature:() const
getAcceptAmountRemaining	dex.h	/^    int64_t getAcceptAmountRemaining() const$/;"	f	line:174	class:CMPAccept	access:public	signature:() const
getAcceptBlock	dex.h	/^    int getAcceptBlock() const { return block; }$/;"	f	line:144	class:CMPAccept	access:public	signature:() const
getAction	mdex.h	/^    uint8_t getAction() const { return subaction; }$/;"	f	line:64	class:CMPMetaDEx	access:public	signature:() const
getActivationBlock	tx.h	/^    uint32_t getActivationBlock() const { return activation_block; }$/;"	f	line:210	class:CMPTransaction	access:public	signature:() const
getAddr	mdex.h	/^    const std::string& getAddr() const { return addr; }$/;"	f	line:66	class:CMPMetaDEx	access:public	signature:() const
getAlertExpiry	tx.h	/^    uint32_t getAlertExpiry() const { return alert_expiry; }$/;"	f	line:206	class:CMPTransaction	access:public	signature:() const
getAlertMessage	tx.h	/^    std::string getAlertMessage() const { return alert_text; }$/;"	f	line:207	class:CMPTransaction	access:public	signature:() const
getAlertType	tx.h	/^    uint16_t getAlertType() const { return alert_type; }$/;"	f	line:205	class:CMPTransaction	access:public	signature:() const
getAmount	tx.h	/^    uint64_t getAmount() const { return nValue; }$/;"	f	line:191	class:CMPTransaction	access:public	signature:() const
getAmountDesired	mdex.h	/^    int64_t getAmountDesired() const { return amount_desired; }$/;"	f	line:58	class:CMPMetaDEx	access:public	signature:() const
getAmountForSale	mdex.h	/^    int64_t getAmountForSale() const { return amount_forsale; }$/;"	f	line:57	class:CMPMetaDEx	access:public	signature:() const
getAmountRemaining	mdex.h	/^    int64_t getAmountRemaining() const { return amount_remaining; }$/;"	f	line:59	class:CMPMetaDEx	access:public	signature:() const
getAmountToFill	mdex.cpp	/^int64_t CMPMetaDEx::getAmountToFill() const$/;"	f	line:405	class:CMPMetaDEx	signature:() const
getBTCDesiredOriginal	dex.h	/^    int64_t getBTCDesiredOriginal() const { return BTC_desired_original; }$/;"	f	line:137	class:CMPAccept	access:public	signature:() const
getBTCDesiredOriginal	dex.h	/^    int64_t getBTCDesiredOriginal() const { return BTC_desired_original; }$/;"	f	line:66	class:CMPOffer	access:public	signature:() const
getBlock	mdex.h	/^    int getBlock() const { return block; }$/;"	f	line:68	class:CMPMetaDEx	access:public	signature:() const
getBlockTime	mdex.cpp	/^int64_t CMPMetaDEx::getBlockTime() const$/;"	f	line:413	class:CMPMetaDEx	signature:() const
getBlockTimeLimit	dex.h	/^    uint8_t getBlockTimeLimit() const { return blocktimelimit; }$/;"	f	line:141	class:CMPAccept	access:public	signature:() const
getBlockTimeLimit	dex.h	/^    uint8_t getBlockTimeLimit() const { return blocktimelimit; }$/;"	f	line:62	class:CMPOffer	access:public	signature:() const
getCrowd	sp.cpp	/^CMPCrowd* mastercore::getCrowd(const std::string& address)$/;"	f	line:95	class:mastercore	signature:(const std::string& address)
getCurrDes	sp.h	/^    uint32_t getCurrDes() const { return property_desired; }$/;"	f	line:53	class:CMPCrowd	access:public	signature:() const
getDBVersion	dbtxlist.cpp	/^int CMPTxList::getDBVersion()$/;"	f	line:343	class:CMPTxList	signature:()
getDatabase	sp.h	/^    std::map<uint256, std::vector<int64_t> > getDatabase() const { return txFundraiserData; }$/;"	f	line:62	class:CMPCrowd	access:public	signature:() const
getDeadline	sp.h	/^    int64_t getDeadline() const { return deadline; }$/;"	f	line:52	class:CMPCrowd	access:public	signature:() const
getDeadline	tx.h	/^    int64_t getDeadline() const { return deadline; }$/;"	f	line:200	class:CMPTransaction	access:public	signature:() const
getDesProperty	mdex.h	/^    uint32_t getDesProperty() const { return desired_property; }$/;"	f	line:55	class:CMPMetaDEx	access:public	signature:() const
getDistributionProperty	tx.h	/^    uint32_t getDistributionProperty() const { return distribution_property; }$/;"	f	line:213	class:CMPTransaction	access:public	signature:() const
getEarlyBirdBonus	tx.h	/^    uint8_t getEarlyBirdBonus() const { return early_bird; }$/;"	f	line:201	class:CMPTransaction	access:public	signature:() const
getEcosystem	tx.h	/^    uint8_t getEcosystem() const { return ecosystem; }$/;"	f	line:193	class:CMPTransaction	access:public	signature:() const
getEncodingClass	tx.h	/^    int getEncodingClass() const { return encodingClass; }$/;"	f	line:204	class:CMPTransaction	access:public	signature:() const
getFeatureId	tx.h	/^    uint16_t getFeatureId() const { return feature_id; }$/;"	f	line:209	class:CMPTransaction	access:public	signature:() const
getFeePaid	tx.h	/^    uint64_t getFeePaid() const { return tx_fee_paid; }$/;"	f	line:187	class:CMPTransaction	access:public	signature:() const
getHash	dex.h	/^    uint256 getHash() const { return offer_txid; }$/;"	f	line:134	class:CMPAccept	access:public	signature:() const
getHash	dex.h	/^    uint256 getHash() const { return txid; }$/;"	f	line:59	class:CMPOffer	access:public	signature:() const
getHash	mdex.h	/^    uint256 getHash() const { return txid; }$/;"	f	line:52	class:CMPMetaDEx	access:public	signature:() const
getHash	tx.h	/^    uint256 getHash() const { return txid; }$/;"	f	line:181	class:CMPTransaction	access:public	signature:() const
getIdx	mdex.h	/^    unsigned int getIdx() const { return idx; }$/;"	f	line:69	class:CMPMetaDEx	access:public	signature:() const
getIndexInBlock	tx.h	/^    unsigned int getIndexInBlock() const { return tx_idx; }$/;"	f	line:212	class:CMPTransaction	access:public	signature:() const
getIssuerBonus	tx.h	/^    uint8_t getIssuerBonus() const { return percentage; }$/;"	f	line:202	class:CMPTransaction	access:public	signature:() const
getIssuerCreated	sp.h	/^    int64_t getIssuerCreated() const { return i_created; }$/;"	f	line:59	class:CMPCrowd	access:public	signature:() const
getKeyValue	dbtxlist.cpp	/^std::string CMPTxList::getKeyValue(std::string key)$/;"	f	line:182	class:CMPTxList	signature:(std::string key)
getMPTradeCountTotal	dbtradelist.cpp	/^int CMPTradeList::getMPTradeCountTotal()$/;"	f	line:336	class:CMPTradeList	signature:()
getMPTransactionCountBlock	dbtxlist.cpp	/^int CMPTxList::getMPTransactionCountBlock(int block)$/;"	f	line:315	class:CMPTxList	signature:(int block)
getMPTransactionCountTotal	dbtxlist.cpp	/^int CMPTxList::getMPTransactionCountTotal()$/;"	f	line:300	class:CMPTxList	signature:()
getMatchingTrades	dbtradelist.cpp	/^bool CMPTradeList::getMatchingTrades(const uint256& txid, uint32_t propertyId, UniValue& tradeArray, int64_t& totalSold, int64_t& totalReceived)$/;"	f	line:118	class:CMPTradeList	signature:(const uint256& txid, uint32_t propertyId, UniValue& tradeArray, int64_t& totalSold, int64_t& totalReceived)
getMinClientVersion	tx.h	/^    uint32_t getMinClientVersion() const { return min_client_version; }$/;"	f	line:211	class:CMPTransaction	access:public	signature:() const
getMinFee	dex.h	/^    int64_t getMinFee() const { return min_fee ; }$/;"	f	line:61	class:CMPOffer	access:public	signature:() const
getMoney	tally.cpp	/^int64_t CMPTally::getMoney(uint32_t propertyId, TallyType ttype) const$/;"	f	line:104	class:CMPTally	signature:(uint32_t propertyId, TallyType ttype) const
getMoneyAvailable	tally.cpp	/^int64_t CMPTally::getMoneyAvailable(uint32_t propertyId) const$/;"	f	line:129	class:CMPTally	signature:(uint32_t propertyId) const
getMoneyReserved	tally.cpp	/^int64_t CMPTally::getMoneyReserved(uint32_t propertyId) const$/;"	f	line:154	class:CMPTally	signature:(uint32_t propertyId) const
getMySTOReceipts	dbstolist.cpp	/^std::string CMPSTOList::getMySTOReceipts(std::string filterAddress)$/;"	f	line:118	class:CMPSTOList	signature:(std::string filterAddress)
getNewAmount	tx.h	/^    uint64_t getNewAmount() const { return nNewValue; }$/;"	f	line:192	class:CMPTransaction	access:public	signature:() const
getNumberOfMetaDExCancels	dbtxlist.cpp	/^int CMPTxList::getNumberOfMetaDExCancels(const uint256 txid)$/;"	f	line:240	class:CMPTxList	signature:(const uint256 txid)
getNumberOfSubRecords	dbtxlist.cpp	/^int CMPTxList::getNumberOfSubRecords(const uint256& txid)$/;"	f	line:223	class:CMPTxList	signature:(const uint256& txid)
getOfferAmountOriginal	dex.h	/^    int64_t getOfferAmountOriginal() const { return offer_amount_original; }$/;"	f	line:136	class:CMPAccept	access:public	signature:() const
getOfferAmountOriginal	dex.h	/^    int64_t getOfferAmountOriginal() const { return offer_amount_original; }$/;"	f	line:65	class:CMPOffer	access:public	signature:() const
getPayload	tx.h	/^    std::string getPayload() const { return HexStr(pkt, pkt + pkt_size); }$/;"	f	line:190	class:CMPTransaction	access:public	signature:() const
getPayloadSize	test/parsing_b_tests.cpp	/^static size_t getPayloadSize(unsigned int nPackets)$/;"	f	line:74	file:	signature:(unsigned int nPackets)
getPayloadSize	tx.h	/^    int getPayloadSize() const { return pkt_size; }$/;"	f	line:208	class:CMPTransaction	access:public	signature:() const
getPreviousId	tx.h	/^    uint32_t getPreviousId() const { return prev_prop_id; }$/;"	f	line:194	class:CMPTransaction	access:public	signature:() const
getProperty	dex.h	/^    uint32_t getProperty() const { return property; }$/;"	f	line:142	class:CMPAccept	access:public	signature:() const
getProperty	dex.h	/^    uint32_t getProperty() const { return property; }$/;"	f	line:60	class:CMPOffer	access:public	signature:() const
getProperty	mdex.h	/^    uint32_t getProperty() const { return property; }$/;"	f	line:54	class:CMPMetaDEx	access:public	signature:() const
getProperty	tx.h	/^    unsigned int getProperty() const { return property; }$/;"	f	line:184	class:CMPTransaction	access:public	signature:() const
getPropertyId	sp.h	/^    uint32_t getPropertyId() const { return propertyId; }$/;"	f	line:50	class:CMPCrowd	access:public	signature:() const
getPropertyName	sp.cpp	/^std::string mastercore::getPropertyName(uint32_t propertyId)$/;"	f	line:133	class:mastercore	signature:(uint32_t propertyId)
getPropertyType	tx.h	/^    unsigned short getPropertyType() const { return prop_type; }$/;"	f	line:186	class:CMPTransaction	access:public	signature:() const
getPurchaseDetails	dbtxlist.cpp	/^bool CMPTxList::getPurchaseDetails(const uint256 txid, int purchaseNumber, std::string* buyer, std::string* seller, uint64_t* vout, uint64_t* propertyId, uint64_t* nValue)$/;"	f	line:258	class:CMPTxList	signature:(const uint256 txid, int purchaseNumber, std::string* buyer, std::string* seller, uint64_t* vout, uint64_t* propertyId, uint64_t* nValue)
getReceiver	tx.h	/^    std::string getReceiver() const { return receiver; }$/;"	f	line:189	class:CMPTransaction	access:public	signature:() const
getRecipients	dbstolist.cpp	/^void CMPSTOList::getRecipients(const uint256 txid, std::string filterAddress, UniValue* recipientArray, uint64_t* total, uint64_t* numRecipients)$/;"	f	line:42	class:CMPSTOList	signature:(const uint256 txid, std::string filterAddress, UniValue* recipientArray, uint64_t* total, uint64_t* numRecipients)
getSP	dbspinfo.cpp	/^bool CMPSPInfo::getSP(uint32_t propertyId, Entry& info) const$/;"	f	line:221	class:CMPSPInfo	signature:(uint32_t propertyId, Entry& info) const
getSPCategory	tx.h	/^    std::string getSPCategory() const { return category; }$/;"	f	line:195	class:CMPTransaction	access:public	signature:() const
getSPData	tx.h	/^    std::string getSPData() const { return data; }$/;"	f	line:199	class:CMPTransaction	access:public	signature:() const
getSPName	tx.h	/^    std::string getSPName() const { return name; }$/;"	f	line:197	class:CMPTransaction	access:public	signature:() const
getSPSubCategory	tx.h	/^    std::string getSPSubCategory() const { return subcategory; }$/;"	f	line:196	class:CMPTransaction	access:public	signature:() const
getSPUrl	tx.h	/^    std::string getSPUrl() const { return url; }$/;"	f	line:198	class:CMPTransaction	access:public	signature:() const
getSendAllDetails	dbtxlist.cpp	/^bool CMPTxList::getSendAllDetails(const uint256& txid, int subSend, uint32_t& propertyId, int64_t& amount)$/;"	f	line:283	class:CMPTxList	signature:(const uint256& txid, int subSend, uint32_t& propertyId, int64_t& amount)
getSender	tx.h	/^    std::string getSender() const { return sender; }$/;"	f	line:188	class:CMPTransaction	access:public	signature:() const
getSubaction	dex.h	/^    uint8_t getSubaction() const { return subaction; }$/;"	f	line:63	class:CMPOffer	access:public	signature:() const
getTX	dbtxlist.cpp	/^bool CMPTxList::getTX(const uint256 &txid, std::string& value)$/;"	f	line:387	class:CMPTxList	signature:(const uint256 &txid, std::string& value)
getTally	omnicore.cpp	/^CMPTally* mastercore::getTally(const std::string& address)$/;"	f	line:261	class:mastercore	signature:(const std::string& address)
getTokenLabel	omnicore.cpp	/^std::string mastercore::getTokenLabel(uint32_t propertyId)$/;"	f	line:425	class:mastercore	signature:(uint32_t propertyId)
getTotalTokens	omnicore.cpp	/^int64_t mastercore::getTotalTokens(uint32_t propertyId, int64_t* n_owners_total)$/;"	f	line:442	class:mastercore	signature:(uint32_t propertyId, int64_t* n_owners_total)
getTradeReturnType	mdex.cpp	/^static const std::string getTradeReturnType(MatchReturnType ret)$/;"	f	line:76	file:	signature:(MatchReturnType ret)
getTradesForAddress	dbtradelist.cpp	/^void CMPTradeList::getTradesForAddress(const std::string& address, std::vector<uint256>& vecTransactions, uint32_t propertyIdFilter)$/;"	f	line:205	class:CMPTradeList	signature:(const std::string& address, std::vector<uint256>& vecTransactions, uint32_t propertyIdFilter)
getTradesForPair	dbtradelist.cpp	/^void CMPTradeList::getTradesForPair(uint32_t propertyIdSideA, uint32_t propertyIdSideB, UniValue& responseArray, uint64_t count)$/;"	f	line:245	class:CMPTradeList	signature:(uint32_t propertyIdSideA, uint32_t propertyIdSideB, UniValue& responseArray, uint64_t count)
getType	tx.h	/^    unsigned int getType() const { return type; }$/;"	f	line:182	class:CMPTransaction	access:public	signature:() const
getTypeString	tx.h	/^    std::string getTypeString() const { return strTransactionType(getType()); }$/;"	f	line:183	class:CMPTransaction	access:public	signature:() const
getUserCreated	sp.h	/^    int64_t getUserCreated() const { return u_created; }$/;"	f	line:58	class:CMPCrowd	access:public	signature:() const
getValidMPTX	dbtxlist.cpp	/^bool CMPTxList::getValidMPTX(const uint256& txid, int* block, unsigned int* type, uint64_t* nAmended)$/;"	f	line:406	class:CMPTxList	signature:(const uint256& txid, int* block, unsigned int* type, uint64_t* nAmended)
getVersion	tx.h	/^    unsigned short getVersion() const { return version; }$/;"	f	line:185	class:CMPTransaction	access:public	signature:() const
getWalletAddresses	rpc.cpp	/^static std::set<std::string> getWalletAddresses(bool fIncludeWatchOnly)$/;"	f	line:896	file:	signature:(bool fIncludeWatchOnly)
getWatermark	dbspinfo.cpp	/^bool CMPSPInfo::getWatermark(uint256& watermark) const$/;"	f	line:406	class:CMPSPInfo	signature:(uint256& watermark) const
get_Indexes	mdex.cpp	/^md_Set* mastercore::get_Indexes(md_PricesMap* p, rational_t price)$/;"	f	line:57	class:mastercore	signature:(md_PricesMap* p, rational_t price)
get_Prices	mdex.cpp	/^md_PricesMap* mastercore::get_Prices(uint32_t prop)$/;"	f	line:48	class:mastercore	signature:(uint32_t prop)
get_mblen	rpcmbstring.cpp	/^int get_mblen(const char* s, size_t n)$/;"	f	line:47	namespace:mastercore::mbstring	signature:(const char* s, size_t n)
get_mblen	rpcmbstring.cpp	/^int get_mblen(unsigned char c)$/;"	f	line:30	namespace:mastercore::mbstring	signature:(unsigned char c)
getmoney_testnet	omnicore.cpp	/^static const std::string getmoney_testnet = "moneyqMan7uh8FqdCA2BV5yZ8qVrc9ikLP";$/;"	v	line:107	file:
global_balance_money	omnicore.cpp	/^std::map<uint32_t, int64_t> global_balance_money;$/;"	v	line:165
global_balance_reserved	omnicore.cpp	/^std::map<uint32_t, int64_t> global_balance_reserved;$/;"	v	line:167
global_wallet_property_list	omnicore.cpp	/^std::set<uint32_t> global_wallet_property_list;$/;"	v	line:169
hasSP	dbspinfo.cpp	/^bool CMPSPInfo::hasSP(uint32_t propertyId) const$/;"	f	line:258	class:CMPSPInfo	signature:(uint32_t propertyId) const
historicalData	dbspinfo.h	/^        std::map<uint256, std::vector<int64_t> > historicalData;$/;"	m	line:85	struct:CMPSPInfo::Entry	access:public
i_created	sp.h	/^    int64_t i_created;$/;"	m	line:38	class:CMPCrowd	access:private
idx	mdex.h	/^    unsigned int idx; \/\/ index within block$/;"	m	line:42	class:CMPMetaDEx	access:private
implied_omni	dbspinfo.h	/^    Entry implied_omni;$/;"	m	line:125	class:CMPSPInfo	access:private
implied_tomni	dbspinfo.h	/^    Entry implied_tomni;$/;"	m	line:126	class:CMPSPInfo	access:private
incTokensIssuerCreated	sp.h	/^    void incTokensIssuerCreated(int64_t amount) { i_created += amount; }$/;"	f	line:56	class:CMPCrowd	access:public	signature:(int64_t amount)
incTokensUserCreated	sp.h	/^    void incTokensUserCreated(int64_t amount) { u_created += amount; }$/;"	f	line:55	class:CMPCrowd	access:public	signature:(int64_t amount)
init	dbspinfo.cpp	/^void CMPSPInfo::init(uint32_t nextSPID, uint32_t nextTestSPID)$/;"	f	line:92	class:CMPSPInfo	signature:(uint32_t nextSPID, uint32_t nextTestSPID)
init	tally.cpp	/^uint32_t CMPTally::init()$/;"	f	line:22	class:CMPTally	signature:()
input_globals_state_string	persistence.cpp	/^static int input_globals_state_string(const std::string& s)$/;"	f	line:309	file:	signature:(const std::string& s)
input_mp_accepts_string	persistence.cpp	/^static int input_mp_accepts_string(const std::string& s)$/;"	f	line:275	file:	signature:(const std::string& s)
input_mp_crowdsale_string	persistence.cpp	/^static int input_mp_crowdsale_string(const std::string& s)$/;"	f	line:328	file:	signature:(const std::string& s)
input_mp_mdexorder_string	persistence.cpp	/^static int input_mp_mdexorder_string(const std::string& s)$/;"	f	line:375	file:	signature:(const std::string& s)
input_mp_offers_string	persistence.cpp	/^static int input_mp_offers_string(const std::string& s)$/;"	f	line:242	file:	signature:(const std::string& s)
input_msc_balances_string	persistence.cpp	/^static int input_msc_balances_string(const std::string& s)$/;"	f	line:195	file:	signature:(const std::string& s)
insertDatabase	sp.cpp	/^void CMPCrowd::insertDatabase(const uint256& txHash, const std::vector<int64_t>& txData)$/;"	f	line:41	class:CMPCrowd	signature:(const uint256& txHash, const std::vector<int64_t>& txData)
int128_t	mdex.cpp	/^typedef boost::multiprecision::checked_int128_t int128_t;$/;"	t	line:36	file:
intToClass	tx.cpp	/^static std::string intToClass(int encodingClass)$/;"	f	line:83	file:	signature:(int encodingClass)
interpretPacket	tx.cpp	/^int CMPTransaction::interpretPacket()$/;"	f	line:858	class:CMPTransaction	signature:()
interpret_AcceptOfferBTC	tx.cpp	/^bool CMPTransaction::interpret_AcceptOfferBTC()$/;"	f	line:323	class:CMPTransaction	signature:()
interpret_Activation	tx.cpp	/^bool CMPTransaction::interpret_Activation()$/;"	f	line:799	class:CMPTransaction	signature:()
interpret_Alert	tx.cpp	/^bool CMPTransaction::interpret_Alert()$/;"	f	line:821	class:CMPTransaction	signature:()
interpret_ChangeIssuer	tx.cpp	/^bool CMPTransaction::interpret_ChangeIssuer()$/;"	f	line:657	class:CMPTransaction	signature:()
interpret_CloseCrowdsale	tx.cpp	/^bool CMPTransaction::interpret_CloseCrowdsale()$/;"	f	line:553	class:CMPTransaction	signature:()
interpret_CreatePropertyFixed	tx.cpp	/^bool CMPTransaction::interpret_CreatePropertyFixed()$/;"	f	line:445	class:CMPTransaction	signature:()
interpret_CreatePropertyManaged	tx.cpp	/^bool CMPTransaction::interpret_CreatePropertyManaged()$/;"	f	line:569	class:CMPTransaction	signature:()
interpret_CreatePropertyVariable	tx.cpp	/^bool CMPTransaction::interpret_CreatePropertyVariable()$/;"	f	line:493	class:CMPTransaction	signature:()
interpret_Deactivation	tx.cpp	/^bool CMPTransaction::interpret_Deactivation()$/;"	f	line:783	class:CMPTransaction	signature:()
interpret_DisableFreezing	tx.cpp	/^bool CMPTransaction::interpret_DisableFreezing()$/;"	f	line:689	class:CMPTransaction	signature:()
interpret_EnableFreezing	tx.cpp	/^bool CMPTransaction::interpret_EnableFreezing()$/;"	f	line:673	class:CMPTransaction	signature:()
interpret_FreezeTokens	tx.cpp	/^bool CMPTransaction::interpret_FreezeTokens()$/;"	f	line:705	class:CMPTransaction	signature:()
interpret_GrantTokens	tx.cpp	/^bool CMPTransaction::interpret_GrantTokens()$/;"	f	line:612	class:CMPTransaction	signature:()
interpret_MetaDExCancelEcosystem	tx.cpp	/^bool CMPTransaction::interpret_MetaDExCancelEcosystem()$/;"	f	line:423	class:CMPTransaction	signature:()
interpret_MetaDExCancelPair	tx.cpp	/^bool CMPTransaction::interpret_MetaDExCancelPair()$/;"	f	line:399	class:CMPTransaction	signature:()
interpret_MetaDExCancelPrice	tx.cpp	/^bool CMPTransaction::interpret_MetaDExCancelPrice()$/;"	f	line:371	class:CMPTransaction	signature:()
interpret_MetaDExTrade	tx.cpp	/^bool CMPTransaction::interpret_MetaDExTrade()$/;"	f	line:343	class:CMPTransaction	signature:()
interpret_RevokeTokens	tx.cpp	/^bool CMPTransaction::interpret_RevokeTokens()$/;"	f	line:637	class:CMPTransaction	signature:()
interpret_SendAll	tx.cpp	/^bool CMPTransaction::interpret_SendAll()$/;"	f	line:266	class:CMPTransaction	signature:()
interpret_SendToOwners	tx.cpp	/^bool CMPTransaction::interpret_SendToOwners()$/;"	f	line:238	class:CMPTransaction	signature:()
interpret_SimpleSend	tx.cpp	/^bool CMPTransaction::interpret_SimpleSend()$/;"	f	line:213	class:CMPTransaction	signature:()
interpret_TradeOffer	tx.cpp	/^bool CMPTransaction::interpret_TradeOffer()$/;"	f	line:288	class:CMPTransaction	signature:()
interpret_Transaction	tx.cpp	/^bool CMPTransaction::interpret_Transaction()$/;"	f	line:107	class:CMPTransaction	signature:()
interpret_TransactionType	tx.cpp	/^bool CMPTransaction::interpret_TransactionType()$/;"	f	line:189	class:CMPTransaction	signature:()
interpret_UnfreezeTokens	tx.cpp	/^bool CMPTransaction::interpret_UnfreezeTokens()$/;"	f	line:744	class:CMPTransaction	signature:()
inversePrice	mdex.cpp	/^rational_t CMPMetaDEx::inversePrice() const$/;"	f	line:398	class:CMPMetaDEx	signature:() const
isAddressFrozen	omnicore.cpp	/^bool mastercore::isAddressFrozen(const std::string& address, uint32_t propertyId)$/;"	f	line:417	class:mastercore	signature:(const std::string& address, uint32_t propertyId)
isBigEndian	parsing.cpp	/^static bool isBigEndian()$/;"	f	line:30	file:	signature:()
isCrowdsaleActive	sp.cpp	/^bool mastercore::isCrowdsaleActive(uint32_t propertyId)$/;"	f	line:140	class:mastercore	signature:(uint32_t propertyId)
isCrowdsalePurchase	sp.cpp	/^bool mastercore::isCrowdsalePurchase(const uint256& txid, const std::string& address, int64_t* propertyId, int64_t* userTokens, int64_t* issuerTokens)$/;"	f	line:291	class:mastercore	signature:(const uint256& txid, const std::string& address, int64_t* propertyId, int64_t* userTokens, int64_t* issuerTokens)
isDivisible	dbspinfo.cpp	/^bool CMPSPInfo::Entry::isDivisible() const$/;"	f	line:31	class:CMPSPInfo::Entry	signature:() const
isFreezingEnabled	omnicore.cpp	/^bool mastercore::isFreezingEnabled(uint32_t propertyId, int block)$/;"	f	line:391	class:mastercore	signature:(uint32_t propertyId, int block)
isMPinBlockRange	dbtxlist.cpp	/^bool CMPTxList::isMPinBlockRange(int starting_block, int ending_block, bool bDeleteFound)$/;"	f	line:747	class:CMPTxList	signature:(int starting_block, int ending_block, bool bDeleteFound)
isMainEcosystemProperty	omnicore.cpp	/^bool mastercore::isMainEcosystemProperty(uint32_t propertyId)$/;"	f	line:331	class:mastercore	signature:(uint32_t propertyId)
isNonMainNet	utilsbitcoin.cpp	/^bool isNonMainNet()$/;"	f	line:73	namespace:mastercore	signature:()
isOverflow	tally.cpp	/^static bool isOverflow(int64_t a, int64_t b)$/;"	f	line:54	file:	signature:(int64_t a, int64_t b)
isOverrun	tx.cpp	/^bool CMPTransaction::isOverrun(const char* p)$/;"	f	line:98	class:CMPTransaction	signature:(const char* p)
isPropertyDivisible	sp.cpp	/^bool mastercore::isPropertyDivisible(uint32_t propertyId)$/;"	f	line:123	class:mastercore	signature:(uint32_t propertyId)
isRpcOnly	tx.h	/^    bool isRpcOnly() const { return rpcOnly; }$/;"	f	line:203	class:CMPTransaction	access:public	signature:() const
isTestEcosystemProperty	omnicore.cpp	/^bool mastercore::isTestEcosystemProperty(uint32_t propertyId)$/;"	f	line:324	class:mastercore	signature:(uint32_t propertyId)
is_state_prefix	persistence.cpp	/^static bool is_state_prefix(std::string const &str)$/;"	f	line:66	file:	signature:(std::string const &str)
issuer	dbspinfo.h	/^        std::string issuer;$/;"	m	line:51	struct:CMPSPInfo::Entry	access:public
iteroptions	dbbase.h	/^    leveldb::ReadOptions iteroptions;$/;"	m	line:17	class:CDBBase	access:private
legacy	dex.cpp	/^namespace legacy$/;"	n	line:387	namespace:mastercore	file:
legacy	dex.cpp	/^namespace legacy$/;"	n	line:91	namespace:mastercore	file:
locker	test/lock_tests.cpp	/^namespace locker$/;"	n	line:15	file:
locker::cs_number	test/lock_tests.cpp	/^    CCriticalSection cs_number;$/;"	m	line:17	namespace:locker	file:
logicHelper_CrowdsaleParticipation	tx.cpp	/^int CMPTransaction::logicHelper_CrowdsaleParticipation()$/;"	f	line:951	class:CMPTransaction	signature:()
logicMath_AcceptOffer_BTC	tx.cpp	/^int CMPTransaction::logicMath_AcceptOffer_BTC()$/;"	f	line:1357	class:CMPTransaction	signature:()
logicMath_Activation	tx.cpp	/^int CMPTransaction::logicMath_Activation()$/;"	f	line:2380	class:CMPTransaction	signature:()
logicMath_Alert	tx.cpp	/^int CMPTransaction::logicMath_Alert()$/;"	f	line:2415	class:CMPTransaction	signature:()
logicMath_ChangeIssuer	tx.cpp	/^int CMPTransaction::logicMath_ChangeIssuer()$/;"	f	line:2044	class:CMPTransaction	signature:()
logicMath_CloseCrowdsale	tx.cpp	/^int CMPTransaction::logicMath_CloseCrowdsale()$/;"	f	line:1756	class:CMPTransaction	signature:()
logicMath_CreatePropertyFixed	tx.cpp	/^int CMPTransaction::logicMath_CreatePropertyFixed()$/;"	f	line:1584	class:CMPTransaction	signature:()
logicMath_CreatePropertyManaged	tx.cpp	/^int CMPTransaction::logicMath_CreatePropertyManaged()$/;"	f	line:1823	class:CMPTransaction	signature:()
logicMath_CreatePropertyVariable	tx.cpp	/^int CMPTransaction::logicMath_CreatePropertyVariable()$/;"	f	line:1654	class:CMPTransaction	signature:()
logicMath_Deactivation	tx.cpp	/^int CMPTransaction::logicMath_Deactivation()$/;"	f	line:2337	class:CMPTransaction	signature:()
logicMath_DisableFreezing	tx.cpp	/^int CMPTransaction::logicMath_DisableFreezing()$/;"	f	line:2168	class:CMPTransaction	signature:()
logicMath_EnableFreezing	tx.cpp	/^int CMPTransaction::logicMath_EnableFreezing()$/;"	f	line:2107	class:CMPTransaction	signature:()
logicMath_FreezeTokens	tx.cpp	/^int CMPTransaction::logicMath_FreezeTokens()$/;"	f	line:2221	class:CMPTransaction	signature:()
logicMath_GrantTokens	tx.cpp	/^int CMPTransaction::logicMath_GrantTokens()$/;"	f	line:1887	class:CMPTransaction	signature:()
logicMath_MetaDExCancelEcosystem	tx.cpp	/^int CMPTransaction::logicMath_MetaDExCancelEcosystem()$/;"	f	line:1561	class:CMPTransaction	signature:()
logicMath_MetaDExCancelPair	tx.cpp	/^int CMPTransaction::logicMath_MetaDExCancelPair()$/;"	f	line:1515	class:CMPTransaction	signature:()
logicMath_MetaDExCancelPrice	tx.cpp	/^int CMPTransaction::logicMath_MetaDExCancelPrice()$/;"	f	line:1459	class:CMPTransaction	signature:()
logicMath_MetaDExTrade	tx.cpp	/^int CMPTransaction::logicMath_MetaDExTrade()$/;"	f	line:1383	class:CMPTransaction	signature:()
logicMath_RevokeTokens	tx.cpp	/^int CMPTransaction::logicMath_RevokeTokens()$/;"	f	line:1974	class:CMPTransaction	signature:()
logicMath_SendAll	tx.cpp	/^int CMPTransaction::logicMath_SendAll()$/;"	f	line:1203	class:CMPTransaction	signature:()
logicMath_SendToOwners	tx.cpp	/^int CMPTransaction::logicMath_SendToOwners()$/;"	f	line:1076	class:CMPTransaction	signature:()
logicMath_SimpleSend	tx.cpp	/^int CMPTransaction::logicMath_SimpleSend()$/;"	f	line:1030	class:CMPTransaction	signature:()
logicMath_TradeOffer	tx.cpp	/^int CMPTransaction::logicMath_TradeOffer()$/;"	f	line:1261	class:CMPTransaction	signature:()
logicMath_UnfreezeTokens	tx.cpp	/^int CMPTransaction::logicMath_UnfreezeTokens()$/;"	f	line:2279	class:CMPTransaction	signature:()
m_pblockFirst	omnicore.cpp	/^    const CBlockIndex* m_pblockFirst;$/;"	m	line:1363	class:ProgressReporter	file:	access:private
m_pblockLast	omnicore.cpp	/^    const CBlockIndex* m_pblockLast;$/;"	m	line:1364	class:ProgressReporter	file:	access:private
m_timeStart	omnicore.cpp	/^    const int64_t m_timeStart;$/;"	m	line:1365	class:ProgressReporter	file:	access:private
mainConsensusParams	rules.cpp	/^static CMainConsensusParams mainConsensusParams;$/;"	m	line:286	namespace:mastercore	file:
manual	dbspinfo.h	/^        bool manual;$/;"	m	line:79	struct:CMPSPInfo::Entry	access:public
mastercore	activation.cpp	/^namespace mastercore$/;"	n	line:24	file:
mastercore	activation.h	/^namespace mastercore$/;"	n	line:8
mastercore	consensushash.cpp	/^namespace mastercore$/;"	n	line:26	file:
mastercore	consensushash.h	/^namespace mastercore$/;"	n	line:6
mastercore	convert.cpp	/^namespace mastercore$/;"	n	line:6	file:
mastercore	convert.h	/^namespace mastercore$/;"	n	line:6
mastercore	dbfees.h	/^namespace mastercore$/;"	n	line:79
mastercore	dbstolist.h	/^namespace mastercore$/;"	n	line:39
mastercore	dbtradelist.h	/^namespace mastercore$/;"	n	line:37
mastercore	dbtransaction.h	/^namespace mastercore$/;"	n	line:37
mastercore	dbtxlist.h	/^namespace mastercore$/;"	n	line:59
mastercore	dex.cpp	/^namespace mastercore$/;"	n	line:35	file:
mastercore	dex.h	/^namespace mastercore$/;"	n	line:220
mastercore	mdex.h	/^namespace mastercore$/;"	n	line:105
mastercore	notifications.cpp	/^namespace mastercore$/;"	n	line:19	file:
mastercore	notifications.h	/^namespace mastercore$/;"	n	line:14
mastercore	omnicore.h	/^namespace mastercore$/;"	n	line:167
mastercore	parse_string.cpp	/^namespace mastercore$/;"	n	line:10	file:
mastercore	parse_string.h	/^namespace mastercore$/;"	n	line:7
mastercore	pending.cpp	/^namespace mastercore$/;"	n	line:18	file:
mastercore	pending.h	/^namespace mastercore$/;"	n	line:13
mastercore	rpcmbstring.cpp	/^namespace mastercore$/;"	n	line:13	file:
mastercore	rpcmbstring.h	/^namespace mastercore$/;"	n	line:7
mastercore	rules.cpp	/^namespace mastercore$/;"	n	line:30	file:
mastercore	rules.h	/^namespace mastercore$/;"	n	line:10
mastercore	sp.h	/^namespace mastercore$/;"	n	line:69
mastercore	sto.cpp	/^namespace mastercore$/;"	n	line:18	file:
mastercore	sto.h	/^namespace mastercore$/;"	n	line:9
mastercore	test/checkpoint_tests.cpp	/^namespace mastercore$/;"	n	line:19	file:
mastercore	test/dex_purchase_tests.cpp	/^namespace mastercore {$/;"	n	line:10	file:
mastercore	test/mbstring_tests.cpp	/^namespace mastercore {$/;"	n	line:10	file:
mastercore	uint256_extensions.h	/^namespace mastercore {$/;"	n	line:16
mastercore	utilsbitcoin.cpp	/^namespace mastercore$/;"	n	line:15	file:
mastercore	utilsbitcoin.h	/^namespace mastercore$/;"	n	line:9
mastercore	walletcache.cpp	/^namespace mastercore$/;"	n	line:31	file:
mastercore	walletcache.h	/^namespace mastercore$/;"	n	line:8
mastercore	walletfetchtxs.cpp	/^namespace mastercore$/;"	n	line:36	file:
mastercore	walletfetchtxs.h	/^namespace mastercore$/;"	n	line:9
mastercore	walletutils.cpp	/^namespace mastercore$/;"	n	line:30	file:
mastercore	walletutils.h	/^namespace mastercore$/;"	n	line:12
mastercore::AcceptMap	dex.h	/^typedef std::map<std::string, CMPAccept> AcceptMap;$/;"	t	line:223	namespace:mastercore
mastercore::ActivateFeature	rules.cpp	/^bool ActivateFeature(uint16_t featureId, int activationBlock, uint32_t minClientVersion, int transactionBlock)$/;"	f	line:392	namespace:mastercore	signature:(uint16_t featureId, int activationBlock, uint32_t minClientVersion, int transactionBlock)
mastercore::AddAlert	notifications.cpp	/^void AddAlert(const std::string& sender, uint16_t alertType, uint32_t alertExpiry, const std::string& alertMessage)$/;"	f	line:60	namespace:mastercore	signature:(const std::string& sender, uint16_t alertType, uint32_t alertExpiry, const std::string& alertMessage)
mastercore::AddPendingActivation	activation.cpp	/^void AddPendingActivation(uint16_t featureId, int activationBlock, uint32_t minClientVersion, const std::string& featureName)$/;"	f	line:64	namespace:mastercore	signature:(uint16_t featureId, int activationBlock, uint32_t minClientVersion, const std::string& featureName)
mastercore::AddressToPubKey	walletutils.cpp	/^bool AddressToPubKey(const std::string& key, CPubKey& pubKey)$/;"	f	line:35	namespace:mastercore	signature:(const std::string& key, CPubKey& pubKey)
mastercore::AlertData	notifications.h	/^struct AlertData$/;"	s	line:18	namespace:mastercore
mastercore::AlertData::alert_expiry	notifications.h	/^    uint32_t alert_expiry;$/;"	m	line:25	struct:mastercore::AlertData	access:public
mastercore::AlertData::alert_message	notifications.h	/^    std::string alert_message;$/;"	m	line:27	struct:mastercore::AlertData	access:public
mastercore::AlertData::alert_sender	notifications.h	/^    std::string alert_sender;$/;"	m	line:21	struct:mastercore::AlertData	access:public
mastercore::AlertData::alert_type	notifications.h	/^    uint16_t alert_type;$/;"	m	line:23	struct:mastercore::AlertData	access:public
mastercore::CConsensusParams	rules.h	/^class CConsensusParams$/;"	c	line:72	namespace:mastercore
mastercore::CConsensusParams::CConsensusParams	rules.h	/^    CConsensusParams() {}$/;"	f	line:148	class:mastercore::CConsensusParams	access:protected	signature:()
mastercore::CConsensusParams::DEXMATH_FEATURE_BLOCK	rules.h	/^    int DEXMATH_FEATURE_BLOCK;$/;"	m	line:127	class:mastercore::CConsensusParams	access:public
mastercore::CConsensusParams::FEES_FEATURE_BLOCK	rules.h	/^    int FEES_FEATURE_BLOCK;$/;"	m	line:133	class:mastercore::CConsensusParams	access:public
mastercore::CConsensusParams::FREEZENOTICE_FEATURE_BLOCK	rules.h	/^    int FREEZENOTICE_FEATURE_BLOCK;$/;"	m	line:135	class:mastercore::CConsensusParams	access:public
mastercore::CConsensusParams::GENESIS_BLOCK	rules.h	/^    int GENESIS_BLOCK;$/;"	m	line:82	class:mastercore::CConsensusParams	access:public
mastercore::CConsensusParams::GRANTEFFECTS_FEATURE_BLOCK	rules.h	/^    int GRANTEFFECTS_FEATURE_BLOCK;$/;"	m	line:125	class:mastercore::CConsensusParams	access:public
mastercore::CConsensusParams::GetCheckpoints	rules.cpp	/^std::vector<ConsensusCheckpoint> CConsensusParams::GetCheckpoints() const$/;"	f	line:87	class:mastercore::CConsensusParams	signature:() const
mastercore::CConsensusParams::GetRestrictions	rules.cpp	/^std::vector<TransactionRestriction> CConsensusParams::GetRestrictions() const$/;"	f	line:35	class:mastercore::CConsensusParams	signature:() const
mastercore::CConsensusParams::LAST_EXODUS_BLOCK	rules.h	/^    int LAST_EXODUS_BLOCK;$/;"	m	line:84	class:mastercore::CConsensusParams	access:public
mastercore::CConsensusParams::MAX_ACTIVATION_BLOCKS	rules.h	/^    int MAX_ACTIVATION_BLOCKS;$/;"	m	line:89	class:mastercore::CConsensusParams	access:public
mastercore::CConsensusParams::MIN_ACTIVATION_BLOCKS	rules.h	/^    int MIN_ACTIVATION_BLOCKS;$/;"	m	line:87	class:mastercore::CConsensusParams	access:public
mastercore::CConsensusParams::MSC_ALERT_BLOCK	rules.h	/^    int MSC_ALERT_BLOCK;$/;"	m	line:104	class:mastercore::CConsensusParams	access:public
mastercore::CConsensusParams::MSC_BET_BLOCK	rules.h	/^    int MSC_BET_BLOCK;$/;"	m	line:120	class:mastercore::CConsensusParams	access:public
mastercore::CConsensusParams::MSC_DEX_BLOCK	rules.h	/^    int MSC_DEX_BLOCK;$/;"	m	line:108	class:mastercore::CConsensusParams	access:public
mastercore::CConsensusParams::MSC_MANUALSP_BLOCK	rules.h	/^    int MSC_MANUALSP_BLOCK;$/;"	m	line:112	class:mastercore::CConsensusParams	access:public
mastercore::CConsensusParams::MSC_METADEX_BLOCK	rules.h	/^    int MSC_METADEX_BLOCK;$/;"	m	line:116	class:mastercore::CConsensusParams	access:public
mastercore::CConsensusParams::MSC_SEND_ALL_BLOCK	rules.h	/^    int MSC_SEND_ALL_BLOCK;$/;"	m	line:118	class:mastercore::CConsensusParams	access:public
mastercore::CConsensusParams::MSC_SEND_BLOCK	rules.h	/^    int MSC_SEND_BLOCK;$/;"	m	line:106	class:mastercore::CConsensusParams	access:public
mastercore::CConsensusParams::MSC_SP_BLOCK	rules.h	/^    int MSC_SP_BLOCK;$/;"	m	line:110	class:mastercore::CConsensusParams	access:public
mastercore::CConsensusParams::MSC_STOV1_BLOCK	rules.h	/^    int MSC_STOV1_BLOCK;$/;"	m	line:122	class:mastercore::CConsensusParams	access:public
mastercore::CConsensusParams::MSC_STO_BLOCK	rules.h	/^    int MSC_STO_BLOCK;$/;"	m	line:114	class:mastercore::CConsensusParams	access:public
mastercore::CConsensusParams::MULTISIG_BLOCK	rules.h	/^    int MULTISIG_BLOCK;$/;"	m	line:99	class:mastercore::CConsensusParams	access:public
mastercore::CConsensusParams::NULLDATA_BLOCK	rules.h	/^    int NULLDATA_BLOCK;$/;"	m	line:101	class:mastercore::CConsensusParams	access:public
mastercore::CConsensusParams::OMNI_FREEZE_WAIT_PERIOD	rules.h	/^    int OMNI_FREEZE_WAIT_PERIOD;$/;"	m	line:92	class:mastercore::CConsensusParams	access:public
mastercore::CConsensusParams::PUBKEYHASH_BLOCK	rules.h	/^    int PUBKEYHASH_BLOCK;$/;"	m	line:95	class:mastercore::CConsensusParams	access:public
mastercore::CConsensusParams::SCRIPTHASH_BLOCK	rules.h	/^    int SCRIPTHASH_BLOCK;$/;"	m	line:97	class:mastercore::CConsensusParams	access:public
mastercore::CConsensusParams::SPCROWDCROSSOVER_FEATURE_BLOCK	rules.h	/^    int SPCROWDCROSSOVER_FEATURE_BLOCK;$/;"	m	line:129	class:mastercore::CConsensusParams	access:public
mastercore::CConsensusParams::TRADEALLPAIRS_FEATURE_BLOCK	rules.h	/^    int TRADEALLPAIRS_FEATURE_BLOCK;$/;"	m	line:131	class:mastercore::CConsensusParams	access:public
mastercore::CConsensusParams::exodusBonusPerWeek	rules.h	/^    double exodusBonusPerWeek;$/;"	m	line:76	class:mastercore::CConsensusParams	access:public
mastercore::CConsensusParams::exodusDeadline	rules.h	/^    unsigned int exodusDeadline;$/;"	m	line:78	class:mastercore::CConsensusParams	access:public
mastercore::CConsensusParams::exodusReward	rules.h	/^    int64_t exodusReward;$/;"	m	line:80	class:mastercore::CConsensusParams	access:public
mastercore::CConsensusParams::~CConsensusParams	rules.h	/^    virtual ~CConsensusParams() {}$/;"	f	line:144	class:mastercore::CConsensusParams	access:public	signature:()
mastercore::CMainConsensusParams	rules.h	/^class CMainConsensusParams: public CConsensusParams$/;"	c	line:153	namespace:mastercore	inherits:CConsensusParams
mastercore::CMainConsensusParams::CMainConsensusParams	rules.cpp	/^CMainConsensusParams::CMainConsensusParams()$/;"	f	line:165	class:mastercore::CMainConsensusParams	signature:()
mastercore::CMainConsensusParams::GetCheckpoints	rules.cpp	/^std::vector<ConsensusCheckpoint> CMainConsensusParams::GetCheckpoints() const$/;"	f	line:95	class:mastercore::CMainConsensusParams	signature:() const
mastercore::CMainConsensusParams::~CMainConsensusParams	rules.h	/^    virtual ~CMainConsensusParams() {}$/;"	f	line:159	class:mastercore::CMainConsensusParams	access:public	signature:()
mastercore::CRegTestConsensusParams	rules.h	/^class CRegTestConsensusParams: public CConsensusParams$/;"	c	line:178	namespace:mastercore	inherits:CConsensusParams
mastercore::CRegTestConsensusParams::CRegTestConsensusParams	rules.cpp	/^CRegTestConsensusParams::CRegTestConsensusParams()$/;"	f	line:247	class:mastercore::CRegTestConsensusParams	signature:()
mastercore::CRegTestConsensusParams::~CRegTestConsensusParams	rules.h	/^    virtual ~CRegTestConsensusParams() {}$/;"	f	line:184	class:mastercore::CRegTestConsensusParams	access:public	signature:()
mastercore::CTestNetConsensusParams	rules.h	/^class CTestNetConsensusParams: public CConsensusParams$/;"	c	line:167	namespace:mastercore	inherits:CConsensusParams
mastercore::CTestNetConsensusParams::CTestNetConsensusParams	rules.cpp	/^CTestNetConsensusParams::CTestNetConsensusParams()$/;"	f	line:206	class:mastercore::CTestNetConsensusParams	signature:()
mastercore::CTestNetConsensusParams::~CTestNetConsensusParams	rules.h	/^    virtual ~CTestNetConsensusParams() {}$/;"	f	line:173	class:mastercore::CTestNetConsensusParams	access:public	signature:()
mastercore::CheckActivationAuthorization	activation.cpp	/^bool CheckActivationAuthorization(const std::string& sender)$/;"	f	line:145	namespace:mastercore	signature:(const std::string& sender)
mastercore::CheckAlertAuthorization	notifications.cpp	/^bool CheckAlertAuthorization(const std::string& sender)$/;"	f	line:87	namespace:mastercore	signature:(const std::string& sender)
mastercore::CheckDeactivationAuthorization	activation.cpp	/^bool CheckDeactivationAuthorization(const std::string& sender)$/;"	f	line:216	namespace:mastercore	signature:(const std::string& sender)
mastercore::CheckExpiredAlerts	notifications.cpp	/^bool CheckExpiredAlerts(unsigned int curBlock, uint64_t curTime)$/;"	f	line:148	namespace:mastercore	signature:(unsigned int curBlock, uint64_t curTime)
mastercore::CheckFee	walletutils.cpp	/^bool CheckFee(const std::string& fromAddress, size_t nDataSize)$/;"	f	line:69	namespace:mastercore	signature:(const std::string& fromAddress, size_t nDataSize)
mastercore::CheckInput	walletutils.cpp	/^bool CheckInput(const CTxOut& txOut, int nHeight, CTxDestination& dest)$/;"	f	line:109	namespace:mastercore	signature:(const CTxOut& txOut, int nHeight, CTxDestination& dest)
mastercore::CheckLiveActivations	activation.cpp	/^void CheckLiveActivations(int blockHeight)$/;"	f	line:84	namespace:mastercore	signature:(int blockHeight)
mastercore::ClearActivations	activation.cpp	/^void ClearActivations()$/;"	f	line:129	namespace:mastercore	signature:()
mastercore::ClearAlerts	notifications.cpp	/^void ClearAlerts()$/;"	f	line:50	namespace:mastercore	signature:()
mastercore::ClearFreezeState	omnicore.cpp	/^void mastercore::ClearFreezeState()$/;"	f	line:338	class:mastercore	signature:()
mastercore::ConsensusCheckpoint	rules.h	/^struct ConsensusCheckpoint$/;"	s	line:59	namespace:mastercore
mastercore::ConsensusCheckpoint::blockHash	rules.h	/^    uint256 blockHash;$/;"	m	line:62	struct:mastercore::ConsensusCheckpoint	access:public
mastercore::ConsensusCheckpoint::blockHeight	rules.h	/^    int blockHeight;$/;"	m	line:61	struct:mastercore::ConsensusCheckpoint	access:public
mastercore::ConsensusCheckpoint::consensusHash	rules.h	/^    uint256 consensusHash;$/;"	m	line:63	struct:mastercore::ConsensusCheckpoint	access:public
mastercore::ConsensusParams	rules.cpp	/^CConsensusParams& ConsensusParams(const std::string& network)$/;"	f	line:295	namespace:mastercore	signature:(const std::string& network)
mastercore::ConsensusParams	rules.cpp	/^const CConsensusParams& ConsensusParams()$/;"	f	line:313	namespace:mastercore	signature:()
mastercore::ConvertTo256	uint256_extensions.h	/^inline arith_uint256 ConvertTo256(const NumberT& number)$/;"	f	line:36	namespace:mastercore	signature:(const NumberT& number)
mastercore::ConvertTo64	uint256_extensions.h	/^inline int64_t ConvertTo64(const arith_uint256& number)$/;"	f	line:45	namespace:mastercore	signature:(const arith_uint256& number)
mastercore::CrowdMap	sp.h	/^typedef std::map<std::string, CMPCrowd> CrowdMap;$/;"	t	line:71	namespace:mastercore
mastercore::DEx_acceptCreate	dex.cpp	/^int DEx_acceptCreate(const std::string& addressBuyer, const std::string& addressSeller, uint32_t propertyId, int64_t amountAccepted, int block, int64_t feePaid, uint64_t* nAmended)$/;"	f	line:269	namespace:mastercore	signature:(const std::string& addressBuyer, const std::string& addressSeller, uint32_t propertyId, int64_t amountAccepted, int block, int64_t feePaid, uint64_t* nAmended)
mastercore::DEx_acceptDestroy	dex.cpp	/^int DEx_acceptDestroy(const std::string& addressBuyer, const std::string& addressSeller, uint32_t propertyid, bool fForceErase)$/;"	f	line:334	namespace:mastercore	signature:(const std::string& addressBuyer, const std::string& addressSeller, uint32_t propertyid, bool fForceErase)
mastercore::DEx_acceptExists	dex.cpp	/^bool DEx_acceptExists(const std::string& addressSeller, uint32_t propertyId, const std::string& addressBuyer)$/;"	f	line:67	namespace:mastercore	signature:(const std::string& addressSeller, uint32_t propertyId, const std::string& addressBuyer)
mastercore::DEx_getAccept	dex.cpp	/^CMPAccept* DEx_getAccept(const std::string& addressSeller, uint32_t propertyId, const std::string& addressBuyer)$/;"	f	line:79	namespace:mastercore	signature:(const std::string& addressSeller, uint32_t propertyId, const std::string& addressBuyer)
mastercore::DEx_getOffer	dex.cpp	/^CMPOffer* DEx_getOffer(const std::string& addressSeller, uint32_t propertyId)$/;"	f	line:52	namespace:mastercore	signature:(const std::string& addressSeller, uint32_t propertyId)
mastercore::DEx_offerCreate	dex.cpp	/^int DEx_offerCreate(const std::string& addressSeller, uint32_t propertyId, int64_t amountOffered, int block, int64_t amountDesired, int64_t minAcceptFee, uint8_t paymentWindow, const uint256& txid, uint64_t* nAmended)$/;"	f	line:142	namespace:mastercore	signature:(const std::string& addressSeller, uint32_t propertyId, int64_t amountOffered, int block, int64_t amountDesired, int64_t minAcceptFee, uint8_t paymentWindow, const uint256& txid, uint64_t* nAmended)
mastercore::DEx_offerDestroy	dex.cpp	/^int DEx_offerDestroy(const std::string& addressSeller, uint32_t propertyId)$/;"	f	line:214	namespace:mastercore	signature:(const std::string& addressSeller, uint32_t propertyId)
mastercore::DEx_offerExists	dex.cpp	/^bool DEx_offerExists(const std::string& addressSeller, uint32_t propertyId)$/;"	f	line:40	namespace:mastercore	signature:(const std::string& addressSeller, uint32_t propertyId)
mastercore::DEx_offerUpdate	dex.cpp	/^int DEx_offerUpdate(const std::string& addressSeller, uint32_t propertyId, int64_t amountOffered, int block, int64_t amountDesired, int64_t minAcceptFee, uint8_t paymentWindow, const uint256& txid, uint64_t* nAmended)$/;"	f	line:245	namespace:mastercore	signature:(const std::string& addressSeller, uint32_t propertyId, int64_t amountOffered, int block, int64_t amountDesired, int64_t minAcceptFee, uint8_t paymentWindow, const uint256& txid, uint64_t* nAmended)
mastercore::DEx_payment	dex.cpp	/^int DEx_payment(const uint256& txid, unsigned int vout, const std::string& addressSeller, const std::string& addressBuyer, int64_t amountPaid, int block, uint64_t* nAmended)$/;"	f	line:442	namespace:mastercore	signature:(const uint256& txid, unsigned int vout, const std::string& addressSeller, const std::string& addressBuyer, int64_t amountPaid, int block, uint64_t* nAmended)
mastercore::DeactivateFeature	rules.cpp	/^bool DeactivateFeature(uint16_t featureId, int transactionBlock)$/;"	f	line:475	namespace:mastercore	signature:(uint16_t featureId, int transactionBlock)
mastercore::DeleteAlerts	notifications.cpp	/^void DeleteAlerts(const std::string& sender)$/;"	f	line:30	namespace:mastercore	signature:(const std::string& sender)
mastercore::DeletePendingActivation	activation.cpp	/^static void DeletePendingActivation(uint16_t featureId)$/;"	f	line:36	namespace:mastercore	signature:(uint16_t featureId)
mastercore::DivideAndRoundUp	uint256_extensions.h	/^inline arith_uint256 DivideAndRoundUp(const arith_uint256& numerator, const arith_uint256& denominator)$/;"	f	line:54	namespace:mastercore	signature:(const arith_uint256& numerator, const arith_uint256& denominator)
mastercore::FEATURE_BETTING	rules.h	/^const uint16_t FEATURE_BETTING = 3;$/;"	m	line:22	namespace:mastercore
mastercore::FEATURE_CLASS_C	rules.h	/^const uint16_t FEATURE_CLASS_C = 1;$/;"	m	line:18	namespace:mastercore
mastercore::FEATURE_DEXMATH	rules.h	/^const uint16_t FEATURE_DEXMATH = 5;$/;"	m	line:26	namespace:mastercore
mastercore::FEATURE_FEES	rules.h	/^const uint16_t FEATURE_FEES = 9;$/;"	m	line:34	namespace:mastercore
mastercore::FEATURE_FREEZENOTICE	rules.h	/^const uint16_t FEATURE_FREEZENOTICE = 14;$/;"	m	line:38	namespace:mastercore
mastercore::FEATURE_GRANTEFFECTS	rules.h	/^const uint16_t FEATURE_GRANTEFFECTS = 4;$/;"	m	line:24	namespace:mastercore
mastercore::FEATURE_METADEX	rules.h	/^const uint16_t FEATURE_METADEX = 2;$/;"	m	line:20	namespace:mastercore
mastercore::FEATURE_SENDALL	rules.h	/^const uint16_t FEATURE_SENDALL = 6;$/;"	m	line:28	namespace:mastercore
mastercore::FEATURE_SPCROWDCROSSOVER	rules.h	/^const uint16_t FEATURE_SPCROWDCROSSOVER = 7;$/;"	m	line:30	namespace:mastercore
mastercore::FEATURE_STOV1	rules.h	/^const uint16_t FEATURE_STOV1 = 10;$/;"	m	line:36	namespace:mastercore
mastercore::FEATURE_TRADEALLPAIRS	rules.h	/^const uint16_t FEATURE_TRADEALLPAIRS = 8;$/;"	m	line:32	namespace:mastercore
mastercore::FeatureActivation	activation.h	/^struct FeatureActivation$/;"	s	line:12	namespace:mastercore
mastercore::FeatureActivation::activationBlock	activation.h	/^    int activationBlock;$/;"	m	line:15	struct:mastercore::FeatureActivation	access:public
mastercore::FeatureActivation::featureId	activation.h	/^    uint16_t featureId;$/;"	m	line:14	struct:mastercore::FeatureActivation	access:public
mastercore::FeatureActivation::featureName	activation.h	/^    std::string featureName;$/;"	m	line:17	struct:mastercore::FeatureActivation	access:public
mastercore::FeatureActivation::minClientVersion	activation.h	/^    uint32_t minClientVersion;$/;"	m	line:16	struct:mastercore::FeatureActivation	access:public
mastercore::FetchWalletOmniTransactions	walletfetchtxs.cpp	/^std::map<std::string, uint256> FetchWalletOmniTransactions(unsigned int count, int startBlock, int endBlock)$/;"	f	line:58	namespace:mastercore	signature:(unsigned int count, int startBlock, int endBlock)
mastercore::GenerateConsensusString	consensushash.cpp	/^std::string GenerateConsensusString(const CMPAccept& acceptObj, const std::string& address)$/;"	f	line:75	namespace:mastercore	signature:(const CMPAccept& acceptObj, const std::string& address)
mastercore::GenerateConsensusString	consensushash.cpp	/^std::string GenerateConsensusString(const CMPCrowd& crowdObj)$/;"	f	line:91	namespace:mastercore	signature:(const CMPCrowd& crowdObj)
mastercore::GenerateConsensusString	consensushash.cpp	/^std::string GenerateConsensusString(const CMPMetaDEx& tradeObj)$/;"	f	line:83	namespace:mastercore	signature:(const CMPMetaDEx& tradeObj)
mastercore::GenerateConsensusString	consensushash.cpp	/^std::string GenerateConsensusString(const CMPOffer& offerObj, const std::string& address)$/;"	f	line:67	namespace:mastercore	signature:(const CMPOffer& offerObj, const std::string& address)
mastercore::GenerateConsensusString	consensushash.cpp	/^std::string GenerateConsensusString(const CMPTally& tallyObj, const std::string& address, const uint32_t propertyId)$/;"	f	line:52	namespace:mastercore	signature:(const CMPTally& tallyObj, const std::string& address, const uint32_t propertyId)
mastercore::GenerateConsensusString	consensushash.cpp	/^std::string GenerateConsensusString(const uint32_t propertyId, const std::string& address)$/;"	f	line:99	namespace:mastercore	signature:(const uint32_t propertyId, const std::string& address)
mastercore::GetAddressLabel	walletutils.cpp	/^std::string GetAddressLabel(const std::string& address)$/;"	f	line:129	namespace:mastercore	signature:(const std::string& address)
mastercore::GetBalancesHash	consensushash.cpp	/^uint256 GetBalancesHash(const uint32_t hashPropertyId)$/;"	f	line:317	namespace:mastercore	signature:(const uint32_t hashPropertyId)
mastercore::GetBlockIndex	utilsbitcoin.cpp	/^CBlockIndex* GetBlockIndex(const uint256& hash)$/;"	f	line:41	namespace:mastercore	signature:(const uint256& hash)
mastercore::GetCompletedActivations	activation.cpp	/^std::vector<FeatureActivation> GetCompletedActivations()$/;"	f	line:119	namespace:mastercore	signature:()
mastercore::GetConsensusHash	consensushash.cpp	/^uint256 GetConsensusHash()$/;"	f	line:153	namespace:mastercore	signature:()
mastercore::GetEconomicThreshold	walletutils.cpp	/^static int64_t GetEconomicThreshold(const CTxOut& txOut)$/;"	f	line:189	namespace:mastercore	signature:(const CTxOut& txOut)
mastercore::GetEncodingClass	omnicore.cpp	/^int mastercore::GetEncodingClass(const CTransaction& tx, int nBlock)$/;"	f	line:697	class:mastercore	signature:(const CTransaction& tx, int nBlock)
mastercore::GetEstimatedFeePerKb	walletutils.cpp	/^static int64_t GetEstimatedFeePerKb()$/;"	f	line:169	namespace:mastercore	signature:()
mastercore::GetFeatureName	rules.cpp	/^std::string GetFeatureName(uint16_t featureId)$/;"	f	line:536	namespace:mastercore	signature:(uint16_t featureId)
mastercore::GetHeight	utilsbitcoin.cpp	/^int GetHeight()$/;"	f	line:20	namespace:mastercore	signature:()
mastercore::GetLatestBlockTime	utilsbitcoin.cpp	/^uint32_t GetLatestBlockTime()$/;"	f	line:29	namespace:mastercore	signature:()
mastercore::GetMetaDExHash	consensushash.cpp	/^uint256 GetMetaDExHash(const uint32_t propertyId)$/;"	f	line:283	namespace:mastercore	signature:(const uint32_t propertyId)
mastercore::GetMissedIssuerBonus	sp.cpp	/^int64_t mastercore::GetMissedIssuerBonus(const CMPSPInfo::Entry& sp, const CMPCrowd& crowdsale)$/;"	f	line:161	class:mastercore	signature:(const CMPSPInfo::Entry& sp, const CMPCrowd& crowdsale)
mastercore::GetNextPropertyId	omnicore.cpp	/^uint32_t mastercore::GetNextPropertyId(bool maineco)$/;"	f	line:590	class:mastercore	signature:(bool maineco)
mastercore::GetOmniCoreAlertMessages	notifications.cpp	/^std::vector<std::string> GetOmniCoreAlertMessages()$/;"	f	line:136	namespace:mastercore	signature:()
mastercore::GetOmniCoreAlerts	notifications.cpp	/^std::vector<AlertData> GetOmniCoreAlerts()$/;"	f	line:128	namespace:mastercore	signature:()
mastercore::GetPendingActivations	activation.cpp	/^std::vector<FeatureActivation> GetPendingActivations()$/;"	f	line:111	namespace:mastercore	signature:()
mastercore::GetTransactionByteOffset	walletfetchtxs.cpp	/^static unsigned int GetTransactionByteOffset(const uint256& txid)$/;"	f	line:41	namespace:mastercore	signature:(const uint256& txid)
mastercore::IsAllowedInputType	rules.cpp	/^bool IsAllowedInputType(int whichType, int nBlock)$/;"	f	line:343	namespace:mastercore	signature:(int whichType, int nBlock)
mastercore::IsAllowedOutputType	rules.cpp	/^bool IsAllowedOutputType(int whichType, int nBlock)$/;"	f	line:362	namespace:mastercore	signature:(int whichType, int nBlock)
mastercore::IsFeatureActivated	rules.cpp	/^bool IsFeatureActivated(uint16_t featureId, int transactionBlock)$/;"	f	line:558	namespace:mastercore	signature:(uint16_t featureId, int transactionBlock)
mastercore::IsMyAddress	walletutils.cpp	/^int IsMyAddress(const std::string& address)$/;"	f	line:149	namespace:mastercore	signature:(const std::string& address)
mastercore::IsPropertyIdValid	sp.cpp	/^bool mastercore::IsPropertyIdValid(uint32_t propertyId)$/;"	f	line:104	class:mastercore	signature:(uint32_t propertyId)
mastercore::IsTransactionTypeAllowed	rules.cpp	/^bool IsTransactionTypeAllowed(int txBlock, uint32_t txProperty, uint16_t txType, uint16_t version)$/;"	f	line:613	namespace:mastercore	signature:(int txBlock, uint32_t txProperty, uint16_t txType, uint16_t version)
mastercore::MONEYMAN_REGTEST_BLOCK	rules.h	/^const int MONEYMAN_REGTEST_BLOCK = 101;$/;"	m	line:13	namespace:mastercore
mastercore::MONEYMAN_TESTNET_BLOCK	rules.h	/^const int MONEYMAN_TESTNET_BLOCK = 270775;$/;"	m	line:15	namespace:mastercore
mastercore::MainNet	utilsbitcoin.cpp	/^bool MainNet()$/;"	f	line:53	namespace:mastercore	signature:()
mastercore::MetaDEx_ADD	mdex.cpp	/^int mastercore::MetaDEx_ADD(const std::string& sender_addr, uint32_t prop, int64_t amount, int block, uint32_t property_desired, int64_t amount_desired, const uint256& txid, unsigned int idx)$/;"	f	line:496	class:mastercore	signature:(const std::string& sender_addr, uint32_t prop, int64_t amount, int block, uint32_t property_desired, int64_t amount_desired, const uint256& txid, unsigned int idx)
mastercore::MetaDEx_CANCEL_ALL_FOR_PAIR	mdex.cpp	/^int mastercore::MetaDEx_CANCEL_ALL_FOR_PAIR(const uint256& txid, unsigned int block, const std::string& sender_addr, uint32_t prop, uint32_t property_desired)$/;"	f	line:585	class:mastercore	signature:(const uint256& txid, unsigned int block, const std::string& sender_addr, uint32_t prop, uint32_t property_desired)
mastercore::MetaDEx_CANCEL_AT_PRICE	mdex.cpp	/^int mastercore::MetaDEx_CANCEL_AT_PRICE(const uint256& txid, unsigned int block, const std::string& sender_addr, uint32_t prop, int64_t amount, uint32_t property_desired, int64_t amount_desired)$/;"	f	line:531	class:mastercore	signature:(const uint256& txid, unsigned int block, const std::string& sender_addr, uint32_t prop, int64_t amount, uint32_t property_desired, int64_t amount_desired)
mastercore::MetaDEx_CANCEL_EVERYTHING	mdex.cpp	/^int mastercore::MetaDEx_CANCEL_EVERYTHING(const uint256& txid, unsigned int block, const std::string& sender_addr, unsigned char ecosystem)$/;"	f	line:637	class:mastercore	signature:(const uint256& txid, unsigned int block, const std::string& sender_addr, unsigned char ecosystem)
mastercore::MetaDEx_INSERT	mdex.cpp	/^bool mastercore::MetaDEx_INSERT(const CMPMetaDEx& objMetaDEx)$/;"	f	line:460	class:mastercore	signature:(const CMPMetaDEx& objMetaDEx)
mastercore::MetaDEx_RetrieveTrade	mdex.cpp	/^const CMPMetaDEx* mastercore::MetaDEx_RetrieveTrade(const uint256& txid)$/;"	f	line:841	class:mastercore	signature:(const uint256& txid)
mastercore::MetaDEx_SHUTDOWN	mdex.cpp	/^int mastercore::MetaDEx_SHUTDOWN()$/;"	f	line:721	class:mastercore	signature:()
mastercore::MetaDEx_SHUTDOWN_ALLPAIR	mdex.cpp	/^int mastercore::MetaDEx_SHUTDOWN_ALLPAIR()$/;"	f	line:696	class:mastercore	signature:()
mastercore::MetaDEx_compare	mdex.h	/^struct MetaDEx_compare$/;"	s	line:107	namespace:mastercore
mastercore::MetaDEx_debug_print	mdex.cpp	/^void mastercore::MetaDEx_debug_print(bool bShowPriceLevel, bool bDisplay)$/;"	f	line:811	class:mastercore	signature:(bool bShowPriceLevel, bool bDisplay)
mastercore::MetaDEx_getStatus	mdex.cpp	/^int mastercore::MetaDEx_getStatus(const uint256& txid, uint32_t propertyIdForSale, int64_t amountForSale, int64_t totalSold)$/;"	f	line:780	class:mastercore	signature:(const uint256& txid, uint32_t propertyIdForSale, int64_t amountForSale, int64_t totalSold)
mastercore::MetaDEx_getStatusText	mdex.cpp	/^std::string mastercore::MetaDEx_getStatusText(int tradeStatus)$/;"	f	line:763	class:mastercore	signature:(int tradeStatus)
mastercore::MetaDEx_isOpen	mdex.cpp	/^bool mastercore::MetaDEx_isOpen(const uint256& txid, uint32_t propertyIdForSale)$/;"	f	line:743	class:mastercore	signature:(const uint256& txid, uint32_t propertyIdForSale)
mastercore::Modulo256	uint256_extensions.h	/^inline arith_uint256 Modulo256(const arith_uint256& a, const arith_uint256& n)$/;"	f	line:27	namespace:mastercore	signature:(const arith_uint256& a, const arith_uint256& n)
mastercore::MutableConsensusParams	rules.cpp	/^CConsensusParams& MutableConsensusParams()$/;"	f	line:323	namespace:mastercore	signature:()
mastercore::OMNI_FEE_THRESHOLD	rules.h	/^const int64_t OMNI_FEE_THRESHOLD = 100000; \/\/ 0.001%$/;"	m	line:41	namespace:mastercore
mastercore::OfferMap	dex.h	/^typedef std::map<std::string, CMPOffer> OfferMap;$/;"	t	line:222	namespace:mastercore
mastercore::OwnerAddrType	sto.h	/^typedef std::set<std::pair<int64_t, std::string>, SendToOwners_compare> OwnerAddrType;$/;"	t	line:22	namespace:mastercore
mastercore::PendingActivationCompleted	activation.cpp	/^static void PendingActivationCompleted(const FeatureActivation& activation)$/;"	f	line:52	namespace:mastercore	signature:(const FeatureActivation& activation)
mastercore::PendingAdd	pending.cpp	/^void PendingAdd(const uint256& txid, const std::string& sendingAddress, uint16_t type, uint32_t propertyId, int64_t amount, bool fSubtract)$/;"	f	line:29	namespace:mastercore	signature:(const uint256& txid, const std::string& sendingAddress, uint16_t type, uint32_t propertyId, int64_t amount, bool fSubtract)
mastercore::PendingCheck	pending.cpp	/^void PendingCheck()$/;"	f	line:84	namespace:mastercore	signature:()
mastercore::PendingDelete	pending.cpp	/^void PendingDelete(const uint256& txid)$/;"	f	line:61	namespace:mastercore	signature:(const uint256& txid)
mastercore::PendingMap	pending.h	/^typedef std::map<uint256, CMPPending> PendingMap;$/;"	t	line:16	namespace:mastercore
mastercore::PrintFreezeState	omnicore.cpp	/^void mastercore::PrintFreezeState()$/;"	f	line:345	class:mastercore	signature:()
mastercore::RegTest	utilsbitcoin.cpp	/^bool RegTest()$/;"	f	line:63	namespace:mastercore	signature:()
mastercore::ResetConsensusParams	rules.cpp	/^void ResetConsensusParams()$/;"	f	line:333	namespace:mastercore	signature:()
mastercore::STO_GetReceivers	sto.cpp	/^OwnerAddrType STO_GetReceivers(const std::string& sender, uint32_t property, int64_t amount)$/;"	f	line:35	namespace:mastercore	signature:(const std::string& sender, uint32_t property, int64_t amount)
mastercore::SanitizeInvalidUTF8	rpcmbstring.cpp	/^std::string SanitizeInvalidUTF8(const std::string& s)$/;"	f	line:110	namespace:mastercore	signature:(const std::string& s)
mastercore::SelectAllCoins	walletutils.cpp	/^int64_t SelectAllCoins(const std::string& fromAddress, CCoinControl& coinControl)$/;"	f	line:285	namespace:mastercore	signature:(const std::string& fromAddress, CCoinControl& coinControl)
mastercore::SelectCoins	walletutils.cpp	/^int64_t SelectCoins(const std::string& fromAddress, CCoinControl& coinControl, int64_t additional)$/;"	f	line:206	namespace:mastercore	signature:(const std::string& fromAddress, CCoinControl& coinControl, int64_t additional)
mastercore::SendToOwners_compare	sto.h	/^struct SendToOwners_compare$/;"	s	line:12	namespace:mastercore
mastercore::SendToOwners_compare::operator ()	sto.cpp	/^bool SendToOwners_compare::operator()(const std::pair<int64_t, std::string>& p1, const std::pair<int64_t, std::string>& p2) const$/;"	f	line:24	class:mastercore::SendToOwners_compare	signature:(const std::pair<int64_t, std::string>& p1, const std::pair<int64_t, std::string>& p2) const
mastercore::ShouldConsensusHashBlock	consensushash.cpp	/^bool ShouldConsensusHashBlock(int block) {$/;"	f	line:28	namespace:mastercore	signature:(int block)
mastercore::StrToInt64	parse_string.cpp	/^int64_t StrToInt64(const std::string& str, bool divisible)$/;"	f	line:12	namespace:mastercore	signature:(const std::string& str, bool divisible)
mastercore::TRANSFER_FEE_PER_OWNER	sto.h	/^const int64_t TRANSFER_FEE_PER_OWNER = 1;$/;"	m	line:18	namespace:mastercore
mastercore::TRANSFER_FEE_PER_OWNER_V1	sto.h	/^const int64_t TRANSFER_FEE_PER_OWNER_V1 = 1000;$/;"	m	line:19	namespace:mastercore
mastercore::TestNet	utilsbitcoin.cpp	/^bool TestNet()$/;"	f	line:58	namespace:mastercore	signature:()
mastercore::TransactionRestriction	rules.h	/^struct TransactionRestriction$/;"	s	line:45	namespace:mastercore
mastercore::TransactionRestriction::activationBlock	rules.h	/^    int activationBlock;$/;"	m	line:54	struct:mastercore::TransactionRestriction	access:public
mastercore::TransactionRestriction::allowWildcard	rules.h	/^    bool allowWildcard;$/;"	m	line:52	struct:mastercore::TransactionRestriction	access:public
mastercore::TransactionRestriction::txType	rules.h	/^    uint16_t txType;$/;"	m	line:48	struct:mastercore::TransactionRestriction	access:public
mastercore::TransactionRestriction::txVersion	rules.h	/^    uint16_t txVersion;$/;"	m	line:50	struct:mastercore::TransactionRestriction	access:public
mastercore::UnitTest	utilsbitcoin.cpp	/^bool UnitTest()$/;"	f	line:68	namespace:mastercore	signature:()
mastercore::UseEncodingClassC	omnicore.cpp	/^bool mastercore::UseEncodingClassC(size_t nDataSize)$/;"	f	line:1859	class:mastercore	signature:(size_t nDataSize)
mastercore::VerifyCheckpoint	rules.cpp	/^bool VerifyCheckpoint(int block, const uint256& blockHash)$/;"	f	line:642	namespace:mastercore	signature:(int block, const uint256& blockHash)
mastercore::WalletCacheUpdate	walletcache.cpp	/^int WalletCacheUpdate()$/;"	f	line:41	namespace:mastercore	signature:()
mastercore::_my_sps	omnicore.cpp	/^CMPSPInfo* mastercore::_my_sps;$/;"	m	line:133	class:mastercore	file:
mastercore::calculateDExPurchase	dex.cpp	/^int64_t calculateDExPurchase(const int64_t amountOffered, const int64_t amountDesired, const int64_t amountPaid)$/;"	f	line:424	namespace:mastercore	signature:(const int64_t amountOffered, const int64_t amountDesired, const int64_t amountPaid)
mastercore::calculateDesiredBTC	dex.cpp	/^int64_t calculateDesiredBTC(const int64_t amountOffered, const int64_t amountDesired, const int64_t amountAvailable)$/;"	f	line:121	namespace:mastercore	signature:(const int64_t amountOffered, const int64_t amountDesired, const int64_t amountAvailable)
mastercore::calculateFundraiser	sp.cpp	/^void mastercore::calculateFundraiser(bool inflateAmount, int64_t amtTransfer, uint8_t bonusPerc,$/;"	f	line:201	class:mastercore	signature:(bool inflateAmount, int64_t amtTransfer, uint8_t bonusPerc, int64_t fundraiserSecs, int64_t currentSecs, int64_t numProps, uint8_t issuerPerc, int64_t totalTokens, std::pair<int64_t, int64_t>& tokens, bool& close_crowdsale)
mastercore::cs_pending	pending.cpp	/^CCriticalSection cs_pending;$/;"	m	line:21	namespace:mastercore	file:
mastercore::cs_tx_cache	omnicore.cpp	/^CCriticalSection mastercore::cs_tx_cache;$/;"	m	line:800	class:mastercore	file:
mastercore::currentOmniAlerts	notifications.cpp	/^std::vector<AlertData> currentOmniAlerts;$/;"	m	line:23	namespace:mastercore	file:
mastercore::disableFreezing	omnicore.cpp	/^void mastercore::disableFreezing(uint32_t propertyId)$/;"	f	line:364	class:mastercore	signature:(uint32_t propertyId)
mastercore::enableFreezing	omnicore.cpp	/^void mastercore::enableFreezing(uint32_t propertyId, int liveBlock)$/;"	f	line:357	class:mastercore	signature:(uint32_t propertyId, int liveBlock)
mastercore::eraseExpiredAccepts	dex.cpp	/^unsigned int eraseExpiredAccepts(int blockNow)$/;"	f	line:540	namespace:mastercore	signature:(int blockNow)
mastercore::eraseExpiredCrowdsale	sp.cpp	/^unsigned int mastercore::eraseExpiredCrowdsale(const CBlockIndex* pBlockIndex)$/;"	f	line:368	class:mastercore	signature:(const CBlockIndex* pBlockIndex)
mastercore::eraseMaxedCrowdsale	sp.cpp	/^void mastercore::eraseMaxedCrowdsale(const std::string& address, int64_t blockTime, int block)$/;"	f	line:334	class:mastercore	signature:(const std::string& address, int64_t blockTime, int block)
mastercore::freezeAddress	omnicore.cpp	/^void mastercore::freezeAddress(const std::string& address, uint32_t propertyId)$/;"	f	line:403	class:mastercore	signature:(const std::string& address, uint32_t propertyId)
mastercore::getCrowd	sp.cpp	/^CMPCrowd* mastercore::getCrowd(const std::string& address)$/;"	f	line:95	class:mastercore	signature:(const std::string& address)
mastercore::getPropertyName	sp.cpp	/^std::string mastercore::getPropertyName(uint32_t propertyId)$/;"	f	line:133	class:mastercore	signature:(uint32_t propertyId)
mastercore::getTally	omnicore.cpp	/^CMPTally* mastercore::getTally(const std::string& address)$/;"	f	line:261	class:mastercore	signature:(const std::string& address)
mastercore::getTokenLabel	omnicore.cpp	/^std::string mastercore::getTokenLabel(uint32_t propertyId)$/;"	f	line:425	class:mastercore	signature:(uint32_t propertyId)
mastercore::getTotalTokens	omnicore.cpp	/^int64_t mastercore::getTotalTokens(uint32_t propertyId, int64_t* n_owners_total)$/;"	f	line:442	class:mastercore	signature:(uint32_t propertyId, int64_t* n_owners_total)
mastercore::get_Indexes	mdex.cpp	/^md_Set* mastercore::get_Indexes(md_PricesMap* p, rational_t price)$/;"	f	line:57	class:mastercore	signature:(md_PricesMap* p, rational_t price)
mastercore::get_Prices	mdex.cpp	/^md_PricesMap* mastercore::get_Prices(uint32_t prop)$/;"	f	line:48	class:mastercore	signature:(uint32_t prop)
mastercore::isAddressFrozen	omnicore.cpp	/^bool mastercore::isAddressFrozen(const std::string& address, uint32_t propertyId)$/;"	f	line:417	class:mastercore	signature:(const std::string& address, uint32_t propertyId)
mastercore::isCrowdsaleActive	sp.cpp	/^bool mastercore::isCrowdsaleActive(uint32_t propertyId)$/;"	f	line:140	class:mastercore	signature:(uint32_t propertyId)
mastercore::isCrowdsalePurchase	sp.cpp	/^bool mastercore::isCrowdsalePurchase(const uint256& txid, const std::string& address, int64_t* propertyId, int64_t* userTokens, int64_t* issuerTokens)$/;"	f	line:291	class:mastercore	signature:(const uint256& txid, const std::string& address, int64_t* propertyId, int64_t* userTokens, int64_t* issuerTokens)
mastercore::isFreezingEnabled	omnicore.cpp	/^bool mastercore::isFreezingEnabled(uint32_t propertyId, int block)$/;"	f	line:391	class:mastercore	signature:(uint32_t propertyId, int block)
mastercore::isMainEcosystemProperty	omnicore.cpp	/^bool mastercore::isMainEcosystemProperty(uint32_t propertyId)$/;"	f	line:331	class:mastercore	signature:(uint32_t propertyId)
mastercore::isNonMainNet	utilsbitcoin.cpp	/^bool isNonMainNet()$/;"	f	line:73	namespace:mastercore	signature:()
mastercore::isPropertyDivisible	sp.cpp	/^bool mastercore::isPropertyDivisible(uint32_t propertyId)$/;"	f	line:123	class:mastercore	signature:(uint32_t propertyId)
mastercore::isTestEcosystemProperty	omnicore.cpp	/^bool mastercore::isTestEcosystemProperty(uint32_t propertyId)$/;"	f	line:324	class:mastercore	signature:(uint32_t propertyId)
mastercore::legacy	dex.cpp	/^namespace legacy$/;"	n	line:387	namespace:mastercore	file:
mastercore::legacy	dex.cpp	/^namespace legacy$/;"	n	line:91	namespace:mastercore	file:
mastercore::legacy::calculateDExPurchase	dex.cpp	/^static int64_t calculateDExPurchase(const int64_t amountOffered, const int64_t amountDesired, const int64_t amountPaid)$/;"	f	line:395	namespace:mastercore::legacy	signature:(const int64_t amountOffered, const int64_t amountDesired, const int64_t amountPaid)
mastercore::legacy::calculateDesiredBTC	dex.cpp	/^static int64_t calculateDesiredBTC(const int64_t amountOffered, const int64_t amountDesired, const int64_t amountAvailable)$/;"	f	line:99	namespace:mastercore::legacy	signature:(const int64_t amountOffered, const int64_t amountDesired, const int64_t amountAvailable)
mastercore::mainConsensusParams	rules.cpp	/^static CMainConsensusParams mainConsensusParams;$/;"	m	line:286	namespace:mastercore	file:
mastercore::mbstring	rpcmbstring.cpp	/^namespace mbstring$/;"	n	line:15	namespace:mastercore	file:
mastercore::mbstring	test/mbstring_tests.cpp	/^namespace mbstring {$/;"	n	line:11	namespace:mastercore	file:
mastercore::mbstring::check_mb	rpcmbstring.cpp	/^bool check_mb(const char* s, size_t n)$/;"	f	line:59	namespace:mastercore::mbstring	signature:(const char* s, size_t n)
mastercore::mbstring::check_mb	test/mbstring_tests.cpp	/^bool check_mb(const std::string& s)$/;"	f	line:18	namespace:mastercore::mbstring	signature:(const std::string& s)
mastercore::mbstring::get_mblen	rpcmbstring.cpp	/^int get_mblen(const char* s, size_t n)$/;"	f	line:47	namespace:mastercore::mbstring	signature:(const char* s, size_t n)
mastercore::mbstring::get_mblen	rpcmbstring.cpp	/^int get_mblen(unsigned char c)$/;"	f	line:30	namespace:mastercore::mbstring	signature:(unsigned char c)
mastercore::mbstring::unsign	rpcmbstring.cpp	/^inline unsigned char unsign(char c)$/;"	f	line:20	namespace:mastercore::mbstring	signature:(char c)
mastercore::md_PricesMap	mdex.h	/^typedef std::map<rational_t, md_Set> md_PricesMap;$/;"	t	line:116	namespace:mastercore
mastercore::md_PropertiesMap	mdex.h	/^typedef std::map<uint32_t, md_PricesMap> md_PropertiesMap;$/;"	t	line:118	namespace:mastercore
mastercore::md_Set	mdex.h	/^typedef std::set<CMPMetaDEx, MetaDEx_compare> md_Set; $/;"	t	line:114	namespace:mastercore
mastercore::metadex	mdex.cpp	/^md_PropertiesMap mastercore::metadex;$/;"	m	line:46	class:mastercore	file:
mastercore::mp_tally_map	omnicore.cpp	/^std::unordered_map<std::string, CMPTally> mastercore::mp_tally_map;$/;"	m	line:160	class:mastercore	file:
mastercore::my_accepts	omnicore.cpp	/^AcceptMap mastercore::my_accepts;$/;"	m	line:150	class:mastercore	file:
mastercore::my_crowds	omnicore.cpp	/^CrowdMap mastercore::my_crowds;$/;"	m	line:152	class:mastercore	file:
mastercore::my_offers	omnicore.cpp	/^OfferMap mastercore::my_offers;$/;"	m	line:148	class:mastercore	file:
mastercore::my_pending	pending.cpp	/^PendingMap my_pending;$/;"	m	line:24	namespace:mastercore	file:
mastercore::p_OmniTXDB	omnicore.cpp	/^COmniTransactionDB* mastercore::p_OmniTXDB;$/;"	m	line:141	class:mastercore	file:
mastercore::p_feecache	omnicore.cpp	/^COmniFeeCache* mastercore::p_feecache;$/;"	m	line:143	class:mastercore	file:
mastercore::p_feehistory	omnicore.cpp	/^COmniFeeHistory* mastercore::p_feehistory;$/;"	m	line:145	class:mastercore	file:
mastercore::p_txlistdb	omnicore.cpp	/^CMPTxList* mastercore::p_txlistdb;$/;"	m	line:135	class:mastercore	file:
mastercore::regTestConsensusParams	rules.cpp	/^static CRegTestConsensusParams regTestConsensusParams;$/;"	m	line:290	namespace:mastercore	file:
mastercore::rounduint64	convert.cpp	/^uint64_t rounduint64(long double ld)$/;"	f	line:9	namespace:mastercore	signature:(long double ld)
mastercore::s_stolistdb	omnicore.cpp	/^CMPSTOList* mastercore::s_stolistdb;$/;"	m	line:139	class:mastercore	file:
mastercore::strEcosystem	sp.cpp	/^std::string mastercore::strEcosystem(uint8_t ecosystem)$/;"	f	line:430	class:mastercore	signature:(uint8_t ecosystem)
mastercore::strMPProperty	omnicore.cpp	/^std::string mastercore::strMPProperty(uint32_t propertyId)$/;"	f	line:171	class:mastercore	signature:(uint32_t propertyId)
mastercore::strPropertyType	sp.cpp	/^std::string mastercore::strPropertyType(uint16_t propertyType)$/;"	f	line:420	class:mastercore	signature:(uint16_t propertyType)
mastercore::strTransactionType	tx.cpp	/^std::string mastercore::strTransactionType(uint16_t txType)$/;"	f	line:44	class:mastercore	signature:(uint16_t txType)
mastercore::t_tradelistdb	omnicore.cpp	/^CMPTradeList* mastercore::t_tradelistdb;$/;"	m	line:137	class:mastercore	file:
mastercore::testNetConsensusParams	rules.cpp	/^static CTestNetConsensusParams testNetConsensusParams;$/;"	m	line:288	namespace:mastercore	file:
mastercore::uint256_const	uint256_extensions.h	/^namespace uint256_const {$/;"	n	line:17	namespace:mastercore
mastercore::unfreezeAddress	omnicore.cpp	/^void mastercore::unfreezeAddress(const std::string& address, uint32_t propertyId)$/;"	f	line:410	class:mastercore	signature:(const std::string& address, uint32_t propertyId)
mastercore::update_tally_map	omnicore.cpp	/^bool mastercore::update_tally_map(const std::string& who, uint32_t propertyId, int64_t amount, TallyType ttype)$/;"	f	line:483	class:mastercore	signature:(const std::string& who, uint32_t propertyId, int64_t amount, TallyType ttype)
mastercore::vecCompletedActivations	activation.cpp	/^std::vector<FeatureActivation> vecCompletedActivations;$/;"	m	line:29	namespace:mastercore	file:
mastercore::vecPendingActivations	activation.cpp	/^std::vector<FeatureActivation> vecPendingActivations;$/;"	m	line:27	namespace:mastercore	file:
mastercore::viewDummy	omnicore.cpp	/^CCoinsView mastercore::viewDummy;$/;"	m	line:796	class:mastercore	file:
mastercore::viewDummy	omnicore.cpp	/^CCoinsViewCache mastercore::view(&viewDummy);$/;"	m	line:797	class:mastercore	file:
mastercore::walletBalancesCache	walletcache.cpp	/^static std::map<std::string, CMPTally> walletBalancesCache;$/;"	m	line:34	namespace:mastercore	file:
mastercoreInitialized	omnicore.cpp	/^static int mastercoreInitialized = 0;$/;"	v	line:125	file:
mastercore_handler_block_begin	omnicore.cpp	/^int mastercore_handler_block_begin(int nBlockPrev, CBlockIndex * pBlockIndex)$/;"	f	line:1870	signature:(int nBlockPrev, CBlockIndex * pBlockIndex)
mastercore_handler_block_end	omnicore.cpp	/^int mastercore_handler_block_end(int nBlockNow, CBlockIndex * pBlockIndex,$/;"	f	line:1890	signature:(int nBlockNow, CBlockIndex * pBlockIndex, unsigned int countMP)
mastercore_handler_disc_begin	omnicore.cpp	/^int mastercore_handler_disc_begin(int nBlockNow, CBlockIndex const * pBlockIndex)$/;"	f	line:1959	signature:(int nBlockNow, CBlockIndex const * pBlockIndex)
mastercore_handler_disc_end	omnicore.cpp	/^int mastercore_handler_disc_end(int nBlockNow, CBlockIndex const * pBlockIndex)$/;"	f	line:1968	signature:(int nBlockNow, CBlockIndex const * pBlockIndex)
mastercore_handler_tx	omnicore.cpp	/^bool mastercore_handler_tx(const CTransaction& tx, int nBlock, unsigned int idx, const CBlockIndex* pBlockIndex)$/;"	f	line:1789	signature:(const CTransaction& tx, int nBlock, unsigned int idx, const CBlockIndex* pBlockIndex)
mastercore_init	omnicore.cpp	/^int mastercore_init()$/;"	f	line:1587	signature:()
mastercore_shutdown	omnicore.cpp	/^int mastercore_shutdown()$/;"	f	line:1741	signature:()
max_tokens	dbspinfo.h	/^        bool max_tokens;$/;"	m	line:69	struct:CMPSPInfo::Entry	access:public
mbstring	rpcmbstring.cpp	/^namespace mbstring$/;"	n	line:15	namespace:mastercore	file:
mbstring	test/mbstring_tests.cpp	/^namespace mbstring {$/;"	n	line:11	namespace:mastercore	file:
md_PricesMap	mdex.h	/^typedef std::map<rational_t, md_Set> md_PricesMap;$/;"	t	line:116	namespace:mastercore
md_PropertiesMap	mdex.h	/^typedef std::map<uint32_t, md_PricesMap> md_PropertiesMap;$/;"	t	line:118	namespace:mastercore
md_Set	mdex.h	/^typedef std::set<CMPMetaDEx, MetaDEx_compare> md_Set; $/;"	t	line:114	namespace:mastercore
metadex	mdex.cpp	/^md_PropertiesMap mastercore::metadex;$/;"	m	line:46	class:mastercore	file:
minClientVersion	activation.h	/^    uint32_t minClientVersion;$/;"	m	line:16	struct:mastercore::FeatureActivation	access:public
minRelayTxFeeOriginal	test/create_tx_tests.cpp	/^static CFeeRate minRelayTxFeeOriginal = CFeeRate(DEFAULT_MIN_RELAY_TX_FEE);$/;"	v	line:22	file:
minRelayTxFeeOriginal	test/script_dust_tests.cpp	/^static CFeeRate minRelayTxFeeOriginal = CFeeRate(DEFAULT_MIN_RELAY_TX_FEE);$/;"	v	line:18	file:
min_client_version	tx.h	/^    uint32_t min_client_version;$/;"	m	line:95	class:CMPTransaction	access:private
min_fee	dex.h	/^    int64_t min_fee;$/;"	m	line:53	class:CMPOffer	access:private
min_fee	tx.h	/^    uint64_t min_fee;$/;"	m	line:84	class:CMPTransaction	access:private
missedTokens	dbspinfo.h	/^        int64_t missedTokens;$/;"	m	line:70	struct:CMPSPInfo::Entry	access:public
mp_tally_map	omnicore.cpp	/^std::unordered_map<std::string, CMPTally> mastercore::mp_tally_map;$/;"	m	line:160	class:mastercore	file:
mp_token	tally.h	/^    TokenMap mp_token;$/;"	m	line:29	class:CMPTally	access:private
msc_debug_alerts	log.cpp	/^bool msc_debug_alerts             = 1;$/;"	v	line:65
msc_debug_consensus_hash	log.cpp	/^bool msc_debug_consensus_hash     = 0;$/;"	v	line:61
msc_debug_consensus_hash_every_block	log.cpp	/^bool msc_debug_consensus_hash_every_block = 0;$/;"	v	line:63
msc_debug_consensus_hash_every_transaction	log.cpp	/^bool msc_debug_consensus_hash_every_transaction = 0;$/;"	v	line:67
msc_debug_dex	log.cpp	/^bool msc_debug_dex                = 1;$/;"	v	line:37
msc_debug_exo	log.cpp	/^bool msc_debug_exo                = 0;$/;"	v	line:42
msc_debug_fees	log.cpp	/^bool msc_debug_fees               = 1;$/;"	v	line:69
msc_debug_metadex1	log.cpp	/^bool msc_debug_metadex1           = 0;$/;"	v	line:51
msc_debug_metadex2	log.cpp	/^bool msc_debug_metadex2           = 0;$/;"	v	line:52
msc_debug_metadex3	log.cpp	/^bool msc_debug_metadex3           = 0;$/;"	v	line:54
msc_debug_packets	log.cpp	/^bool msc_debug_packets            = 1;$/;"	v	line:56
msc_debug_packets_readonly	log.cpp	/^bool msc_debug_packets_readonly   = 0;$/;"	v	line:58
msc_debug_parser	log.cpp	/^bool msc_debug_parser             = 0;$/;"	v	line:31
msc_debug_parser_data	log.cpp	/^bool msc_debug_parser_data        = 0;$/;"	v	line:27
msc_debug_parser_dex	log.cpp	/^bool msc_debug_parser_dex         = 1;$/;"	v	line:30
msc_debug_parser_readonly	log.cpp	/^bool msc_debug_parser_readonly    = 0;$/;"	v	line:28
msc_debug_pending	log.cpp	/^bool msc_debug_pending            = 1;$/;"	v	line:50
msc_debug_persistence	log.cpp	/^bool msc_debug_persistence        = 0;$/;"	v	line:48
msc_debug_script	log.cpp	/^bool msc_debug_script             = 0;$/;"	v	line:36
msc_debug_send	log.cpp	/^bool msc_debug_send               = 1;$/;"	v	line:38
msc_debug_sp	log.cpp	/^bool msc_debug_sp                 = 1;$/;"	v	line:44
msc_debug_spec	log.cpp	/^bool msc_debug_spec               = 0;$/;"	v	line:41
msc_debug_sto	log.cpp	/^bool msc_debug_sto                = 1;$/;"	v	line:45
msc_debug_tally	log.cpp	/^bool msc_debug_tally              = 1;$/;"	v	line:43
msc_debug_tokens	log.cpp	/^bool msc_debug_tokens             = 0;$/;"	v	line:39
msc_debug_tradedb	log.cpp	/^bool msc_debug_tradedb            = 1;$/;"	v	line:47
msc_debug_txdb	log.cpp	/^bool msc_debug_txdb               = 0;$/;"	v	line:46
msc_debug_ui	log.cpp	/^bool msc_debug_ui                 = 0;$/;"	v	line:49
msc_debug_verbose	log.cpp	/^bool msc_debug_verbose            = 0;$/;"	v	line:32
msc_debug_verbose2	log.cpp	/^bool msc_debug_verbose2           = 0;$/;"	v	line:33
msc_debug_verbose3	log.cpp	/^bool msc_debug_verbose3           = 0;$/;"	v	line:34
msc_debug_vin	log.cpp	/^bool msc_debug_vin                = 0;$/;"	v	line:35
msc_debug_walletcache	log.cpp	/^bool msc_debug_walletcache        = 0;$/;"	v	line:59
msc_initial_scan	omnicore.cpp	/^static int msc_initial_scan(int nFirstBlock)$/;"	f	line:1446	file:	signature:(int nFirstBlock)
mscrpc	rpc.cpp	/^UniValue mscrpc(const UniValue& params, bool fHelp)$/;"	f	line:580	signature:(const UniValue& params, bool fHelp)
mutexDebugLog	log.cpp	/^static boost::mutex* mutexDebugLog = NULL;$/;"	v	line:87	file:
my_accepts	omnicore.cpp	/^AcceptMap mastercore::my_accepts;$/;"	m	line:150	class:mastercore	file:
my_crowds	omnicore.cpp	/^CrowdMap mastercore::my_crowds;$/;"	m	line:152	class:mastercore	file:
my_it	tally.h	/^    TokenMap::iterator my_it;$/;"	m	line:31	class:CMPTally	access:private
my_offers	omnicore.cpp	/^OfferMap mastercore::my_offers;$/;"	m	line:148	class:mastercore	file:
my_pending	pending.cpp	/^PendingMap my_pending;$/;"	m	line:24	namespace:mastercore	file:
n	test/lock_tests.cpp	/^    int n = 0;$/;"	m	line:12	namespace:number	file:
nAllRounds	test/sender_bycontribution_tests.cpp	/^static const unsigned nAllRounds = 2;$/;"	v	line:38	file:
nCacheHits	omnicore.cpp	/^static unsigned int nCacheHits = 0;$/;"	v	line:802	file:
nCacheMiss	omnicore.cpp	/^static unsigned int nCacheMiss = 0;$/;"	v	line:803	file:
nNewValue	tx.h	/^    uint64_t nNewValue;$/;"	m	line:51	class:CMPTransaction	access:private
nOutputs	test/sender_bycontribution_tests.cpp	/^static const unsigned nOutputs = 256;$/;"	v	line:37	file:
nRead	dbbase.h	/^    unsigned int nRead;$/;"	m	line:36	class:CDBBase	access:protected
nShuffleRounds	test/sender_bycontribution_tests.cpp	/^static const unsigned nShuffleRounds = 16;$/;"	v	line:39	file:
nValue	sp.h	/^    int64_t nValue;$/;"	m	line:30	class:CMPCrowd	access:private
nValue	tx.h	/^    uint64_t nValue;$/;"	m	line:50	class:CMPTransaction	access:private
nWaterlineBlock	omnicore.cpp	/^static int nWaterlineBlock = 0;$/;"	v	line:109	file:
nWritten	dbbase.h	/^    unsigned int nWritten;$/;"	m	line:39	class:CDBBase	access:protected
name	dbspinfo.h	/^        std::string name;$/;"	m	line:56	struct:CMPSPInfo::Entry	access:public
name	tx.h	/^    char name[SP_STRING_FIELD_LEN];$/;"	m	line:69	class:CMPTransaction	access:private
next	tally.cpp	/^uint32_t CMPTally::next()$/;"	f	line:37	class:CMPTally	signature:()
next_spid	dbspinfo.h	/^    uint32_t next_spid;$/;"	m	line:128	class:CMPSPInfo	access:private
next_test_spid	dbspinfo.h	/^    uint32_t next_test_spid;$/;"	m	line:129	class:CMPSPInfo	access:private
num_tokens	dbspinfo.h	/^        int64_t num_tokens;$/;"	m	line:59	struct:CMPSPInfo::Entry	access:public
number	test/lock_tests.cpp	/^namespace number$/;"	n	line:10	file:
number::n	test/lock_tests.cpp	/^    int n = 0;$/;"	m	line:12	namespace:number	file:
offerBlock	dex.h	/^    int offerBlock;$/;"	m	line:47	class:CMPOffer	access:private
offer_amount_original	dex.h	/^    int64_t offer_amount_original;     \/\/ copied from the Offer during Accept's creation$/;"	m	line:125	class:CMPAccept	access:private
offer_amount_original	dex.h	/^    int64_t offer_amount_original;$/;"	m	line:49	class:CMPOffer	access:private
offer_txid	dex.h	/^    uint256 offer_txid;$/;"	m	line:129	class:CMPAccept	access:private
omni_createpayload_cancelalltrades	rpcpayload.cpp	/^UniValue omni_createpayload_cancelalltrades(const UniValue& params, bool fHelp)$/;"	f	line:538	signature:(const UniValue& params, bool fHelp)
omni_createpayload_canceltradesbypair	rpcpayload.cpp	/^UniValue omni_createpayload_canceltradesbypair(const UniValue& params, bool fHelp)$/;"	f	line:508	signature:(const UniValue& params, bool fHelp)
omni_createpayload_canceltradesbyprice	rpcpayload.cpp	/^UniValue omni_createpayload_canceltradesbyprice(const UniValue& params, bool fHelp)$/;"	f	line:472	signature:(const UniValue& params, bool fHelp)
omni_createpayload_changeissuer	rpcpayload.cpp	/^UniValue omni_createpayload_changeissuer(const UniValue& params, bool fHelp)$/;"	f	line:409	signature:(const UniValue& params, bool fHelp)
omni_createpayload_closecrowdsale	rpcpayload.cpp	/^UniValue omni_createpayload_closecrowdsale(const UniValue& params, bool fHelp)$/;"	f	line:319	signature:(const UniValue& params, bool fHelp)
omni_createpayload_dexaccept	rpcpayload.cpp	/^UniValue omni_createpayload_dexaccept(const UniValue& params, bool fHelp)$/;"	f	line:119	signature:(const UniValue& params, bool fHelp)
omni_createpayload_dexsell	rpcpayload.cpp	/^UniValue omni_createpayload_dexsell(const UniValue& params, bool fHelp)$/;"	f	line:74	signature:(const UniValue& params, bool fHelp)
omni_createpayload_disablefreezing	rpcpayload.cpp	/^UniValue omni_createpayload_disablefreezing(const UniValue& params, bool fHelp)$/;"	f	line:590	signature:(const UniValue& params, bool fHelp)
omni_createpayload_enablefreezing	rpcpayload.cpp	/^UniValue omni_createpayload_enablefreezing(const UniValue& params, bool fHelp)$/;"	f	line:564	signature:(const UniValue& params, bool fHelp)
omni_createpayload_freeze	rpcpayload.cpp	/^UniValue omni_createpayload_freeze(const UniValue& params, bool fHelp)$/;"	f	line:617	signature:(const UniValue& params, bool fHelp)
omni_createpayload_grant	rpcpayload.cpp	/^UniValue omni_createpayload_grant(const UniValue& params, bool fHelp)$/;"	f	line:345	signature:(const UniValue& params, bool fHelp)
omni_createpayload_issuancecrowdsale	rpcpayload.cpp	/^UniValue omni_createpayload_issuancecrowdsale(const UniValue& params, bool fHelp)$/;"	f	line:224	signature:(const UniValue& params, bool fHelp)
omni_createpayload_issuancefixed	rpcpayload.cpp	/^UniValue omni_createpayload_issuancefixed(const UniValue& params, bool fHelp)$/;"	f	line:180	signature:(const UniValue& params, bool fHelp)
omni_createpayload_issuancemanaged	rpcpayload.cpp	/^UniValue omni_createpayload_issuancemanaged(const UniValue& params, bool fHelp)$/;"	f	line:277	signature:(const UniValue& params, bool fHelp)
omni_createpayload_revoke	rpcpayload.cpp	/^UniValue omni_createpayload_revoke(const UniValue& params, bool fHelp)$/;"	f	line:377	signature:(const UniValue& params, bool fHelp)
omni_createpayload_sendall	rpcpayload.cpp	/^UniValue omni_createpayload_sendall(const UniValue& params, bool fHelp)$/;"	f	line:48	signature:(const UniValue& params, bool fHelp)
omni_createpayload_simplesend	rpcpayload.cpp	/^UniValue omni_createpayload_simplesend(const UniValue& params, bool fHelp)$/;"	f	line:18	signature:(const UniValue& params, bool fHelp)
omni_createpayload_sto	rpcpayload.cpp	/^UniValue omni_createpayload_sto(const UniValue& params, bool fHelp)$/;"	f	line:149	signature:(const UniValue& params, bool fHelp)
omni_createpayload_trade	rpcpayload.cpp	/^UniValue omni_createpayload_trade(const UniValue& params, bool fHelp)$/;"	f	line:435	signature:(const UniValue& params, bool fHelp)
omni_createpayload_unfreeze	rpcpayload.cpp	/^UniValue omni_createpayload_unfreeze(const UniValue& params, bool fHelp)$/;"	f	line:649	signature:(const UniValue& params, bool fHelp)
omni_createrawtx_change	rpcrawtx.cpp	/^UniValue omni_createrawtx_change(const UniValue& params, bool fHelp)$/;"	f	line:254	signature:(const UniValue& params, bool fHelp)
omni_createrawtx_input	rpcrawtx.cpp	/^UniValue omni_createrawtx_input(const UniValue& params, bool fHelp)$/;"	f	line:182	signature:(const UniValue& params, bool fHelp)
omni_createrawtx_multisig	rpcrawtx.cpp	/^UniValue omni_createrawtx_multisig(const UniValue& params, bool fHelp)$/;"	f	line:143	signature:(const UniValue& params, bool fHelp)
omni_createrawtx_opreturn	rpcrawtx.cpp	/^UniValue omni_createrawtx_opreturn(const UniValue& params, bool fHelp)$/;"	f	line:108	signature:(const UniValue& params, bool fHelp)
omni_createrawtx_reference	rpcrawtx.cpp	/^UniValue omni_createrawtx_reference(const UniValue& params, bool fHelp)$/;"	f	line:217	signature:(const UniValue& params, bool fHelp)
omni_decodetransaction	rpcrawtx.cpp	/^UniValue omni_decodetransaction(const UniValue& params, bool fHelp)$/;"	f	line:30	signature:(const UniValue& params, bool fHelp)
omni_funded_send	rpctx.cpp	/^UniValue omni_funded_send(const UniValue& params, bool fHelp)$/;"	f	line:38	signature:(const UniValue& params, bool fHelp)
omni_funded_sendall	rpctx.cpp	/^UniValue omni_funded_sendall(const UniValue& params, bool fHelp)$/;"	f	line:87	signature:(const UniValue& params, bool fHelp)
omni_getactivations	rpc.cpp	/^UniValue omni_getactivations(const UniValue& params, bool fHelp)$/;"	f	line:2143	signature:(const UniValue& params, bool fHelp)
omni_getactivecrowdsales	rpc.cpp	/^UniValue omni_getactivecrowdsales(const UniValue& params, bool fHelp)$/;"	f	line:1371	signature:(const UniValue& params, bool fHelp)
omni_getactivedexsells	rpc.cpp	/^UniValue omni_getactivedexsells(const UniValue& params, bool fHelp)$/;"	f	line:1721	signature:(const UniValue& params, bool fHelp)
omni_getallbalancesforaddress	rpc.cpp	/^UniValue omni_getallbalancesforaddress(const UniValue& params, bool fHelp)$/;"	f	line:836	signature:(const UniValue& params, bool fHelp)
omni_getallbalancesforid	rpc.cpp	/^UniValue omni_getallbalancesforid(const UniValue& params, bool fHelp)$/;"	f	line:778	signature:(const UniValue& params, bool fHelp)
omni_getbalance	rpc.cpp	/^UniValue omni_getbalance(const UniValue& params, bool fHelp)$/;"	f	line:747	signature:(const UniValue& params, bool fHelp)
omni_getbalanceshash	rpc.cpp	/^UniValue omni_getbalanceshash(const UniValue& params, bool fHelp)$/;"	f	line:2391	signature:(const UniValue& params, bool fHelp)
omni_getcrowdsale	rpc.cpp	/^UniValue omni_getcrowdsale(const UniValue& params, bool fHelp)$/;"	f	line:1223	signature:(const UniValue& params, bool fHelp)
omni_getcurrentconsensushash	rpc.cpp	/^UniValue omni_getcurrentconsensushash(const UniValue& params, bool fHelp)$/;"	f	line:2312	signature:(const UniValue& params, bool fHelp)
omni_getfeecache	rpc.cpp	/^UniValue omni_getfeecache(const UniValue& params, bool fHelp)$/;"	f	line:417	signature:(const UniValue& params, bool fHelp)
omni_getfeedistribution	rpc.cpp	/^UniValue omni_getfeedistribution(const UniValue& params, bool fHelp)$/;"	f	line:155	signature:(const UniValue& params, bool fHelp)
omni_getfeedistributions	rpc.cpp	/^UniValue omni_getfeedistributions(const UniValue& params, bool fHelp)$/;"	f	line:221	signature:(const UniValue& params, bool fHelp)
omni_getfeeshare	rpc.cpp	/^UniValue omni_getfeeshare(const UniValue& params, bool fHelp)$/;"	f	line:346	signature:(const UniValue& params, bool fHelp)
omni_getfeetrigger	rpc.cpp	/^UniValue omni_getfeetrigger(const UniValue& params, bool fHelp)$/;"	f	line:296	signature:(const UniValue& params, bool fHelp)
omni_getgrants	rpc.cpp	/^UniValue omni_getgrants(const UniValue& params, bool fHelp)$/;"	f	line:1439	signature:(const UniValue& params, bool fHelp)
omni_getinfo	rpc.cpp	/^UniValue omni_getinfo(const UniValue& params, bool fHelp)$/;"	f	line:2059	signature:(const UniValue& params, bool fHelp)
omni_getmetadexhash	rpc.cpp	/^UniValue omni_getmetadexhash(const UniValue& params, bool fHelp)$/;"	f	line:2347	signature:(const UniValue& params, bool fHelp)
omni_getorderbook	rpc.cpp	/^UniValue omni_getorderbook(const UniValue& params, bool fHelp)$/;"	f	line:1521	signature:(const UniValue& params, bool fHelp)
omni_getpayload	rpc.cpp	/^UniValue omni_getpayload(const UniValue& params, bool fHelp)$/;"	f	line:511	signature:(const UniValue& params, bool fHelp)
omni_getproperty	rpc.cpp	/^UniValue omni_getproperty(const UniValue& params, bool fHelp)$/;"	f	line:1108	signature:(const UniValue& params, bool fHelp)
omni_getseedblocks	rpc.cpp	/^UniValue omni_getseedblocks(const UniValue& params, bool fHelp)$/;"	f	line:471	signature:(const UniValue& params, bool fHelp)
omni_getsto	rpc.cpp	/^UniValue omni_getsto(const UniValue& params, bool fHelp)$/;"	f	line:2207	signature:(const UniValue& params, bool fHelp)
omni_gettrade	rpc.cpp	/^UniValue omni_gettrade(const UniValue& params, bool fHelp)$/;"	f	line:2256	signature:(const UniValue& params, bool fHelp)
omni_gettradehistoryforaddress	rpc.cpp	/^UniValue omni_gettradehistoryforaddress(const UniValue& params, bool fHelp)$/;"	f	line:1590	signature:(const UniValue& params, bool fHelp)
omni_gettradehistoryforpair	rpc.cpp	/^UniValue omni_gettradehistoryforpair(const UniValue& params, bool fHelp)$/;"	f	line:1674	signature:(const UniValue& params, bool fHelp)
omni_gettransaction	rpc.cpp	/^UniValue omni_gettransaction(const UniValue& params, bool fHelp)$/;"	f	line:1896	signature:(const UniValue& params, bool fHelp)
omni_getwalletaddressbalances	rpc.cpp	/^UniValue omni_getwalletaddressbalances(const UniValue& params, bool fHelp)$/;"	f	line:1023	signature:(const UniValue& params, bool fHelp)
omni_getwalletbalances	rpc.cpp	/^UniValue omni_getwalletbalances(const UniValue& params, bool fHelp)$/;"	f	line:916	signature:(const UniValue& params, bool fHelp)
omni_listblocktransactions	rpc.cpp	/^UniValue omni_listblocktransactions(const UniValue& params, bool fHelp)$/;"	f	line:1844	signature:(const UniValue& params, bool fHelp)
omni_listpendingtransactions	rpc.cpp	/^UniValue omni_listpendingtransactions(const UniValue& params, bool fHelp)$/;"	f	line:2008	signature:(const UniValue& params, bool fHelp)
omni_listproperties	rpc.cpp	/^UniValue omni_listproperties(const UniValue& params, bool fHelp)$/;"	f	line:1168	signature:(const UniValue& params, bool fHelp)
omni_listtransactions	rpc.cpp	/^UniValue omni_listtransactions(const UniValue& params, bool fHelp)$/;"	f	line:1934	signature:(const UniValue& params, bool fHelp)
omni_send	rpctx.cpp	/^UniValue omni_send(const UniValue& params, bool fHelp)$/;"	f	line:172	signature:(const UniValue& params, bool fHelp)
omni_sendactivation	rpctx.cpp	/^UniValue omni_sendactivation(const UniValue& params, bool fHelp)$/;"	f	line:1396	signature:(const UniValue& params, bool fHelp)
omni_sendalert	rpctx.cpp	/^UniValue omni_sendalert(const UniValue& params, bool fHelp)$/;"	f	line:1482	signature:(const UniValue& params, bool fHelp)
omni_sendall	rpctx.cpp	/^UniValue omni_sendall(const UniValue& params, bool fHelp)$/;"	f	line:230	signature:(const UniValue& params, bool fHelp)
omni_sendcancelalltrades	rpctx.cpp	/^UniValue omni_sendcancelalltrades(const UniValue& params, bool fHelp)$/;"	f	line:1097	signature:(const UniValue& params, bool fHelp)
omni_sendcanceltradesbypair	rpctx.cpp	/^UniValue omni_sendcanceltradesbypair(const UniValue& params, bool fHelp)$/;"	f	line:1043	signature:(const UniValue& params, bool fHelp)
omni_sendcanceltradesbyprice	rpctx.cpp	/^UniValue omni_sendcanceltradesbyprice(const UniValue& params, bool fHelp)$/;"	f	line:985	signature:(const UniValue& params, bool fHelp)
omni_sendchangeissuer	rpctx.cpp	/^UniValue omni_sendchangeissuer(const UniValue& params, bool fHelp)$/;"	f	line:1145	signature:(const UniValue& params, bool fHelp)
omni_sendclosecrowdsale	rpctx.cpp	/^UniValue omni_sendclosecrowdsale(const UniValue& params, bool fHelp)$/;"	f	line:815	signature:(const UniValue& params, bool fHelp)
omni_senddeactivation	rpctx.cpp	/^UniValue omni_senddeactivation(const UniValue& params, bool fHelp)$/;"	f	line:1441	signature:(const UniValue& params, bool fHelp)
omni_senddexaccept	rpctx.cpp	/^UniValue omni_senddexaccept(const UniValue& params, bool fHelp)$/;"	f	line:373	signature:(const UniValue& params, bool fHelp)
omni_senddexsell	rpctx.cpp	/^UniValue omni_senddexsell(const UniValue& params, bool fHelp)$/;"	f	line:284	signature:(const UniValue& params, bool fHelp)
omni_senddisablefreezing	rpctx.cpp	/^UniValue omni_senddisablefreezing(const UniValue& params, bool fHelp)$/;"	f	line:1244	signature:(const UniValue& params, bool fHelp)
omni_sendenablefreezing	rpctx.cpp	/^UniValue omni_sendenablefreezing(const UniValue& params, bool fHelp)$/;"	f	line:1195	signature:(const UniValue& params, bool fHelp)
omni_sendfreeze	rpctx.cpp	/^UniValue omni_sendfreeze(const UniValue& params, bool fHelp)$/;"	f	line:1294	signature:(const UniValue& params, bool fHelp)
omni_sendgrant	rpctx.cpp	/^UniValue omni_sendgrant(const UniValue& params, bool fHelp)$/;"	f	line:706	signature:(const UniValue& params, bool fHelp)
omni_sendissuancecrowdsale	rpctx.cpp	/^UniValue omni_sendissuancecrowdsale(const UniValue& params, bool fHelp)$/;"	f	line:455	signature:(const UniValue& params, bool fHelp)
omni_sendissuancefixed	rpctx.cpp	/^UniValue omni_sendissuancefixed(const UniValue& params, bool fHelp)$/;"	f	line:528	signature:(const UniValue& params, bool fHelp)
omni_sendissuancemanaged	rpctx.cpp	/^UniValue omni_sendissuancemanaged(const UniValue& params, bool fHelp)$/;"	f	line:591	signature:(const UniValue& params, bool fHelp)
omni_sendrawtx	rpctx.cpp	/^UniValue omni_sendrawtx(const UniValue& params, bool fHelp)$/;"	f	line:130	signature:(const UniValue& params, bool fHelp)
omni_sendrevoke	rpctx.cpp	/^UniValue omni_sendrevoke(const UniValue& params, bool fHelp)$/;"	f	line:761	signature:(const UniValue& params, bool fHelp)
omni_sendsto	rpctx.cpp	/^UniValue omni_sendsto(const UniValue& params, bool fHelp)$/;"	f	line:652	signature:(const UniValue& params, bool fHelp)
omni_sendtrade	rpctx.cpp	/^UniValue omni_sendtrade(const UniValue& params, bool fHelp)$/;"	f	line:927	signature:(const UniValue& params, bool fHelp)
omni_sendunfreeze	rpctx.cpp	/^UniValue omni_sendunfreeze(const UniValue& params, bool fHelp)$/;"	f	line:1345	signature:(const UniValue& params, bool fHelp)
omni_setautocommit	rpc.cpp	/^UniValue omni_setautocommit(const UniValue& params, bool fHelp)$/;"	f	line:558	signature:(const UniValue& params, bool fHelp)
operator !=	tally.cpp	/^bool CMPTally::operator!=(const CMPTally& rhs) const$/;"	f	line:211	class:CMPTally	signature:(const CMPTally& rhs) const
operator ()	mdex.cpp	/^bool MetaDEx_compare::operator()(const CMPMetaDEx &lhs, const CMPMetaDEx &rhs) const$/;"	f	line:454	class:MetaDEx_compare	signature:(const CMPMetaDEx &lhs, const CMPMetaDEx &rhs) const
operator ()	sto.cpp	/^bool SendToOwners_compare::operator()(const std::pair<int64_t, std::string>& p1, const std::pair<int64_t, std::string>& p2) const$/;"	f	line:24	class:mastercore::SendToOwners_compare	signature:(const std::pair<int64_t, std::string>& p1, const std::pair<int64_t, std::string>& p2) const
operator <	tx.h	/^    bool operator<(const CMPTransaction& other) const$/;"	f	line:303	class:CMPTransaction	access:public	signature:(const CMPTransaction& other) const
operator ==	tally.cpp	/^bool CMPTally::operator==(const CMPTally& rhs) const$/;"	f	line:175	class:CMPTally	signature:(const CMPTally& rhs) const
options	dbbase.h	/^    leveldb::Options options;$/;"	m	line:21	class:CDBBase	access:protected
outPoint	createtx.h	/^    COutPoint outPoint;$/;"	m	line:27	struct:PrevTxsEntry	access:public
p_OmniTXDB	omnicore.cpp	/^COmniTransactionDB* mastercore::p_OmniTXDB;$/;"	m	line:141	class:mastercore	file:
p_feecache	omnicore.cpp	/^COmniFeeCache* mastercore::p_feecache;$/;"	m	line:143	class:mastercore	file:
p_feehistory	omnicore.cpp	/^COmniFeeHistory* mastercore::p_feehistory;$/;"	m	line:145	class:mastercore	file:
p_txlistdb	omnicore.cpp	/^CMPTxList* mastercore::p_txlistdb;$/;"	m	line:135	class:mastercore	file:
parseTransaction	omnicore.cpp	/^static int parseTransaction(bool bRPConly, const CTransaction& wtx, int nBlock, unsigned int idx, CMPTransaction& mp_tx, unsigned int nTime)$/;"	f	line:853	file:	signature:(bool bRPConly, const CTransaction& wtx, int nBlock, unsigned int idx, CMPTransaction& mp_tx, unsigned int nTime)
pdb	dbbase.h	/^    leveldb::DB* pdb;$/;"	m	line:33	class:CDBBase	access:protected
peekNextSPID	dbspinfo.cpp	/^uint32_t CMPSPInfo::peekNextSPID(uint8_t ecosystem) const$/;"	f	line:98	class:CMPSPInfo	signature:(uint8_t ecosystem) const
percentage	dbspinfo.h	/^        uint8_t percentage;$/;"	m	line:65	struct:CMPSPInfo::Entry	access:public
percentage	sp.h	/^    uint8_t percentage;$/;"	m	line:35	class:CMPCrowd	access:private
percentage	tx.h	/^    unsigned char percentage;$/;"	m	line:74	class:CMPTransaction	access:private
pkt	tx.h	/^    unsigned char pkt[1 + MAX_PACKETS * PACKET_SIZE];$/;"	m	line:39	class:CMPTransaction	access:private
pkt_size	tx.h	/^    int pkt_size;$/;"	m	line:38	class:CMPTransaction	access:private
plusOneThread	test/lock_tests.cpp	/^static void plusOneThread(int nIterations)$/;"	f	line:20	file:	signature:(int nIterations)
popBlock	dbspinfo.cpp	/^int64_t CMPSPInfo::popBlock(const uint256& block_hash)$/;"	f	line:305	class:CMPSPInfo	signature:(const uint256& block_hash)
populateRPCDExPurchases	rpctxobject.cpp	/^int populateRPCDExPurchases(const CTransaction& wtx, UniValue& purchases, std::string filterAddress)$/;"	f	line:654	signature:(const CTransaction& wtx, UniValue& purchases, std::string filterAddress)
populateRPCExtendedTypeMetaDExCancel	rpctxobject.cpp	/^void populateRPCExtendedTypeMetaDExCancel(const uint256& txid, UniValue& txobj)$/;"	f	line:593	signature:(const uint256& txid, UniValue& txobj)
populateRPCExtendedTypeMetaDExTrade	rpctxobject.cpp	/^void populateRPCExtendedTypeMetaDExTrade(const uint256& txid, uint32_t propertyIdForSale, int64_t amountForSale, UniValue& txobj)$/;"	f	line:572	signature:(const uint256& txid, uint32_t propertyIdForSale, int64_t amountForSale, UniValue& txobj)
populateRPCExtendedTypeSendToOwners	rpctxobject.cpp	/^void populateRPCExtendedTypeSendToOwners(const uint256 txid, std::string extendedDetailsFilter, UniValue& txobj, uint16_t version)$/;"	f	line:557	signature:(const uint256 txid, std::string extendedDetailsFilter, UniValue& txobj, uint16_t version)
populateRPCSendAllSubSends	rpctxobject.cpp	/^int populateRPCSendAllSubSends(const uint256& txid, UniValue& subSends)$/;"	f	line:623	signature:(const uint256& txid, UniValue& subSends)
populateRPCTransactionObject	rpctxobject.cpp	/^int populateRPCTransactionObject(const CTransaction& tx, const uint256& blockHash, UniValue& txobj, std::string filterAddress, bool extendedDetails, std::string extendedDetailsFilter, int blockHeight)$/;"	f	line:65	signature:(const CTransaction& tx, const uint256& blockHash, UniValue& txobj, std::string filterAddress, bool extendedDetails, std::string extendedDetailsFilter, int blockHeight)
populateRPCTransactionObject	rpctxobject.cpp	/^int populateRPCTransactionObject(const uint256& txid, UniValue& txobj, std::string filterAddress, bool extendedDetails, std::string extendedDetailsFilter)$/;"	f	line:53	signature:(const uint256& txid, UniValue& txobj, std::string filterAddress, bool extendedDetails, std::string extendedDetailsFilter)
populateRPCTypeAcceptOffer	rpctxobject.cpp	/^void populateRPCTypeAcceptOffer(CMPTransaction& omniObj, UniValue& txobj)$/;"	f	line:412	signature:(CMPTransaction& omniObj, UniValue& txobj)
populateRPCTypeActivation	rpctxobject.cpp	/^void populateRPCTypeActivation(CMPTransaction& omniObj, UniValue& txobj)$/;"	f	line:531	signature:(CMPTransaction& omniObj, UniValue& txobj)
populateRPCTypeChangeIssuer	rpctxobject.cpp	/^void populateRPCTypeChangeIssuer(CMPTransaction& omniObj, UniValue& txobj)$/;"	f	line:524	signature:(CMPTransaction& omniObj, UniValue& txobj)
populateRPCTypeCloseCrowdsale	rpctxobject.cpp	/^void populateRPCTypeCloseCrowdsale(CMPTransaction& omniObj, UniValue& txobj)$/;"	f	line:501	signature:(CMPTransaction& omniObj, UniValue& txobj)
populateRPCTypeCreatePropertyFixed	rpctxobject.cpp	/^void populateRPCTypeCreatePropertyFixed(CMPTransaction& omniObj, UniValue& txobj, int confirmations)$/;"	f	line:432	signature:(CMPTransaction& omniObj, UniValue& txobj, int confirmations)
populateRPCTypeCreatePropertyManual	rpctxobject.cpp	/^void populateRPCTypeCreatePropertyManual(CMPTransaction& omniObj, UniValue& txobj, int confirmations)$/;"	f	line:480	signature:(CMPTransaction& omniObj, UniValue& txobj, int confirmations)
populateRPCTypeCreatePropertyVariable	rpctxobject.cpp	/^void populateRPCTypeCreatePropertyVariable(CMPTransaction& omniObj, UniValue& txobj, int confirmations)$/;"	f	line:453	signature:(CMPTransaction& omniObj, UniValue& txobj, int confirmations)
populateRPCTypeDisableFreezing	rpctxobject.cpp	/^void populateRPCTypeDisableFreezing(CMPTransaction& omniObj, UniValue& txobj)$/;"	f	line:543	signature:(CMPTransaction& omniObj, UniValue& txobj)
populateRPCTypeEnableFreezing	rpctxobject.cpp	/^void populateRPCTypeEnableFreezing(CMPTransaction& omniObj, UniValue& txobj)$/;"	f	line:538	signature:(CMPTransaction& omniObj, UniValue& txobj)
populateRPCTypeFreezeTokens	rpctxobject.cpp	/^void populateRPCTypeFreezeTokens(CMPTransaction& omniObj, UniValue& txobj)$/;"	f	line:547	signature:(CMPTransaction& omniObj, UniValue& txobj)
populateRPCTypeGrant	rpctxobject.cpp	/^void populateRPCTypeGrant(CMPTransaction& omniObj, UniValue& txobj)$/;"	f	line:508	signature:(CMPTransaction& omniObj, UniValue& txobj)
populateRPCTypeInfo	rpctxobject.cpp	/^void populateRPCTypeInfo(CMPTransaction& mp_obj, UniValue& txobj, uint32_t txType, bool extendedDetails, std::string extendedDetailsFilter, int confirmations)$/;"	f	line:170	signature:(CMPTransaction& mp_obj, UniValue& txobj, uint32_t txType, bool extendedDetails, std::string extendedDetailsFilter, int confirmations)
populateRPCTypeMetaDExCancelEcosystem	rpctxobject.cpp	/^void populateRPCTypeMetaDExCancelEcosystem(CMPTransaction& omniObj, UniValue& txobj, bool extendedDetails)$/;"	f	line:406	signature:(CMPTransaction& omniObj, UniValue& txobj, bool extendedDetails)
populateRPCTypeMetaDExCancelPair	rpctxobject.cpp	/^void populateRPCTypeMetaDExCancelPair(CMPTransaction& omniObj, UniValue& txobj, bool extendedDetails)$/;"	f	line:396	signature:(CMPTransaction& omniObj, UniValue& txobj, bool extendedDetails)
populateRPCTypeMetaDExCancelPrice	rpctxobject.cpp	/^void populateRPCTypeMetaDExCancelPrice(CMPTransaction& omniObj, UniValue& txobj, bool extendedDetails)$/;"	f	line:377	signature:(CMPTransaction& omniObj, UniValue& txobj, bool extendedDetails)
populateRPCTypeMetaDExTrade	rpctxobject.cpp	/^void populateRPCTypeMetaDExTrade(CMPTransaction& omniObj, UniValue& txobj, bool extendedDetails)$/;"	f	line:358	signature:(CMPTransaction& omniObj, UniValue& txobj, bool extendedDetails)
populateRPCTypeRevoke	rpctxobject.cpp	/^void populateRPCTypeRevoke(CMPTransaction& omniObj, UniValue& txobj)$/;"	f	line:516	signature:(CMPTransaction& omniObj, UniValue& txobj)
populateRPCTypeSendAll	rpctxobject.cpp	/^void populateRPCTypeSendAll(CMPTransaction& omniObj, UniValue& txobj, int confirmations)$/;"	f	line:307	signature:(CMPTransaction& omniObj, UniValue& txobj, int confirmations)
populateRPCTypeSendToOwners	rpctxobject.cpp	/^void populateRPCTypeSendToOwners(CMPTransaction& omniObj, UniValue& txobj, bool extendedDetails, std::string extendedDetailsFilter)$/;"	f	line:298	signature:(CMPTransaction& omniObj, UniValue& txobj, bool extendedDetails, std::string extendedDetailsFilter)
populateRPCTypeSimpleSend	rpctxobject.cpp	/^void populateRPCTypeSimpleSend(CMPTransaction& omniObj, UniValue& txobj)$/;"	f	line:269	signature:(CMPTransaction& omniObj, UniValue& txobj)
populateRPCTypeTradeOffer	rpctxobject.cpp	/^void populateRPCTypeTradeOffer(CMPTransaction& omniObj, UniValue& txobj)$/;"	f	line:317	signature:(CMPTransaction& omniObj, UniValue& txobj)
populateRPCTypeUnfreezeTokens	rpctxobject.cpp	/^void populateRPCTypeUnfreezeTokens(CMPTransaction& omniObj, UniValue& txobj)$/;"	f	line:552	signature:(CMPTransaction& omniObj, UniValue& txobj)
prev_prop_id	dbspinfo.h	/^        uint32_t prev_prop_id;$/;"	m	line:53	struct:CMPSPInfo::Entry	access:public
prev_prop_id	tx.h	/^    unsigned int prev_prop_id;$/;"	m	line:66	class:CMPTransaction	access:private
print	dbspinfo.cpp	/^void CMPSPInfo::Entry::print() const$/;"	f	line:42	class:CMPSPInfo::Entry	signature:() const
print	dex.h	/^    void print()$/;"	f	line:167	class:CMPAccept	access:public	signature:()
print	pending.cpp	/^void CMPPending::print(const uint256& txid) const$/;"	f	line:105	class:CMPPending	signature:(const uint256& txid) const
print	sp.cpp	/^void CMPCrowd::print(const std::string& address, FILE* fp) const$/;"	f	line:52	class:CMPCrowd	signature:(const std::string& address, FILE* fp) const
print	tally.cpp	/^int64_t CMPTally::print(uint32_t propertyId, bool bDivisible) const$/;"	f	line:223	class:CMPTally	signature:(uint32_t propertyId, bool bDivisible) const
printAll	dbfees.cpp	/^void COmniFeeCache::printAll()$/;"	f	line:297	class:COmniFeeCache	signature:()
printAll	dbfees.cpp	/^void COmniFeeHistory::printAll()$/;"	f	line:358	class:COmniFeeHistory	signature:()
printAll	dbspinfo.cpp	/^void CMPSPInfo::printAll() const$/;"	f	line:432	class:CMPSPInfo	signature:() const
printAll	dbstolist.cpp	/^void CMPSTOList::printAll()$/;"	f	line:196	class:CMPSTOList	signature:()
printAll	dbtradelist.cpp	/^void CMPTradeList::printAll()$/;"	f	line:102	class:CMPTradeList	signature:()
printAll	dbtxlist.cpp	/^void CMPTxList::printAll()$/;"	f	line:728	class:CMPTxList	signature:()
printStats	dbfees.cpp	/^void COmniFeeCache::printStats()$/;"	f	line:291	class:COmniFeeCache	signature:()
printStats	dbfees.cpp	/^void COmniFeeHistory::printStats()$/;"	f	line:352	class:COmniFeeHistory	signature:()
printStats	dbstolist.cpp	/^void CMPSTOList::printStats()$/;"	f	line:191	class:CMPSTOList	signature:()
printStats	dbtradelist.cpp	/^void CMPTradeList::printStats()$/;"	f	line:97	class:CMPTradeList	signature:()
printStats	dbtxlist.cpp	/^void CMPTxList::printStats()$/;"	f	line:723	class:CMPTxList	signature:()
prop	pending.h	/^    uint32_t prop;$/;"	m	line:38	struct:CMPPending	access:public
prop_type	dbspinfo.h	/^        uint16_t prop_type;$/;"	m	line:52	struct:CMPSPInfo::Entry	access:public
prop_type	tx.h	/^    unsigned short prop_type;$/;"	m	line:65	class:CMPTransaction	access:private
property	dex.h	/^    uint32_t property;                 \/\/ copied from the offer during creation$/;"	m	line:123	class:CMPAccept	access:private
property	dex.h	/^    uint32_t property;$/;"	m	line:50	class:CMPOffer	access:private
property	mdex.h	/^    uint32_t property;$/;"	m	line:43	class:CMPMetaDEx	access:private
property	tx.h	/^    unsigned int property;$/;"	m	line:56	class:CMPTransaction	access:private
propertyId	sp.h	/^    uint32_t propertyId;$/;"	m	line:29	class:CMPCrowd	access:private
property_desired	dbspinfo.h	/^        uint32_t property_desired;$/;"	m	line:62	struct:CMPSPInfo::Entry	access:public
property_desired	sp.h	/^    uint32_t property_desired;$/;"	m	line:32	class:CMPCrowd	access:private
prune_state_files	persistence.cpp	/^static void prune_state_files(const CBlockIndex* topIndex)$/;"	f	line:454	file:	signature:(const CBlockIndex* topIndex)
putSP	dbspinfo.cpp	/^uint32_t CMPSPInfo::putSP(uint8_t ecosystem, const Entry& info)$/;"	f	line:161	class:CMPSPInfo	signature:(uint8_t ecosystem, const Entry& info)
rangeInt64	mdex.cpp	/^static bool rangeInt64(const int128_t& value)$/;"	f	line:90	file:	signature:(const int128_t& value)
rangeInt64	mdex.cpp	/^static bool rangeInt64(const rational_t& value)$/;"	f	line:96	file:	signature:(const rational_t& value)
rational_t	mdex.h	/^typedef boost::rational<boost::multiprecision::checked_int128_t> rational_t;$/;"	t	line:22
readoptions	dbbase.h	/^    leveldb::ReadOptions readoptions;$/;"	m	line:24	class:CDBBase	access:protected
receiver	tx.h	/^    std::string receiver;$/;"	m	line:43	class:CMPTransaction	access:private
recordMatchedTrade	dbtradelist.cpp	/^void CMPTradeList::recordMatchedTrade(const uint256& txid1, const uint256& txid2, const std::string& address1, const std::string& address2, uint32_t prop1, uint32_t prop2, int64_t amount1, int64_t amount2, int blockNum, int64_t fee)$/;"	f	line:43	class:CMPTradeList	signature:(const uint256& txid1, const uint256& txid2, const std::string& address1, const std::string& address2, uint32_t prop1, uint32_t prop2, int64_t amount1, int64_t amount2, int blockNum, int64_t fee)
recordMetaDExCancelTX	dbtxlist.cpp	/^void CMPTxList::recordMetaDExCancelTX(const uint256& txidMaster, const uint256& txidSub, bool fValid, int nBlock, unsigned int propertyId, uint64_t nValue)$/;"	f	line:126	class:CMPTxList	signature:(const uint256& txidMaster, const uint256& txidSub, bool fValid, int nBlock, unsigned int propertyId, uint64_t nValue)
recordNewTrade	dbtradelist.cpp	/^void CMPTradeList::recordNewTrade(const uint256& txid, const std::string& address, uint32_t propertyIdForSale, uint32_t propertyIdDesired, int blockNum, int blockIndex)$/;"	f	line:53	class:CMPTradeList	signature:(const uint256& txid, const std::string& address, uint32_t propertyIdForSale, uint32_t propertyIdDesired, int blockNum, int blockIndex)
recordPaymentTX	dbtxlist.cpp	/^void CMPTxList::recordPaymentTX(const uint256& txid, bool fValid, int nBlock, unsigned int vout, unsigned int propertyId, uint64_t nValue, std::string buyer, std::string seller)$/;"	f	line:77	class:CMPTxList	signature:(const uint256& txid, bool fValid, int nBlock, unsigned int vout, unsigned int propertyId, uint64_t nValue, std::string buyer, std::string seller)
recordSTOReceive	dbstolist.cpp	/^void CMPSTOList::recordSTOReceive(std::string address, const uint256 &txid, int nBlock, unsigned int propertyId, uint64_t amount)$/;"	f	line:226	class:CMPSTOList	signature:(std::string address, const uint256 &txid, int nBlock, unsigned int propertyId, uint64_t amount)
recordSendAllSubRecord	dbtxlist.cpp	/^void CMPTxList::recordSendAllSubRecord(const uint256& txid, int subRecordNumber, uint32_t propertyId, int64_t nValue)$/;"	f	line:171	class:CMPTxList	signature:(const uint256& txid, int subRecordNumber, uint32_t propertyId, int64_t nValue)
recordTX	dbtxlist.cpp	/^void CMPTxList::recordTX(const uint256 &txid, bool fValid, int nBlock, unsigned int type, uint64_t nValue)$/;"	f	line:58	class:CMPTxList	signature:(const uint256 &txid, bool fValid, int nBlock, unsigned int type, uint64_t nValue)
reduceAcceptAmountRemaining_andIsZero	dex.h	/^    bool reduceAcceptAmountRemaining_andIsZero(const int64_t really_purchased)$/;"	f	line:187	class:CMPAccept	access:public	signature:(const int64_t really_purchased)
regTestConsensusParams	rules.cpp	/^static CRegTestConsensusParams regTestConsensusParams;$/;"	m	line:290	namespace:mastercore	file:
remainingTimeAsString	omnicore.cpp	/^    std::string remainingTimeAsString(int64_t remainingTime) const$/;"	f	line:1381	class:ProgressReporter	file:	access:private	signature:(int64_t remainingTime) const
reorgRecoveryMaxHeight	omnicore.cpp	/^static int reorgRecoveryMaxHeight = 0;$/;"	v	line:130	file:
reorgRecoveryMode	omnicore.cpp	/^static int reorgRecoveryMode = 0;$/;"	v	line:128	file:
rounduint64	convert.cpp	/^uint64_t rounduint64(long double ld)$/;"	f	line:9	namespace:mastercore	signature:(long double ld)
rpcOnly	tx.h	/^    bool rpcOnly;$/;"	m	line:98	class:CMPTransaction	access:private
s_stolistdb	omnicore.cpp	/^CMPSTOList* mastercore::s_stolistdb;$/;"	m	line:139	class:mastercore	file:
saveAccept	dex.h	/^    void saveAccept(std::ofstream& file, SHA256_CTX* shaCtx, const std::string& address, const std::string& buyer) const$/;"	f	line:198	class:CMPAccept	access:public	signature:(std::ofstream& file, SHA256_CTX* shaCtx, const std::string& address, const std::string& buyer) const
saveCrowdSale	sp.cpp	/^void CMPCrowd::saveCrowdSale(std::ofstream& file, SHA256_CTX* shaCtx, const std::string& addr) const$/;"	f	line:57	class:CMPCrowd	signature:(std::ofstream& file, SHA256_CTX* shaCtx, const std::string& addr) const
saveOffer	dex.h	/^    void saveOffer(std::ofstream& file, SHA256_CTX* shaCtx, const std::string& address) const$/;"	f	line:90	class:CMPOffer	access:public	signature:(std::ofstream& file, SHA256_CTX* shaCtx, const std::string& address) const
saveOffer	mdex.cpp	/^void CMPMetaDEx::saveOffer(std::ofstream& file, SHA256_CTX* shaCtx) const$/;"	f	line:432	class:CMPMetaDEx	signature:(std::ofstream& file, SHA256_CTX* shaCtx) const
sender	tx.h	/^    std::string sender;$/;"	m	line:42	class:CMPTransaction	access:private
setAmountRemaining	mdex.cpp	/^void CMPMetaDEx::setAmountRemaining(int64_t amount, const std::string& label)$/;"	f	line:419	class:CMPMetaDEx	signature:(int64_t amount, const std::string& label)
setDBVersion	dbtxlist.cpp	/^int CMPTxList::setDBVersion()$/;"	f	line:363	class:CMPTxList	signature:()
setFreezingEnabledProperties	omnicore.cpp	/^std::set<std::pair<uint32_t,int> > setFreezingEnabledProperties;$/;"	v	line:155
setFrozenAddresses	omnicore.cpp	/^std::set<std::pair<std::string,uint32_t> > setFrozenAddresses;$/;"	v	line:157
setWatermark	dbspinfo.cpp	/^void CMPSPInfo::setWatermark(const uint256& watermark)$/;"	f	line:384	class:CMPSPInfo	signature:(const uint256& watermark)
showRefForTx	rpctxobject.cpp	/^bool showRefForTx(uint32_t txType)$/;"	f	line:241	signature:(uint32_t txType)
shuffleAndCheck	test/sender_bycontribution_tests.cpp	/^void shuffleAndCheck(std::vector<CTxOut>& vouts, unsigned nRounds)$/;"	f	line:418	signature:(std::vector<CTxOut>& vouts, unsigned nRounds)
src	pending.h	/^    std::string src;  \/\/ the source address$/;"	m	line:37	struct:CMPPending	access:public
statePrefix	persistence.cpp	/^static char const * const statePrefix[NUM_FILETYPES] = {$/;"	v	line:57	file:
strEcosystem	sp.cpp	/^std::string mastercore::strEcosystem(uint8_t ecosystem)$/;"	f	line:430	class:mastercore	signature:(uint8_t ecosystem)
strMPProperty	omnicore.cpp	/^std::string mastercore::strMPProperty(uint32_t propertyId)$/;"	f	line:171	class:mastercore	signature:(uint32_t propertyId)
strPropertyType	sp.cpp	/^std::string mastercore::strPropertyType(uint16_t propertyType)$/;"	f	line:420	class:mastercore	signature:(uint16_t propertyType)
strTransactionType	tx.cpp	/^std::string mastercore::strTransactionType(uint16_t txType)$/;"	f	line:44	class:mastercore	signature:(uint16_t txType)
subaction	dex.h	/^    uint8_t subaction;$/;"	m	line:56	class:CMPOffer	access:private
subaction	mdex.h	/^    uint8_t subaction;$/;"	m	line:48	class:CMPMetaDEx	access:private
subaction	tx.h	/^    unsigned char subaction;$/;"	m	line:85	class:CMPTransaction	access:private
subcategory	dbspinfo.h	/^        std::string subcategory;$/;"	m	line:55	struct:CMPSPInfo::Entry	access:public
subcategory	tx.h	/^    char subcategory[SP_STRING_FIELD_LEN];$/;"	m	line:68	class:CMPTransaction	access:private
syncoptions	dbbase.h	/^    leveldb::WriteOptions syncoptions;$/;"	m	line:30	class:CDBBase	access:protected
t_tradelistdb	omnicore.cpp	/^CMPTradeList* mastercore::t_tradelistdb;$/;"	m	line:137	class:mastercore	file:
testNetConsensusParams	rules.cpp	/^static CTestNetConsensusParams testNetConsensusParams;$/;"	m	line:288	namespace:mastercore	file:
timeclosed	dbspinfo.h	/^        int64_t timeclosed;$/;"	m	line:71	struct:CMPSPInfo::Entry	access:public
toString	sp.cpp	/^std::string CMPCrowd::toString(const std::string& address) const$/;"	f	line:46	class:CMPCrowd	signature:(const std::string& address) const
trade_MP	rpctx.cpp	/^UniValue trade_MP(const UniValue& params, bool fHelp)$/;"	f	line:865	signature:(const UniValue& params, bool fHelp)
transaction	createtx.h	/^    CMutableTransaction transaction;$/;"	m	line:125	class:TxBuilder	access:protected
txFundraiserData	sp.h	/^    std::map<uint256, std::vector<int64_t> > txFundraiserData;$/;"	m	line:44	class:CMPCrowd	access:private
txOut	createtx.h	/^    CTxOut txOut;$/;"	m	line:28	struct:PrevTxsEntry	access:public
txType	rules.h	/^    uint16_t txType;$/;"	m	line:48	struct:mastercore::TransactionRestriction	access:public
txVersion	rules.h	/^    uint16_t txVersion;$/;"	m	line:50	struct:mastercore::TransactionRestriction	access:public
tx_fee_paid	tx.h	/^    uint64_t tx_fee_paid;$/;"	m	line:36	class:CMPTransaction	access:private
tx_idx	tx.h	/^    unsigned int tx_idx;  \/\/ tx # within the block, 0-based$/;"	m	line:35	class:CMPTransaction	access:private
txid	dbspinfo.h	/^        uint256 txid;$/;"	m	line:75	struct:CMPSPInfo::Entry	access:public
txid	dex.h	/^    uint256 txid;$/;"	m	line:55	class:CMPOffer	access:private
txid	mdex.h	/^    uint256 txid;$/;"	m	line:41	class:CMPMetaDEx	access:private
txid	sp.h	/^    uint256 txid; \/\/ NOTE: not persisted as it doesnt seem used$/;"	m	line:40	class:CMPCrowd	access:private
txid	tx.h	/^    uint256 txid;$/;"	m	line:32	class:CMPTransaction	access:private
txid_close	dbspinfo.h	/^        uint256 txid_close;$/;"	m	line:72	struct:CMPSPInfo::Entry	access:public
type	pending.h	/^    uint32_t type;$/;"	m	line:40	struct:CMPPending	access:public
type	tx.h	/^    unsigned int type;$/;"	m	line:45	class:CMPTransaction	access:private
u_created	sp.h	/^    int64_t u_created;$/;"	m	line:37	class:CMPCrowd	access:private
uint256_const	uint256_extensions.h	/^namespace uint256_const {$/;"	n	line:17	namespace:mastercore
unfreezeAddress	omnicore.cpp	/^void mastercore::unfreezeAddress(const std::string& address, uint32_t propertyId)$/;"	f	line:410	class:mastercore	signature:(const std::string& address, uint32_t propertyId)
unitPrice	mdex.cpp	/^rational_t CMPMetaDEx::unitPrice() const$/;"	f	line:391	class:CMPMetaDEx	signature:() const
unlockLogic	tx.h	/^    void unlockLogic() { rpcOnly = false; };$/;"	f	line:300	class:CMPTransaction	access:public	signature:()
unsign	rpcmbstring.cpp	/^inline unsigned char unsign(char c)$/;"	f	line:20	namespace:mastercore::mbstring	signature:(char c)
update	omnicore.cpp	/^    void update(const CBlockIndex* pblockNow) const$/;"	f	line:1404	class:ProgressReporter	access:public	signature:(const CBlockIndex* pblockNow) const
updateMoney	tally.cpp	/^bool CMPTally::updateMoney(uint32_t propertyId, int64_t amount, TallyType ttype)$/;"	f	line:70	class:CMPTally	signature:(uint32_t propertyId, int64_t amount, TallyType ttype)
updateSP	dbspinfo.cpp	/^bool CMPSPInfo::updateSP(uint32_t propertyId, const Entry& info)$/;"	f	line:116	class:CMPSPInfo	signature:(uint32_t propertyId, const Entry& info)
update_block	dbspinfo.h	/^        uint256 update_block;$/;"	m	line:77	struct:CMPSPInfo::Entry	access:public
update_tally_map	omnicore.cpp	/^bool mastercore::update_tally_map(const std::string& who, uint32_t propertyId, int64_t amount, TallyType ttype)$/;"	f	line:483	class:mastercore	signature:(const std::string& who, uint32_t propertyId, int64_t amount, TallyType ttype)
url	dbspinfo.h	/^        std::string url;$/;"	m	line:57	struct:CMPSPInfo::Entry	access:public
url	tx.h	/^    char url[SP_STRING_FIELD_LEN];$/;"	m	line:70	class:CMPTransaction	access:private
vecCompletedActivations	activation.cpp	/^std::vector<FeatureActivation> vecCompletedActivations;$/;"	m	line:29	namespace:mastercore	file:
vecPendingActivations	activation.cpp	/^std::vector<FeatureActivation> vecPendingActivations;$/;"	m	line:27	namespace:mastercore	file:
version	tx.h	/^    unsigned short version; \/\/ = MP_TX_PKT_V0;$/;"	m	line:46	class:CMPTransaction	access:private
viewDummy	omnicore.cpp	/^CCoinsView mastercore::viewDummy;$/;"	m	line:796	class:mastercore	file:
viewDummy	omnicore.cpp	/^CCoinsViewCache mastercore::view(&viewDummy);$/;"	m	line:797	class:mastercore	file:
walletBalancesCache	walletcache.cpp	/^static std::map<std::string, CMPTally> walletBalancesCache;$/;"	m	line:34	namespace:mastercore	file:
write_globals_state	persistence.cpp	/^static int write_globals_state(std::ofstream& file, SHA256_CTX* shaCtx)$/;"	f	line:150	file:	signature:(std::ofstream& file, SHA256_CTX* shaCtx)
write_mp_accepts	persistence.cpp	/^static int write_mp_accepts(std::ofstream& file, SHA256_CTX* shaCtx)$/;"	f	line:136	file:	signature:(std::ofstream& file, SHA256_CTX* shaCtx)
write_mp_crowdsales	persistence.cpp	/^static int write_mp_crowdsales(std::ofstream& file, SHA256_CTX* shaCtx)$/;"	f	line:168	file:	signature:(std::ofstream& file, SHA256_CTX* shaCtx)
write_mp_metadex	persistence.cpp	/^static int write_mp_metadex(std::ofstream &file, SHA256_CTX* shaCtx)$/;"	f	line:179	file:	signature:(std::ofstream &file, SHA256_CTX* shaCtx)
write_mp_offers	persistence.cpp	/^static int write_mp_offers(std::ofstream& file, SHA256_CTX* shaCtx)$/;"	f	line:122	file:	signature:(std::ofstream& file, SHA256_CTX* shaCtx)
write_msc_balances	persistence.cpp	/^static int write_msc_balances(std::ofstream& file, SHA256_CTX* shaCtx)$/;"	f	line:77	file:	signature:(std::ofstream& file, SHA256_CTX* shaCtx)
write_state_file	persistence.cpp	/^static int write_state_file(const CBlockIndex* pBlockIndex, int what)$/;"	f	line:403	file:	signature:(const CBlockIndex* pBlockIndex, int what)
writeoptions	dbbase.h	/^    leveldb::WriteOptions writeoptions;$/;"	m	line:27	class:CDBBase	access:protected
xToRoundUpInt64	mdex.cpp	/^static int64_t xToRoundUpInt64(const rational_t& value)$/;"	f	line:102	file:	signature:(const rational_t& value)
xToString	mdex.cpp	/^std::string xToString(const dec_float& value)$/;"	f	line:112	signature:(const dec_float& value)
xToString	mdex.cpp	/^std::string xToString(const int128_t& value)$/;"	f	line:117	signature:(const int128_t& value)
xToString	mdex.cpp	/^std::string xToString(const rational_t& value)$/;"	f	line:122	signature:(const rational_t& value)
x_Trade	mdex.cpp	/^static MatchReturnType x_Trade(CMPMetaDEx* const pnew)$/;"	f	line:138	file:	signature:(CMPMetaDEx* const pnew)
~CConsensusParams	rules.h	/^    virtual ~CConsensusParams() {}$/;"	f	line:144	class:mastercore::CConsensusParams	access:public	signature:()
~CDBBase	dbbase.h	/^    virtual ~CDBBase()$/;"	f	line:53	class:CDBBase	access:protected	signature:()
~CMPSPInfo	dbspinfo.cpp	/^CMPSPInfo::~CMPSPInfo()$/;"	f	line:79	class:CMPSPInfo	signature:()
~CMPSTOList	dbstolist.cpp	/^CMPSTOList::~CMPSTOList()$/;"	f	line:37	class:CMPSTOList	signature:()
~CMPTradeList	dbtradelist.cpp	/^CMPTradeList::~CMPTradeList()$/;"	f	line:38	class:CMPTradeList	signature:()
~CMPTxList	dbtxlist.cpp	/^CMPTxList::~CMPTxList()$/;"	f	line:53	class:CMPTxList	signature:()
~CMainConsensusParams	rules.h	/^    virtual ~CMainConsensusParams() {}$/;"	f	line:159	class:mastercore::CMainConsensusParams	access:public	signature:()
~COmniFeeCache	dbfees.cpp	/^COmniFeeCache::~COmniFeeCache()$/;"	f	line:43	class:COmniFeeCache	signature:()
~COmniFeeHistory	dbfees.cpp	/^COmniFeeHistory::~COmniFeeHistory()$/;"	f	line:346	class:COmniFeeHistory	signature:()
~COmniTransactionDB	dbtransaction.cpp	/^COmniTransactionDB::~COmniTransactionDB()$/;"	f	line:27	class:COmniTransactionDB	signature:()
~CRegTestConsensusParams	rules.h	/^    virtual ~CRegTestConsensusParams() {}$/;"	f	line:184	class:mastercore::CRegTestConsensusParams	access:public	signature:()
~CTestNetConsensusParams	rules.h	/^    virtual ~CTestNetConsensusParams() {}$/;"	f	line:173	class:mastercore::CTestNetConsensusParams	access:public	signature:()
